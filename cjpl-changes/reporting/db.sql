--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: so_contract_transfer3(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION so_contract_transfer3() RETURNS trigger
    LANGUAGE plpgsql
    AS $$     BEGIN INSERT INTO account_analytic_invoice_line (name, price_unit,uom_id,product_id, quantity, analytic_account_id)  SELECT sale_order_line.name, sale_order_line.price_unit, sale_order_line.product_uom, sale_order_line.product_id, sale_order_line.product_uom_qty, account_analytic_account.id    FROM public.sale_order_line, public.account_analytic_account, public.sale_order   WHERE    sale_order_line.order_id = sale_order.id AND   sale_order.name = account_analytic_account.name AND NEW.name=NEW.x_saleorder_number AND   not exists (     select * from account_analytic_invoice_line where analytic_account_id = account_analytic_account.id  ); RETURN NULL;     END; $$;


ALTER FUNCTION public.so_contract_transfer3() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: account_account; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    code character varying(64) NOT NULL,
    create_date timestamp without time zone,
    reconcile boolean,
    user_type integer NOT NULL,
    write_uid integer,
    create_uid integer,
    company_id integer NOT NULL,
    shortcut character varying(12),
    note text,
    parent_id integer,
    type character varying NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    currency_id integer,
    name character varying NOT NULL,
    level integer,
    currency_mode character varying NOT NULL
);


ALTER TABLE public.account_account OWNER TO odoo;

--
-- Name: TABLE account_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account IS 'Account';


--
-- Name: COLUMN account_account.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.code IS 'Code';


--
-- Name: COLUMN account_account.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.create_date IS 'Created on';


--
-- Name: COLUMN account_account.reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.reconcile IS 'Allow Reconciliation';


--
-- Name: COLUMN account_account.user_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.user_type IS 'Account Type';


--
-- Name: COLUMN account_account.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_account.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.create_uid IS 'Created by';


--
-- Name: COLUMN account_account.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.company_id IS 'Company';


--
-- Name: COLUMN account_account.shortcut; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.shortcut IS 'Shortcut';


--
-- Name: COLUMN account_account.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.note IS 'Internal Notes';


--
-- Name: COLUMN account_account.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.parent_id IS 'Parent';


--
-- Name: COLUMN account_account.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.type IS 'Internal Type';


--
-- Name: COLUMN account_account.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_account.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.active IS 'Active';


--
-- Name: COLUMN account_account.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.currency_id IS 'Secondary Currency';


--
-- Name: COLUMN account_account.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.name IS 'Name';


--
-- Name: COLUMN account_account.level; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.level IS 'Level';


--
-- Name: COLUMN account_account.currency_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account.currency_mode IS 'Outgoing Currencies Rate';


--
-- Name: account_account_consol_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_consol_rel (
    child_id integer NOT NULL,
    parent_id integer NOT NULL
);


ALTER TABLE public.account_account_consol_rel OWNER TO odoo;

--
-- Name: TABLE account_account_consol_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_consol_rel IS 'RELATION BETWEEN account_account AND account_account';


--
-- Name: account_account_financial_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_financial_report (
    account_id integer NOT NULL,
    report_line_id integer NOT NULL
);


ALTER TABLE public.account_account_financial_report OWNER TO odoo;

--
-- Name: TABLE account_account_financial_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_financial_report IS 'RELATION BETWEEN account_account AND account_financial_report';


--
-- Name: account_account_financial_report_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_financial_report_type (
    report_id integer NOT NULL,
    account_type_id integer NOT NULL
);


ALTER TABLE public.account_account_financial_report_type OWNER TO odoo;

--
-- Name: TABLE account_account_financial_report_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_financial_report_type IS 'RELATION BETWEEN account_financial_report AND account_account_type';


--
-- Name: account_account_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_account_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_account_id_seq OWNER TO odoo;

--
-- Name: account_account_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_account_id_seq OWNED BY account_account.id;


--
-- Name: account_account_tax_default_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_tax_default_rel (
    account_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.account_account_tax_default_rel OWNER TO odoo;

--
-- Name: TABLE account_account_tax_default_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_tax_default_rel IS 'RELATION BETWEEN account_account AND account_tax';


--
-- Name: account_account_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_template (
    id integer NOT NULL,
    create_uid integer,
    code character varying(64) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    currency_id integer,
    user_type integer NOT NULL,
    chart_template_id integer,
    shortcut character varying(12),
    write_uid integer,
    note text,
    parent_id integer,
    nocreate boolean,
    write_date timestamp without time zone,
    reconcile boolean,
    type character varying NOT NULL
);


ALTER TABLE public.account_account_template OWNER TO odoo;

--
-- Name: TABLE account_account_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_template IS 'Templates for Accounts';


--
-- Name: COLUMN account_account_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_account_template.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.code IS 'Code';


--
-- Name: COLUMN account_account_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.create_date IS 'Created on';


--
-- Name: COLUMN account_account_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.name IS 'Name';


--
-- Name: COLUMN account_account_template.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.currency_id IS 'Secondary Currency';


--
-- Name: COLUMN account_account_template.user_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.user_type IS 'Account Type';


--
-- Name: COLUMN account_account_template.chart_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.chart_template_id IS 'Chart Template';


--
-- Name: COLUMN account_account_template.shortcut; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.shortcut IS 'Shortcut';


--
-- Name: COLUMN account_account_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_account_template.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.note IS 'Note';


--
-- Name: COLUMN account_account_template.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.parent_id IS 'Parent Account Template';


--
-- Name: COLUMN account_account_template.nocreate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.nocreate IS 'Optional create';


--
-- Name: COLUMN account_account_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_account_template.reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.reconcile IS 'Allow Reconciliation';


--
-- Name: COLUMN account_account_template.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_template.type IS 'Internal Type';


--
-- Name: account_account_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_account_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_account_template_id_seq OWNER TO odoo;

--
-- Name: account_account_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_account_template_id_seq OWNED BY account_account_template.id;


--
-- Name: account_account_template_tax_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_template_tax_rel (
    account_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.account_account_template_tax_rel OWNER TO odoo;

--
-- Name: TABLE account_account_template_tax_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_template_tax_rel IS 'RELATION BETWEEN account_account_template AND account_tax_template';


--
-- Name: account_account_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_type (
    id integer NOT NULL,
    create_uid integer,
    code character varying(32) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    note text,
    close_method character varying NOT NULL,
    report_type character varying NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.account_account_type OWNER TO odoo;

--
-- Name: TABLE account_account_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_type IS 'Account Type';


--
-- Name: COLUMN account_account_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.create_uid IS 'Created by';


--
-- Name: COLUMN account_account_type.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.code IS 'Code';


--
-- Name: COLUMN account_account_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.create_date IS 'Created on';


--
-- Name: COLUMN account_account_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.name IS 'Account Type';


--
-- Name: COLUMN account_account_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_account_type.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.note IS 'Description';


--
-- Name: COLUMN account_account_type.close_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.close_method IS 'Deferral Method';


--
-- Name: COLUMN account_account_type.report_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.report_type IS 'P&L / BS Category';


--
-- Name: COLUMN account_account_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_account_type.write_date IS 'Last Updated on';


--
-- Name: account_account_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_account_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_account_type_id_seq OWNER TO odoo;

--
-- Name: account_account_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_account_type_id_seq OWNED BY account_account_type.id;


--
-- Name: account_account_type_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_account_type_rel (
    journal_id integer NOT NULL,
    account_id integer NOT NULL
);


ALTER TABLE public.account_account_type_rel OWNER TO odoo;

--
-- Name: TABLE account_account_type_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_account_type_rel IS 'RELATION BETWEEN account_journal AND account_account';


--
-- Name: account_addtmpl_wizard; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_addtmpl_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    cparent_id integer NOT NULL
);


ALTER TABLE public.account_addtmpl_wizard OWNER TO odoo;

--
-- Name: TABLE account_addtmpl_wizard; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_addtmpl_wizard IS 'account.addtmpl.wizard';


--
-- Name: COLUMN account_addtmpl_wizard.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_addtmpl_wizard.create_uid IS 'Created by';


--
-- Name: COLUMN account_addtmpl_wizard.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_addtmpl_wizard.create_date IS 'Created on';


--
-- Name: COLUMN account_addtmpl_wizard.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_addtmpl_wizard.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_addtmpl_wizard.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_addtmpl_wizard.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_addtmpl_wizard.cparent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_addtmpl_wizard.cparent_id IS 'Parent target';


--
-- Name: account_addtmpl_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_addtmpl_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_addtmpl_wizard_id_seq OWNER TO odoo;

--
-- Name: account_addtmpl_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_addtmpl_wizard_id_seq OWNED BY account_addtmpl_wizard.id;


--
-- Name: account_aged_trial_balance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_aged_trial_balance (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    period_length integer NOT NULL,
    period_to integer,
    date_from date,
    direction_selection character varying NOT NULL,
    result_selection character varying NOT NULL,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_aged_trial_balance OWNER TO odoo;

--
-- Name: TABLE account_aged_trial_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_aged_trial_balance IS 'Account Aged Trial balance Report';


--
-- Name: COLUMN account_aged_trial_balance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.create_uid IS 'Created by';


--
-- Name: COLUMN account_aged_trial_balance.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_aged_trial_balance.period_length; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.period_length IS 'Period Length (days)';


--
-- Name: COLUMN account_aged_trial_balance.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.period_to IS 'End Period';


--
-- Name: COLUMN account_aged_trial_balance.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.date_from IS 'Start Date';


--
-- Name: COLUMN account_aged_trial_balance.direction_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.direction_selection IS 'Analysis Direction';


--
-- Name: COLUMN account_aged_trial_balance.result_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.result_selection IS 'Partner''s';


--
-- Name: COLUMN account_aged_trial_balance.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.filter IS 'Filter by';


--
-- Name: COLUMN account_aged_trial_balance.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.period_from IS 'Start Period';


--
-- Name: COLUMN account_aged_trial_balance.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_aged_trial_balance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_aged_trial_balance.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.date_to IS 'End Date';


--
-- Name: COLUMN account_aged_trial_balance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.create_date IS 'Created on';


--
-- Name: COLUMN account_aged_trial_balance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_aged_trial_balance.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_aged_trial_balance.target_move IS 'Target Moves';


--
-- Name: account_aged_trial_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_aged_trial_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_aged_trial_balance_id_seq OWNER TO odoo;

--
-- Name: account_aged_trial_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_aged_trial_balance_id_seq OWNED BY account_aged_trial_balance.id;


--
-- Name: account_aged_trial_balance_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_aged_trial_balance_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_aged_trial_balance_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_aged_trial_balance_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_aged_trial_balance_journal_rel IS 'RELATION BETWEEN account_aged_trial_balance AND account_journal';


--
-- Name: account_analytic_account; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_account (
    id integer NOT NULL,
    code character varying,
    create_date timestamp without time zone,
    quantity_max double precision,
    write_uid integer,
    currency_id integer,
    partner_id integer,
    create_uid integer,
    user_id integer,
    date_start date,
    message_last_post timestamp without time zone,
    company_id integer,
    parent_id integer,
    state character varying NOT NULL,
    manager_id integer,
    type character varying NOT NULL,
    description text,
    write_date timestamp without time zone,
    date date,
    name character varying NOT NULL,
    template_id integer,
    use_timesheets boolean,
    amount_max double precision,
    pricelist_id integer,
    to_invoice integer,
    is_overdue_quantity boolean,
    hours_qtt_est double precision,
    recurring_next_date date,
    fix_price_invoices boolean,
    invoice_on_timesheets boolean,
    recurring_invoices boolean,
    recurring_interval integer,
    recurring_rule_type character varying,
    use_tasks boolean,
    journal_id integer,
    use_issues boolean,
    x_kind_attn character varying,
    x_po_ref character varying,
    x_saleorder_upload character varying,
    x_contract_invoiceline character varying,
    x_saleorder_number character varying
);


ALTER TABLE public.account_analytic_account OWNER TO odoo;

--
-- Name: TABLE account_analytic_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_account IS 'Analytic Account';


--
-- Name: COLUMN account_analytic_account.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.code IS 'Reference';


--
-- Name: COLUMN account_analytic_account.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_account.quantity_max; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.quantity_max IS 'Prepaid Service Units';


--
-- Name: COLUMN account_analytic_account.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_account.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.currency_id IS 'Currency';


--
-- Name: COLUMN account_analytic_account.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.partner_id IS 'Customer';


--
-- Name: COLUMN account_analytic_account.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_account.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.user_id IS 'Project Manager';


--
-- Name: COLUMN account_analytic_account.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.date_start IS 'Start Date';


--
-- Name: COLUMN account_analytic_account.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN account_analytic_account.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.company_id IS 'Company';


--
-- Name: COLUMN account_analytic_account.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.parent_id IS 'Parent Analytic Account';


--
-- Name: COLUMN account_analytic_account.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.state IS 'Status';


--
-- Name: COLUMN account_analytic_account.manager_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.manager_id IS 'Account Manager';


--
-- Name: COLUMN account_analytic_account.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.type IS 'Type of Account';


--
-- Name: COLUMN account_analytic_account.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.description IS 'Description';


--
-- Name: COLUMN account_analytic_account.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_analytic_account.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.date IS 'Expiration Date';


--
-- Name: COLUMN account_analytic_account.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.name IS 'Account/Contract Name';


--
-- Name: COLUMN account_analytic_account.template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.template_id IS 'Template of Contract';


--
-- Name: COLUMN account_analytic_account.use_timesheets; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.use_timesheets IS 'Timesheets';


--
-- Name: COLUMN account_analytic_account.amount_max; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.amount_max IS 'Max. Invoice Price';


--
-- Name: COLUMN account_analytic_account.pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.pricelist_id IS 'Pricelist';


--
-- Name: COLUMN account_analytic_account.to_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.to_invoice IS 'Timesheet Invoicing Ratio';


--
-- Name: COLUMN account_analytic_account.is_overdue_quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.is_overdue_quantity IS 'Overdue Quantity';


--
-- Name: COLUMN account_analytic_account.hours_qtt_est; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.hours_qtt_est IS 'Estimation of Hours to Invoice';


--
-- Name: COLUMN account_analytic_account.recurring_next_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.recurring_next_date IS 'Date of Next Invoice';


--
-- Name: COLUMN account_analytic_account.fix_price_invoices; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.fix_price_invoices IS 'Fixed Price';


--
-- Name: COLUMN account_analytic_account.invoice_on_timesheets; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.invoice_on_timesheets IS 'On Timesheets';


--
-- Name: COLUMN account_analytic_account.recurring_invoices; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.recurring_invoices IS 'Generate recurring invoices automatically';


--
-- Name: COLUMN account_analytic_account.recurring_interval; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.recurring_interval IS 'Repeat Every';


--
-- Name: COLUMN account_analytic_account.recurring_rule_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.recurring_rule_type IS 'Recurrency';


--
-- Name: COLUMN account_analytic_account.use_tasks; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.use_tasks IS 'Tasks';


--
-- Name: COLUMN account_analytic_account.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.journal_id IS 'Journal';


--
-- Name: COLUMN account_analytic_account.use_issues; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.use_issues IS 'Issues';


--
-- Name: COLUMN account_analytic_account.x_kind_attn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.x_kind_attn IS 'Contact (Kind Attn:)';


--
-- Name: COLUMN account_analytic_account.x_po_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.x_po_ref IS 'P.O. Number';


--
-- Name: COLUMN account_analytic_account.x_saleorder_upload; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.x_saleorder_upload IS 'SaleOrder Line Upload Template';


--
-- Name: COLUMN account_analytic_account.x_contract_invoiceline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.x_contract_invoiceline IS 'Contract Sale Order Link';


--
-- Name: COLUMN account_analytic_account.x_saleorder_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_account.x_saleorder_number IS 'Confirm Sale Order Number';


--
-- Name: account_analytic_account_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_account_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_account_id_seq OWNER TO odoo;

--
-- Name: account_analytic_account_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_account_id_seq OWNED BY account_analytic_account.id;


--
-- Name: account_analytic_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_journal (
    id integer NOT NULL,
    create_uid integer,
    code character varying(8),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean,
    type character varying NOT NULL
);


ALTER TABLE public.account_analytic_journal OWNER TO odoo;

--
-- Name: TABLE account_analytic_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_journal IS 'Analytic Journal';


--
-- Name: COLUMN account_analytic_journal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_journal.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.code IS 'Journal Code';


--
-- Name: COLUMN account_analytic_journal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_journal.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.name IS 'Journal Name';


--
-- Name: COLUMN account_analytic_journal.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.company_id IS 'Company';


--
-- Name: COLUMN account_analytic_journal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_journal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_analytic_journal.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.active IS 'Active';


--
-- Name: COLUMN account_analytic_journal.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal.type IS 'Type';


--
-- Name: account_analytic_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_line (
    id integer NOT NULL,
    create_uid integer,
    user_id integer,
    account_id integer NOT NULL,
    company_id integer,
    write_uid integer,
    amount numeric NOT NULL,
    unit_amount double precision,
    date date NOT NULL,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    name character varying NOT NULL,
    code character varying(8),
    general_account_id integer NOT NULL,
    product_uom_id integer,
    journal_id integer NOT NULL,
    currency_id integer,
    product_id integer,
    amount_currency numeric,
    ref character varying,
    move_id integer,
    invoice_id integer,
    to_invoice integer
);


ALTER TABLE public.account_analytic_line OWNER TO odoo;

--
-- Name: TABLE account_analytic_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_line IS 'Analytic Line';


--
-- Name: COLUMN account_analytic_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_line.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.user_id IS 'User';


--
-- Name: COLUMN account_analytic_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.account_id IS 'Analytic Account';


--
-- Name: COLUMN account_analytic_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.company_id IS 'Company';


--
-- Name: COLUMN account_analytic_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_line.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.amount IS 'Amount';


--
-- Name: COLUMN account_analytic_line.unit_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.unit_amount IS 'Quantity';


--
-- Name: COLUMN account_analytic_line.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.date IS 'Date';


--
-- Name: COLUMN account_analytic_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_analytic_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.name IS 'Description';


--
-- Name: COLUMN account_analytic_line.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.code IS 'Code';


--
-- Name: COLUMN account_analytic_line.general_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.general_account_id IS 'General Account';


--
-- Name: COLUMN account_analytic_line.product_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.product_uom_id IS 'Unit of Measure';


--
-- Name: COLUMN account_analytic_line.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.journal_id IS 'Analytic Journal';


--
-- Name: COLUMN account_analytic_line.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.currency_id IS 'Account Currency';


--
-- Name: COLUMN account_analytic_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.product_id IS 'Product';


--
-- Name: COLUMN account_analytic_line.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.amount_currency IS 'Amount Currency';


--
-- Name: COLUMN account_analytic_line.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.ref IS 'Ref.';


--
-- Name: COLUMN account_analytic_line.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.move_id IS 'Move Line';


--
-- Name: COLUMN account_analytic_line.invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.invoice_id IS 'Invoice';


--
-- Name: COLUMN account_analytic_line.to_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_line.to_invoice IS 'Invoiceable';


--
-- Name: account_analytic_analysis_summary_month; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW account_analytic_analysis_summary_month AS
 SELECT ((to_number(to_char(d.month, 'YYYYMM'::text), '999999'::text) + ((d.account_id * (1000000)::bigint))::numeric))::bigint AS id,
    d.account_id,
    to_char(d.month, 'Mon YYYY'::text) AS month,
    to_number(to_char(d.month, 'YYYYMM'::text), '999999'::text) AS month_id,
    COALESCE(sum(l.unit_amount), (0.0)::double precision) AS unit_amount
   FROM (( SELECT d2.account_id,
            d2.month
           FROM ( SELECT a.id AS account_id,
                    l_1.month
                   FROM ( SELECT date_trunc('month'::text, (l_2.date)::timestamp with time zone) AS month
                           FROM account_analytic_line l_2,
                            account_analytic_journal j
                          WHERE ((j.type)::text = 'general'::text)
                          GROUP BY date_trunc('month'::text, (l_2.date)::timestamp with time zone)) l_1,
                    account_analytic_account a
                  GROUP BY l_1.month, a.id) d2
          GROUP BY d2.account_id, d2.month) d
     LEFT JOIN ( SELECT l_1.account_id,
            date_trunc('month'::text, (l_1.date)::timestamp with time zone) AS month,
            sum(l_1.unit_amount) AS unit_amount
           FROM account_analytic_line l_1,
            account_analytic_journal j
          WHERE (((j.type)::text = 'general'::text) AND (j.id = l_1.journal_id))
          GROUP BY l_1.account_id, date_trunc('month'::text, (l_1.date)::timestamp with time zone)) l ON (((d.account_id = l.account_id) AND (d.month = l.month))))
  GROUP BY d.month, d.account_id;


ALTER TABLE public.account_analytic_analysis_summary_month OWNER TO odoo;

--
-- Name: res_users; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_users (
    id integer NOT NULL,
    active boolean DEFAULT true,
    login character varying(64) NOT NULL,
    password character varying,
    company_id integer NOT NULL,
    partner_id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    login_date date,
    write_uid integer,
    write_date timestamp without time zone,
    signature text,
    action_id integer,
    password_crypt character varying,
    alias_id integer NOT NULL,
    display_groups_suggestions boolean,
    default_section_id integer,
    share boolean,
    display_employees_suggestions boolean,
    x_designation character varying
);


ALTER TABLE public.res_users OWNER TO odoo;

--
-- Name: COLUMN res_users.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.create_uid IS 'Created by';


--
-- Name: COLUMN res_users.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.create_date IS 'Created on';


--
-- Name: COLUMN res_users.login_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.login_date IS 'Latest connection';


--
-- Name: COLUMN res_users.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_users.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_users.signature; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.signature IS 'Signature';


--
-- Name: COLUMN res_users.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.action_id IS 'Home Action';


--
-- Name: COLUMN res_users.password_crypt; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.password_crypt IS 'Encrypted Password';


--
-- Name: COLUMN res_users.alias_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.alias_id IS 'Alias';


--
-- Name: COLUMN res_users.display_groups_suggestions; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.display_groups_suggestions IS 'Display Groups Suggestions';


--
-- Name: COLUMN res_users.default_section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.default_section_id IS 'Default Sales Team';


--
-- Name: COLUMN res_users.share; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.share IS 'Share User';


--
-- Name: COLUMN res_users.display_employees_suggestions; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.display_employees_suggestions IS 'Display Employees Suggestions';


--
-- Name: COLUMN res_users.x_designation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_users.x_designation IS 'Designation';


--
-- Name: account_analytic_analysis_summary_user; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW account_analytic_analysis_summary_user AS
 WITH mu AS (
         SELECT max(res_users.id) AS max_user
           FROM res_users
        ), lu AS (
         SELECT l.account_id,
            COALESCE(l.user_id, 0) AS user_id,
            sum(l.unit_amount) AS unit_amount
           FROM account_analytic_line l,
            account_analytic_journal j
          WHERE (((j.type)::text = 'general'::text) AND (j.id = l.journal_id))
          GROUP BY l.account_id, l.user_id
        )
 SELECT ((lu.account_id * mu.max_user) + lu.user_id) AS id,
    lu.account_id,
    lu.user_id AS "user",
    lu.unit_amount
   FROM lu,
    mu;


ALTER TABLE public.account_analytic_analysis_summary_user OWNER TO odoo;

--
-- Name: account_analytic_balance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_balance (
    id integer NOT NULL,
    date1 date NOT NULL,
    create_uid integer,
    date2 date NOT NULL,
    create_date timestamp without time zone,
    empty_acc boolean,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_balance OWNER TO odoo;

--
-- Name: TABLE account_analytic_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_balance IS 'Account Analytic Balance';


--
-- Name: COLUMN account_analytic_balance.date1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.date1 IS 'Start of period';


--
-- Name: COLUMN account_analytic_balance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_balance.date2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.date2 IS 'End of period';


--
-- Name: COLUMN account_analytic_balance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_balance.empty_acc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.empty_acc IS 'Empty Accounts ? ';


--
-- Name: COLUMN account_analytic_balance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_balance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_balance.write_date IS 'Last Updated on';


--
-- Name: account_analytic_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_balance_id_seq OWNER TO odoo;

--
-- Name: account_analytic_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_balance_id_seq OWNED BY account_analytic_balance.id;


--
-- Name: account_analytic_chart; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_chart (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    from_date date,
    to_date date,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_chart OWNER TO odoo;

--
-- Name: TABLE account_analytic_chart; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_chart IS 'Account Analytic Chart';


--
-- Name: COLUMN account_analytic_chart.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_chart.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_chart.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_chart.from_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.from_date IS 'From';


--
-- Name: COLUMN account_analytic_chart.to_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.to_date IS 'To';


--
-- Name: COLUMN account_analytic_chart.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_chart.write_date IS 'Last Updated on';


--
-- Name: account_analytic_chart_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_chart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_chart_id_seq OWNER TO odoo;

--
-- Name: account_analytic_chart_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_chart_id_seq OWNED BY account_analytic_chart.id;


--
-- Name: account_analytic_cost_ledger; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_cost_ledger (
    id integer NOT NULL,
    date1 date NOT NULL,
    create_uid integer,
    date2 date NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_cost_ledger OWNER TO odoo;

--
-- Name: TABLE account_analytic_cost_ledger; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_cost_ledger IS 'Account Analytic Cost Ledger';


--
-- Name: COLUMN account_analytic_cost_ledger.date1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.date1 IS 'Start of period';


--
-- Name: COLUMN account_analytic_cost_ledger.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_cost_ledger.date2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.date2 IS 'End of period';


--
-- Name: COLUMN account_analytic_cost_ledger.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_cost_ledger.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_cost_ledger.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger.write_date IS 'Last Updated on';


--
-- Name: account_analytic_cost_ledger_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_cost_ledger_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_cost_ledger_id_seq OWNER TO odoo;

--
-- Name: account_analytic_cost_ledger_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_cost_ledger_id_seq OWNED BY account_analytic_cost_ledger.id;


--
-- Name: account_analytic_cost_ledger_journal_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_cost_ledger_journal_report (
    id integer NOT NULL,
    date1 date NOT NULL,
    create_uid integer,
    date2 date NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_cost_ledger_journal_report OWNER TO odoo;

--
-- Name: TABLE account_analytic_cost_ledger_journal_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_cost_ledger_journal_report IS 'Account Analytic Cost Ledger For Journal Report';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.date1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.date1 IS 'Start of period';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.date2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.date2 IS 'End of period';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_cost_ledger_journal_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_cost_ledger_journal_report.write_date IS 'Last Updated on';


--
-- Name: account_analytic_cost_ledger_journal_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_cost_ledger_journal_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_cost_ledger_journal_report_id_seq OWNER TO odoo;

--
-- Name: account_analytic_cost_ledger_journal_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_cost_ledger_journal_report_id_seq OWNED BY account_analytic_cost_ledger_journal_report.id;


--
-- Name: account_analytic_inverted_balance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_inverted_balance (
    id integer NOT NULL,
    date1 date NOT NULL,
    create_uid integer,
    date2 date NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_inverted_balance OWNER TO odoo;

--
-- Name: TABLE account_analytic_inverted_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_inverted_balance IS 'Account Analytic Inverted Balance';


--
-- Name: COLUMN account_analytic_inverted_balance.date1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.date1 IS 'Start of period';


--
-- Name: COLUMN account_analytic_inverted_balance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_inverted_balance.date2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.date2 IS 'End of period';


--
-- Name: COLUMN account_analytic_inverted_balance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_inverted_balance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_inverted_balance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_inverted_balance.write_date IS 'Last Updated on';


--
-- Name: account_analytic_inverted_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_inverted_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_inverted_balance_id_seq OWNER TO odoo;

--
-- Name: account_analytic_inverted_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_inverted_balance_id_seq OWNED BY account_analytic_inverted_balance.id;


--
-- Name: account_analytic_invoice_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_invoice_line (
    id integer NOT NULL,
    analytic_account_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    name text NOT NULL,
    price_unit double precision NOT NULL,
    write_uid integer,
    uom_id integer NOT NULL,
    write_date timestamp without time zone,
    quantity double precision NOT NULL,
    product_id integer NOT NULL,
    discount numeric
);


ALTER TABLE public.account_analytic_invoice_line OWNER TO odoo;

--
-- Name: TABLE account_analytic_invoice_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_invoice_line IS 'account.analytic.invoice.line';


--
-- Name: COLUMN account_analytic_invoice_line.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_analytic_invoice_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_invoice_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_invoice_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.name IS 'Description';


--
-- Name: COLUMN account_analytic_invoice_line.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.price_unit IS 'Unit Price';


--
-- Name: COLUMN account_analytic_invoice_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_invoice_line.uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.uom_id IS 'Unit of Measure';


--
-- Name: COLUMN account_analytic_invoice_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_analytic_invoice_line.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.quantity IS 'Quantity';


--
-- Name: COLUMN account_analytic_invoice_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.product_id IS 'Product';


--
-- Name: COLUMN account_analytic_invoice_line.discount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_invoice_line.discount IS 'Discount (%)';


--
-- Name: account_analytic_invoice_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_invoice_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_invoice_line_id_seq OWNER TO odoo;

--
-- Name: account_analytic_invoice_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_invoice_line_id_seq OWNED BY account_analytic_invoice_line.id;


--
-- Name: account_analytic_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_journal_id_seq OWNER TO odoo;

--
-- Name: account_analytic_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_journal_id_seq OWNED BY account_analytic_journal.id;


--
-- Name: account_analytic_journal_name; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_journal_name (
    journal_line_id integer NOT NULL,
    journal_print_id integer NOT NULL
);


ALTER TABLE public.account_analytic_journal_name OWNER TO odoo;

--
-- Name: TABLE account_analytic_journal_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_journal_name IS 'RELATION BETWEEN account_analytic_journal_report AND account_analytic_journal';


--
-- Name: account_analytic_journal_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_analytic_journal_report (
    id integer NOT NULL,
    date1 date NOT NULL,
    create_uid integer,
    date2 date NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_analytic_journal_report OWNER TO odoo;

--
-- Name: TABLE account_analytic_journal_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_analytic_journal_report IS 'Account Analytic Journal';


--
-- Name: COLUMN account_analytic_journal_report.date1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.date1 IS 'Start of period';


--
-- Name: COLUMN account_analytic_journal_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_analytic_journal_report.date2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.date2 IS 'End of period';


--
-- Name: COLUMN account_analytic_journal_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.create_date IS 'Created on';


--
-- Name: COLUMN account_analytic_journal_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_analytic_journal_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_analytic_journal_report.write_date IS 'Last Updated on';


--
-- Name: account_analytic_journal_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_journal_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_journal_report_id_seq OWNER TO odoo;

--
-- Name: account_analytic_journal_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_journal_report_id_seq OWNED BY account_analytic_journal_report.id;


--
-- Name: account_analytic_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_analytic_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_analytic_line_id_seq OWNER TO odoo;

--
-- Name: account_analytic_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_analytic_line_id_seq OWNED BY account_analytic_line.id;


--
-- Name: account_automatic_reconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_automatic_reconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    power integer NOT NULL,
    max_amount double precision,
    unreconciled integer,
    reconciled integer,
    journal_id integer,
    allow_write_off boolean,
    writeoff_acc_id integer,
    period_id integer,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_automatic_reconcile OWNER TO odoo;

--
-- Name: TABLE account_automatic_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_automatic_reconcile IS 'Automatic Reconcile';


--
-- Name: COLUMN account_automatic_reconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_automatic_reconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.create_date IS 'Created on';


--
-- Name: COLUMN account_automatic_reconcile.power; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.power IS 'Power';


--
-- Name: COLUMN account_automatic_reconcile.max_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.max_amount IS 'Maximum write-off amount';


--
-- Name: COLUMN account_automatic_reconcile.unreconciled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.unreconciled IS 'Not reconciled transactions';


--
-- Name: COLUMN account_automatic_reconcile.reconciled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.reconciled IS 'Reconciled transactions';


--
-- Name: COLUMN account_automatic_reconcile.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.journal_id IS 'Journal';


--
-- Name: COLUMN account_automatic_reconcile.allow_write_off; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.allow_write_off IS 'Allow write off';


--
-- Name: COLUMN account_automatic_reconcile.writeoff_acc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.writeoff_acc_id IS 'Account';


--
-- Name: COLUMN account_automatic_reconcile.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.period_id IS 'Period';


--
-- Name: COLUMN account_automatic_reconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_automatic_reconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_automatic_reconcile.write_uid IS 'Last Updated by';


--
-- Name: account_automatic_reconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_automatic_reconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_automatic_reconcile_id_seq OWNER TO odoo;

--
-- Name: account_automatic_reconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_automatic_reconcile_id_seq OWNED BY account_automatic_reconcile.id;


--
-- Name: account_balance_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_balance_report (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    display_account character varying NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_balance_report OWNER TO odoo;

--
-- Name: TABLE account_balance_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_balance_report IS 'Trial Balance Report';


--
-- Name: COLUMN account_balance_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_balance_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_balance_report.display_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.display_account IS 'Display Accounts';


--
-- Name: COLUMN account_balance_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.date_from IS 'Start Date';


--
-- Name: COLUMN account_balance_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.period_to IS 'End Period';


--
-- Name: COLUMN account_balance_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.filter IS 'Filter by';


--
-- Name: COLUMN account_balance_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.period_from IS 'Start Period';


--
-- Name: COLUMN account_balance_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_balance_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_balance_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.date_to IS 'End Date';


--
-- Name: COLUMN account_balance_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.create_date IS 'Created on';


--
-- Name: COLUMN account_balance_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_balance_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_balance_report.target_move IS 'Target Moves';


--
-- Name: account_balance_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_balance_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_balance_report_id_seq OWNER TO odoo;

--
-- Name: account_balance_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_balance_report_id_seq OWNED BY account_balance_report.id;


--
-- Name: account_balance_report_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_balance_report_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_balance_report_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_balance_report_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_balance_report_journal_rel IS 'RELATION BETWEEN account_balance_report AND account_journal';


--
-- Name: account_bank_accounts_wizard; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_bank_accounts_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    bank_account_id integer NOT NULL,
    acc_name character varying NOT NULL,
    write_uid integer,
    currency_id integer,
    write_date timestamp without time zone,
    account_type character varying
);


ALTER TABLE public.account_bank_accounts_wizard OWNER TO odoo;

--
-- Name: TABLE account_bank_accounts_wizard; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_bank_accounts_wizard IS 'account.bank.accounts.wizard';


--
-- Name: COLUMN account_bank_accounts_wizard.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.create_uid IS 'Created by';


--
-- Name: COLUMN account_bank_accounts_wizard.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.create_date IS 'Created on';


--
-- Name: COLUMN account_bank_accounts_wizard.bank_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.bank_account_id IS 'Bank Account';


--
-- Name: COLUMN account_bank_accounts_wizard.acc_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.acc_name IS 'Account Name.';


--
-- Name: COLUMN account_bank_accounts_wizard.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_bank_accounts_wizard.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.currency_id IS 'Secondary Currency';


--
-- Name: COLUMN account_bank_accounts_wizard.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_bank_accounts_wizard.account_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_accounts_wizard.account_type IS 'Account Type';


--
-- Name: account_bank_accounts_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_bank_accounts_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_bank_accounts_wizard_id_seq OWNER TO odoo;

--
-- Name: account_bank_accounts_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_bank_accounts_wizard_id_seq OWNED BY account_bank_accounts_wizard.id;


--
-- Name: account_bank_statement; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_bank_statement (
    id integer NOT NULL,
    create_date timestamp without time zone,
    balance_start numeric,
    company_id integer,
    write_uid integer,
    create_uid integer,
    user_id integer,
    message_last_post timestamp without time zone,
    journal_id integer NOT NULL,
    state character varying NOT NULL,
    period_id integer NOT NULL,
    total_entry_encoding numeric,
    write_date timestamp without time zone,
    date date NOT NULL,
    name character varying,
    closing_date timestamp without time zone,
    balance_end numeric,
    balance_end_real numeric
);


ALTER TABLE public.account_bank_statement OWNER TO odoo;

--
-- Name: TABLE account_bank_statement; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_bank_statement IS 'Bank Statement';


--
-- Name: COLUMN account_bank_statement.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.create_date IS 'Created on';


--
-- Name: COLUMN account_bank_statement.balance_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.balance_start IS 'Starting Balance';


--
-- Name: COLUMN account_bank_statement.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.company_id IS 'Company';


--
-- Name: COLUMN account_bank_statement.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_bank_statement.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.create_uid IS 'Created by';


--
-- Name: COLUMN account_bank_statement.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.user_id IS 'Responsible';


--
-- Name: COLUMN account_bank_statement.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN account_bank_statement.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.journal_id IS 'Journal';


--
-- Name: COLUMN account_bank_statement.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.state IS 'Status';


--
-- Name: COLUMN account_bank_statement.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.period_id IS 'Period';


--
-- Name: COLUMN account_bank_statement.total_entry_encoding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.total_entry_encoding IS 'Total Transactions';


--
-- Name: COLUMN account_bank_statement.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_bank_statement.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.date IS 'Date';


--
-- Name: COLUMN account_bank_statement.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.name IS 'Reference';


--
-- Name: COLUMN account_bank_statement.closing_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.closing_date IS 'Closed On';


--
-- Name: COLUMN account_bank_statement.balance_end; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.balance_end IS 'Computed Balance';


--
-- Name: COLUMN account_bank_statement.balance_end_real; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement.balance_end_real IS 'Ending Balance';


--
-- Name: account_bank_statement_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_bank_statement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_bank_statement_id_seq OWNER TO odoo;

--
-- Name: account_bank_statement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_bank_statement_id_seq OWNED BY account_bank_statement.id;


--
-- Name: account_bank_statement_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_bank_statement_line (
    id integer NOT NULL,
    create_uid integer,
    note text,
    create_date timestamp without time zone,
    statement_id integer NOT NULL,
    name character varying NOT NULL,
    sequence integer,
    partner_name character varying,
    ref character varying,
    journal_id integer,
    amount_currency numeric,
    company_id integer,
    currency_id integer,
    amount numeric,
    write_date timestamp without time zone,
    bank_account_id integer,
    date date NOT NULL,
    journal_entry_id integer,
    write_uid integer,
    partner_id integer,
    account_id integer
);


ALTER TABLE public.account_bank_statement_line OWNER TO odoo;

--
-- Name: TABLE account_bank_statement_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_bank_statement_line IS 'Bank Statement Line';


--
-- Name: COLUMN account_bank_statement_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_bank_statement_line.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.note IS 'Notes';


--
-- Name: COLUMN account_bank_statement_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.create_date IS 'Created on';


--
-- Name: COLUMN account_bank_statement_line.statement_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.statement_id IS 'Statement';


--
-- Name: COLUMN account_bank_statement_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.name IS 'Communication';


--
-- Name: COLUMN account_bank_statement_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.sequence IS 'Sequence';


--
-- Name: COLUMN account_bank_statement_line.partner_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.partner_name IS 'Partner Name';


--
-- Name: COLUMN account_bank_statement_line.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.ref IS 'Reference';


--
-- Name: COLUMN account_bank_statement_line.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.journal_id IS 'Journal';


--
-- Name: COLUMN account_bank_statement_line.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.amount_currency IS 'Amount Currency';


--
-- Name: COLUMN account_bank_statement_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.company_id IS 'Company';


--
-- Name: COLUMN account_bank_statement_line.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.currency_id IS 'Currency';


--
-- Name: COLUMN account_bank_statement_line.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.amount IS 'Amount';


--
-- Name: COLUMN account_bank_statement_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_bank_statement_line.bank_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.bank_account_id IS 'Bank Account';


--
-- Name: COLUMN account_bank_statement_line.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.date IS 'Date';


--
-- Name: COLUMN account_bank_statement_line.journal_entry_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.journal_entry_id IS 'Journal Entry';


--
-- Name: COLUMN account_bank_statement_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_bank_statement_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.partner_id IS 'Partner';


--
-- Name: COLUMN account_bank_statement_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_bank_statement_line.account_id IS 'Account';


--
-- Name: account_bank_statement_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_bank_statement_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_bank_statement_line_id_seq OWNER TO odoo;

--
-- Name: account_bank_statement_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_bank_statement_line_id_seq OWNED BY account_bank_statement_line.id;


--
-- Name: account_cashbox_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cashbox_line (
    id integer NOT NULL,
    bank_statement_id integer,
    create_date timestamp without time zone,
    create_uid integer,
    pieces numeric,
    number_closing integer,
    write_date timestamp without time zone,
    number_opening integer,
    write_uid integer
);


ALTER TABLE public.account_cashbox_line OWNER TO odoo;

--
-- Name: TABLE account_cashbox_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cashbox_line IS 'CashBox Line';


--
-- Name: COLUMN account_cashbox_line.bank_statement_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.bank_statement_id IS 'unknown';


--
-- Name: COLUMN account_cashbox_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.create_date IS 'Created on';


--
-- Name: COLUMN account_cashbox_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_cashbox_line.pieces; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.pieces IS 'Unit of Currency';


--
-- Name: COLUMN account_cashbox_line.number_closing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.number_closing IS 'Number of Units';


--
-- Name: COLUMN account_cashbox_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_cashbox_line.number_opening; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.number_opening IS 'Number of Units';


--
-- Name: COLUMN account_cashbox_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cashbox_line.write_uid IS 'Last Updated by';


--
-- Name: account_cashbox_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_cashbox_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_cashbox_line_id_seq OWNER TO odoo;

--
-- Name: account_cashbox_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_cashbox_line_id_seq OWNED BY account_cashbox_line.id;


--
-- Name: account_central_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_central_journal (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    amount_currency boolean,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_central_journal OWNER TO odoo;

--
-- Name: TABLE account_central_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_central_journal IS 'Account Central Journal';


--
-- Name: COLUMN account_central_journal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.create_uid IS 'Created by';


--
-- Name: COLUMN account_central_journal.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_central_journal.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.date_from IS 'Start Date';


--
-- Name: COLUMN account_central_journal.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.period_to IS 'End Period';


--
-- Name: COLUMN account_central_journal.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.filter IS 'Filter by';


--
-- Name: COLUMN account_central_journal.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.period_from IS 'Start Period';


--
-- Name: COLUMN account_central_journal.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_central_journal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_central_journal.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.date_to IS 'End Date';


--
-- Name: COLUMN account_central_journal.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_central_journal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.create_date IS 'Created on';


--
-- Name: COLUMN account_central_journal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_central_journal.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_central_journal.target_move IS 'Target Moves';


--
-- Name: account_central_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_central_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_central_journal_id_seq OWNER TO odoo;

--
-- Name: account_central_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_central_journal_id_seq OWNED BY account_central_journal.id;


--
-- Name: account_central_journal_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_central_journal_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_central_journal_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_central_journal_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_central_journal_journal_rel IS 'RELATION BETWEEN account_central_journal AND account_journal';


--
-- Name: account_change_currency; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_change_currency (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    currency_id integer NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.account_change_currency OWNER TO odoo;

--
-- Name: TABLE account_change_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_change_currency IS 'Change Currency';


--
-- Name: COLUMN account_change_currency.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_change_currency.create_uid IS 'Created by';


--
-- Name: COLUMN account_change_currency.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_change_currency.create_date IS 'Created on';


--
-- Name: COLUMN account_change_currency.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_change_currency.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_change_currency.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_change_currency.currency_id IS 'Change to';


--
-- Name: COLUMN account_change_currency.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_change_currency.write_date IS 'Last Updated on';


--
-- Name: account_change_currency_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_change_currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_change_currency_id_seq OWNER TO odoo;

--
-- Name: account_change_currency_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_change_currency_id_seq OWNED BY account_change_currency.id;


--
-- Name: account_chart; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_chart (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    period_to integer,
    write_uid integer,
    period_from integer,
    write_date timestamp without time zone,
    target_move character varying NOT NULL,
    fiscalyear integer
);


ALTER TABLE public.account_chart OWNER TO odoo;

--
-- Name: TABLE account_chart; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_chart IS 'Account chart';


--
-- Name: COLUMN account_chart.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.create_uid IS 'Created by';


--
-- Name: COLUMN account_chart.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.create_date IS 'Created on';


--
-- Name: COLUMN account_chart.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.period_to IS 'End period';


--
-- Name: COLUMN account_chart.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_chart.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.period_from IS 'Start period';


--
-- Name: COLUMN account_chart.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_chart.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.target_move IS 'Target Moves';


--
-- Name: COLUMN account_chart.fiscalyear; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart.fiscalyear IS 'Fiscal year';


--
-- Name: account_chart_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_chart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_chart_id_seq OWNER TO odoo;

--
-- Name: account_chart_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_chart_id_seq OWNED BY account_chart.id;


--
-- Name: account_chart_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_chart_template (
    id integer NOT NULL,
    property_account_income_opening integer,
    create_date timestamp without time zone,
    write_uid integer,
    currency_id integer,
    visible boolean,
    tax_code_root_id integer,
    property_account_income integer,
    create_uid integer,
    complete_tax_set boolean,
    property_account_payable integer,
    parent_id integer,
    bank_account_view_id integer,
    property_account_expense_categ integer,
    property_account_expense_opening integer,
    write_date timestamp without time zone,
    property_account_income_categ integer,
    code_digits integer NOT NULL,
    name character varying NOT NULL,
    property_account_expense integer,
    property_account_receivable integer,
    account_root_id integer
);


ALTER TABLE public.account_chart_template OWNER TO odoo;

--
-- Name: TABLE account_chart_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_chart_template IS 'Templates for Account Chart';


--
-- Name: COLUMN account_chart_template.property_account_income_opening; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_income_opening IS 'Opening Entries Income Account';


--
-- Name: COLUMN account_chart_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.create_date IS 'Created on';


--
-- Name: COLUMN account_chart_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_chart_template.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.currency_id IS 'Currency';


--
-- Name: COLUMN account_chart_template.visible; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.visible IS 'Can be Visible?';


--
-- Name: COLUMN account_chart_template.tax_code_root_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.tax_code_root_id IS 'Root Tax Code';


--
-- Name: COLUMN account_chart_template.property_account_income; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_income IS 'Income Account on Product Template';


--
-- Name: COLUMN account_chart_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_chart_template.complete_tax_set; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.complete_tax_set IS 'Complete Set of Taxes';


--
-- Name: COLUMN account_chart_template.property_account_payable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_payable IS 'Payable Account';


--
-- Name: COLUMN account_chart_template.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.parent_id IS 'Parent Chart Template';


--
-- Name: COLUMN account_chart_template.bank_account_view_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.bank_account_view_id IS 'Bank Account';


--
-- Name: COLUMN account_chart_template.property_account_expense_categ; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_expense_categ IS 'Expense Category Account';


--
-- Name: COLUMN account_chart_template.property_account_expense_opening; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_expense_opening IS 'Opening Entries Expense Account';


--
-- Name: COLUMN account_chart_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_chart_template.property_account_income_categ; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_income_categ IS 'Income Category Account';


--
-- Name: COLUMN account_chart_template.code_digits; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.code_digits IS '# of Digits';


--
-- Name: COLUMN account_chart_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.name IS 'Name';


--
-- Name: COLUMN account_chart_template.property_account_expense; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_expense IS 'Expense Account on Product Template';


--
-- Name: COLUMN account_chart_template.property_account_receivable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.property_account_receivable IS 'Receivable Account';


--
-- Name: COLUMN account_chart_template.account_root_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_chart_template.account_root_id IS 'Root Account';


--
-- Name: account_chart_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_chart_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_chart_template_id_seq OWNER TO odoo;

--
-- Name: account_chart_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_chart_template_id_seq OWNED BY account_chart_template.id;


--
-- Name: account_common_account_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_account_report (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    display_account character varying NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_common_account_report OWNER TO odoo;

--
-- Name: TABLE account_common_account_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_account_report IS 'Account Common Account Report';


--
-- Name: COLUMN account_common_account_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_common_account_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_common_account_report.display_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.display_account IS 'Display Accounts';


--
-- Name: COLUMN account_common_account_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.date_from IS 'Start Date';


--
-- Name: COLUMN account_common_account_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.period_to IS 'End Period';


--
-- Name: COLUMN account_common_account_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.filter IS 'Filter by';


--
-- Name: COLUMN account_common_account_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.period_from IS 'Start Period';


--
-- Name: COLUMN account_common_account_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_common_account_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_common_account_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.date_to IS 'End Date';


--
-- Name: COLUMN account_common_account_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.create_date IS 'Created on';


--
-- Name: COLUMN account_common_account_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_common_account_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_account_report.target_move IS 'Target Moves';


--
-- Name: account_common_account_report_account_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_account_report_account_journal_rel (
    account_common_account_report_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_common_account_report_account_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_common_account_report_account_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_account_report_account_journal_rel IS 'RELATION BETWEEN account_common_account_report AND account_journal';


--
-- Name: account_common_account_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_common_account_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_common_account_report_id_seq OWNER TO odoo;

--
-- Name: account_common_account_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_common_account_report_id_seq OWNED BY account_common_account_report.id;


--
-- Name: account_common_journal_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_journal_report (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    amount_currency boolean,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_common_journal_report OWNER TO odoo;

--
-- Name: TABLE account_common_journal_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_journal_report IS 'Account Common Journal Report';


--
-- Name: COLUMN account_common_journal_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_common_journal_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_common_journal_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.date_from IS 'Start Date';


--
-- Name: COLUMN account_common_journal_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.period_to IS 'End Period';


--
-- Name: COLUMN account_common_journal_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.filter IS 'Filter by';


--
-- Name: COLUMN account_common_journal_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.period_from IS 'Start Period';


--
-- Name: COLUMN account_common_journal_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_common_journal_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_common_journal_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.date_to IS 'End Date';


--
-- Name: COLUMN account_common_journal_report.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_common_journal_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.create_date IS 'Created on';


--
-- Name: COLUMN account_common_journal_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_common_journal_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_journal_report.target_move IS 'Target Moves';


--
-- Name: account_common_journal_report_account_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_journal_report_account_journal_rel (
    account_common_journal_report_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_common_journal_report_account_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_common_journal_report_account_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_journal_report_account_journal_rel IS 'RELATION BETWEEN account_common_journal_report AND account_journal';


--
-- Name: account_common_journal_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_common_journal_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_common_journal_report_id_seq OWNER TO odoo;

--
-- Name: account_common_journal_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_common_journal_report_id_seq OWNED BY account_common_journal_report.id;


--
-- Name: account_common_partner_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_partner_report (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    period_to integer,
    date_from date,
    result_selection character varying NOT NULL,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_common_partner_report OWNER TO odoo;

--
-- Name: TABLE account_common_partner_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_partner_report IS 'Account Common Partner Report';


--
-- Name: COLUMN account_common_partner_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_common_partner_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_common_partner_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.period_to IS 'End Period';


--
-- Name: COLUMN account_common_partner_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.date_from IS 'Start Date';


--
-- Name: COLUMN account_common_partner_report.result_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.result_selection IS 'Partner''s';


--
-- Name: COLUMN account_common_partner_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.filter IS 'Filter by';


--
-- Name: COLUMN account_common_partner_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.period_from IS 'Start Period';


--
-- Name: COLUMN account_common_partner_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_common_partner_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_common_partner_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.date_to IS 'End Date';


--
-- Name: COLUMN account_common_partner_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.create_date IS 'Created on';


--
-- Name: COLUMN account_common_partner_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_common_partner_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_partner_report.target_move IS 'Target Moves';


--
-- Name: account_common_partner_report_account_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_partner_report_account_journal_rel (
    account_common_partner_report_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_common_partner_report_account_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_common_partner_report_account_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_partner_report_account_journal_rel IS 'RELATION BETWEEN account_common_partner_report AND account_journal';


--
-- Name: account_common_partner_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_common_partner_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_common_partner_report_id_seq OWNER TO odoo;

--
-- Name: account_common_partner_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_common_partner_report_id_seq OWNED BY account_common_partner_report.id;


--
-- Name: account_common_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_report (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_common_report OWNER TO odoo;

--
-- Name: TABLE account_common_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_report IS 'Account Common Report';


--
-- Name: COLUMN account_common_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_common_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_common_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.date_from IS 'Start Date';


--
-- Name: COLUMN account_common_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.period_to IS 'End Period';


--
-- Name: COLUMN account_common_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.filter IS 'Filter by';


--
-- Name: COLUMN account_common_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.period_from IS 'Start Period';


--
-- Name: COLUMN account_common_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_common_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_common_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.date_to IS 'End Date';


--
-- Name: COLUMN account_common_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.create_date IS 'Created on';


--
-- Name: COLUMN account_common_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_common_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_common_report.target_move IS 'Target Moves';


--
-- Name: account_common_report_account_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_common_report_account_journal_rel (
    account_common_report_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_common_report_account_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_common_report_account_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_common_report_account_journal_rel IS 'RELATION BETWEEN account_common_report AND account_journal';


--
-- Name: account_common_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_common_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_common_report_id_seq OWNER TO odoo;

--
-- Name: account_common_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_common_report_id_seq OWNED BY account_common_report.id;


--
-- Name: account_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_config_settings (
    id integer NOT NULL,
    date_stop date NOT NULL,
    sale_journal_id integer,
    module_account_voucher boolean,
    module_account_asset boolean,
    period character varying NOT NULL,
    write_uid integer,
    module_account_accountant boolean,
    module_account_followup boolean,
    purchase_journal_id integer,
    create_date timestamp without time zone,
    has_chart_of_accounts boolean,
    sale_refund_journal_id integer,
    create_uid integer,
    complete_tax_set boolean,
    module_account_budget boolean,
    date_start date NOT NULL,
    purchase_refund_journal_id integer,
    company_id integer NOT NULL,
    group_check_supplier_invoice_total boolean,
    group_multi_currency boolean,
    group_proforma_invoices boolean,
    default_purchase_tax integer,
    module_product_email_template boolean,
    has_default_company boolean,
    purchase_tax_rate double precision,
    decimal_precision integer,
    default_sale_tax integer,
    has_fiscal_year boolean,
    module_account_payment boolean,
    sale_tax integer,
    purchase_tax integer,
    module_account_check_writing boolean,
    code_digits integer,
    write_date timestamp without time zone,
    sale_tax_rate double precision,
    chart_template_id integer,
    group_analytic_accounting boolean,
    module_payment_paypal boolean,
    module_payment_buckaroo boolean,
    module_payment_adyen boolean,
    module_payment_ogone boolean,
    group_analytic_account_for_sales boolean,
    module_sale_analytic_plans boolean,
    module_purchase_analytic_plans boolean,
    group_analytic_account_for_purchases boolean
);


ALTER TABLE public.account_config_settings OWNER TO odoo;

--
-- Name: TABLE account_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_config_settings IS 'account.config.settings';


--
-- Name: COLUMN account_config_settings.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.date_stop IS 'End date';


--
-- Name: COLUMN account_config_settings.sale_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.sale_journal_id IS 'Sale journal';


--
-- Name: COLUMN account_config_settings.module_account_voucher; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_voucher IS 'Manage customer payments';


--
-- Name: COLUMN account_config_settings.module_account_asset; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_asset IS 'Assets management';


--
-- Name: COLUMN account_config_settings.period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.period IS 'Periods';


--
-- Name: COLUMN account_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_config_settings.module_account_accountant; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_accountant IS 'Full accounting features: journals, legal statements, chart of accounts, etc.';


--
-- Name: COLUMN account_config_settings.module_account_followup; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_followup IS 'Manage customer payment follow-ups';


--
-- Name: COLUMN account_config_settings.purchase_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.purchase_journal_id IS 'Purchase journal';


--
-- Name: COLUMN account_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN account_config_settings.has_chart_of_accounts; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.has_chart_of_accounts IS 'Company has a chart of accounts';


--
-- Name: COLUMN account_config_settings.sale_refund_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.sale_refund_journal_id IS 'Sale refund journal';


--
-- Name: COLUMN account_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN account_config_settings.complete_tax_set; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.complete_tax_set IS 'Complete set of taxes';


--
-- Name: COLUMN account_config_settings.module_account_budget; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_budget IS 'Budget management';


--
-- Name: COLUMN account_config_settings.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.date_start IS 'Start date';


--
-- Name: COLUMN account_config_settings.purchase_refund_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.purchase_refund_journal_id IS 'Purchase refund journal';


--
-- Name: COLUMN account_config_settings.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.company_id IS 'Company';


--
-- Name: COLUMN account_config_settings.group_check_supplier_invoice_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_check_supplier_invoice_total IS 'Check the total of supplier invoices';


--
-- Name: COLUMN account_config_settings.group_multi_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_multi_currency IS 'Allow multi currencies';


--
-- Name: COLUMN account_config_settings.group_proforma_invoices; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_proforma_invoices IS 'Allow pro-forma invoices';


--
-- Name: COLUMN account_config_settings.default_purchase_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.default_purchase_tax IS 'Default purchase tax';


--
-- Name: COLUMN account_config_settings.module_product_email_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_product_email_template IS 'Send products tools and information at the invoice confirmation';


--
-- Name: COLUMN account_config_settings.has_default_company; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.has_default_company IS 'Has default company';


--
-- Name: COLUMN account_config_settings.purchase_tax_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.purchase_tax_rate IS 'Purchase tax (%)';


--
-- Name: COLUMN account_config_settings.decimal_precision; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.decimal_precision IS 'Decimal precision on journal entries';


--
-- Name: COLUMN account_config_settings.default_sale_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.default_sale_tax IS 'Default sale tax';


--
-- Name: COLUMN account_config_settings.has_fiscal_year; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.has_fiscal_year IS 'Company has a fiscal year';


--
-- Name: COLUMN account_config_settings.module_account_payment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_payment IS 'Manage payment orders';


--
-- Name: COLUMN account_config_settings.sale_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.sale_tax IS 'Default sale tax';


--
-- Name: COLUMN account_config_settings.purchase_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.purchase_tax IS 'Default purchase tax';


--
-- Name: COLUMN account_config_settings.module_account_check_writing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_account_check_writing IS 'Pay your suppliers by check';


--
-- Name: COLUMN account_config_settings.code_digits; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.code_digits IS '# of Digits';


--
-- Name: COLUMN account_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_config_settings.sale_tax_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.sale_tax_rate IS 'Sales tax (%)';


--
-- Name: COLUMN account_config_settings.chart_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.chart_template_id IS 'Template';


--
-- Name: COLUMN account_config_settings.group_analytic_accounting; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_analytic_accounting IS 'Analytic accounting';


--
-- Name: COLUMN account_config_settings.module_payment_paypal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_payment_paypal IS 'Manage Payments Using Paypal';


--
-- Name: COLUMN account_config_settings.module_payment_buckaroo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_payment_buckaroo IS 'Manage Payments Using Buckaroo';


--
-- Name: COLUMN account_config_settings.module_payment_adyen; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_payment_adyen IS 'Manage Payments Using Adyen';


--
-- Name: COLUMN account_config_settings.module_payment_ogone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_payment_ogone IS 'Manage Payments Using Ogone';


--
-- Name: COLUMN account_config_settings.group_analytic_account_for_sales; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_analytic_account_for_sales IS 'Analytic accounting for sales';


--
-- Name: COLUMN account_config_settings.module_sale_analytic_plans; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_sale_analytic_plans IS 'Use multiple analytic accounts on sales';


--
-- Name: COLUMN account_config_settings.module_purchase_analytic_plans; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.module_purchase_analytic_plans IS 'Use multiple analytic accounts on orders';


--
-- Name: COLUMN account_config_settings.group_analytic_account_for_purchases; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_config_settings.group_analytic_account_for_purchases IS 'Analytic accounting for purchases';


--
-- Name: account_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_config_settings_id_seq OWNER TO odoo;

--
-- Name: account_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_config_settings_id_seq OWNED BY account_config_settings.id;


--
-- Name: account_cutoff; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff (
    id integer NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    cutoff_account_id integer NOT NULL,
    create_uid integer,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    state character varying,
    type character varying NOT NULL,
    cutoff_journal_id integer NOT NULL,
    write_date timestamp without time zone,
    move_id integer,
    cutoff_date date NOT NULL,
    move_label character varying(64) NOT NULL
);


ALTER TABLE public.account_cutoff OWNER TO odoo;

--
-- Name: TABLE account_cutoff; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff IS 'Account Cut-off';


--
-- Name: COLUMN account_cutoff.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.create_date IS 'Created on';


--
-- Name: COLUMN account_cutoff.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_cutoff.cutoff_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.cutoff_account_id IS 'Cut-off Account';


--
-- Name: COLUMN account_cutoff.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.create_uid IS 'Created by';


--
-- Name: COLUMN account_cutoff.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN account_cutoff.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.company_id IS 'Company';


--
-- Name: COLUMN account_cutoff.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.state IS 'State';


--
-- Name: COLUMN account_cutoff.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.type IS 'Type';


--
-- Name: COLUMN account_cutoff.cutoff_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.cutoff_journal_id IS 'Cut-off Account Journal';


--
-- Name: COLUMN account_cutoff.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_cutoff.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.move_id IS 'Cut-off Journal Entry';


--
-- Name: COLUMN account_cutoff.cutoff_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.cutoff_date IS 'Cut-off Date';


--
-- Name: COLUMN account_cutoff.move_label; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff.move_label IS 'Label of the Cut-off Journal Entry';


--
-- Name: account_cutoff_account_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff_account_journal_rel (
    cutoff_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_cutoff_account_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_cutoff_account_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff_account_journal_rel IS 'RELATION BETWEEN account_cutoff AND account_journal';


--
-- Name: account_cutoff_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_cutoff_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_cutoff_id_seq OWNER TO odoo;

--
-- Name: account_cutoff_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_cutoff_id_seq OWNED BY account_cutoff.id;


--
-- Name: account_cutoff_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff_line (
    id integer NOT NULL,
    analytic_account_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    name character varying(64),
    cutoff_account_id integer NOT NULL,
    write_uid integer,
    currency_id integer,
    parent_id integer,
    amount numeric,
    write_date timestamp without time zone,
    cutoff_amount numeric,
    partner_id integer,
    total_days integer,
    start_date date,
    end_date date,
    move_line_id integer,
    after_cutoff_days integer
);


ALTER TABLE public.account_cutoff_line OWNER TO odoo;

--
-- Name: TABLE account_cutoff_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff_line IS 'Account Cut-off Line';


--
-- Name: COLUMN account_cutoff_line.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_cutoff_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_cutoff_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.create_date IS 'Created on';


--
-- Name: COLUMN account_cutoff_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.account_id IS 'Account';


--
-- Name: COLUMN account_cutoff_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.name IS 'Description';


--
-- Name: COLUMN account_cutoff_line.cutoff_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.cutoff_account_id IS 'Cut-off Account';


--
-- Name: COLUMN account_cutoff_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_cutoff_line.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.currency_id IS 'Amount Currency';


--
-- Name: COLUMN account_cutoff_line.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.parent_id IS 'Cut-off';


--
-- Name: COLUMN account_cutoff_line.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.amount IS 'Amount';


--
-- Name: COLUMN account_cutoff_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_cutoff_line.cutoff_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.cutoff_amount IS 'Cut-off Amount';


--
-- Name: COLUMN account_cutoff_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.partner_id IS 'Partner';


--
-- Name: COLUMN account_cutoff_line.total_days; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.total_days IS 'Total Number of Days';


--
-- Name: COLUMN account_cutoff_line.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.start_date IS 'Start Date';


--
-- Name: COLUMN account_cutoff_line.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.end_date IS 'End Date';


--
-- Name: COLUMN account_cutoff_line.move_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.move_line_id IS 'Accout Move Line';


--
-- Name: COLUMN account_cutoff_line.after_cutoff_days; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_line.after_cutoff_days IS 'Number of Days after Cut-off Date';


--
-- Name: account_cutoff_line_account_tax_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff_line_account_tax_rel (
    cutoff_line_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.account_cutoff_line_account_tax_rel OWNER TO odoo;

--
-- Name: TABLE account_cutoff_line_account_tax_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff_line_account_tax_rel IS 'RELATION BETWEEN account_cutoff_line AND account_tax';


--
-- Name: account_cutoff_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_cutoff_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_cutoff_line_id_seq OWNER TO odoo;

--
-- Name: account_cutoff_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_cutoff_line_id_seq OWNED BY account_cutoff_line.id;


--
-- Name: account_cutoff_mapping; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff_mapping (
    id integer NOT NULL,
    cutoff_type character varying NOT NULL,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    create_uid integer,
    company_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    cutoff_account_id integer NOT NULL
);


ALTER TABLE public.account_cutoff_mapping OWNER TO odoo;

--
-- Name: TABLE account_cutoff_mapping; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff_mapping IS 'Account Cut-off Mapping';


--
-- Name: COLUMN account_cutoff_mapping.cutoff_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.cutoff_type IS 'Cut-off Type';


--
-- Name: COLUMN account_cutoff_mapping.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.create_date IS 'Created on';


--
-- Name: COLUMN account_cutoff_mapping.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.account_id IS 'Regular Account';


--
-- Name: COLUMN account_cutoff_mapping.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.create_uid IS 'Created by';


--
-- Name: COLUMN account_cutoff_mapping.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.company_id IS 'Company';


--
-- Name: COLUMN account_cutoff_mapping.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_cutoff_mapping.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_cutoff_mapping.cutoff_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_mapping.cutoff_account_id IS 'Cut-off Account';


--
-- Name: account_cutoff_mapping_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_cutoff_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_cutoff_mapping_id_seq OWNER TO odoo;

--
-- Name: account_cutoff_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_cutoff_mapping_id_seq OWNED BY account_cutoff_mapping.id;


--
-- Name: account_cutoff_tax_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_cutoff_tax_line (
    id integer NOT NULL,
    analytic_account_id integer,
    create_date timestamp without time zone,
    sequence integer,
    write_uid integer,
    parent_id integer NOT NULL,
    amount numeric,
    base numeric,
    write_date timestamp without time zone,
    cutoff_amount numeric,
    cutoff_account_id integer NOT NULL,
    create_uid integer,
    tax_id integer NOT NULL
);


ALTER TABLE public.account_cutoff_tax_line OWNER TO odoo;

--
-- Name: TABLE account_cutoff_tax_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_cutoff_tax_line IS 'Account Cut-off Tax Line';


--
-- Name: COLUMN account_cutoff_tax_line.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_cutoff_tax_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.create_date IS 'Created on';


--
-- Name: COLUMN account_cutoff_tax_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.sequence IS 'Sequence';


--
-- Name: COLUMN account_cutoff_tax_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_cutoff_tax_line.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.parent_id IS 'Account Cut-off Line';


--
-- Name: COLUMN account_cutoff_tax_line.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.amount IS 'Tax Amount';


--
-- Name: COLUMN account_cutoff_tax_line.base; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.base IS 'Base';


--
-- Name: COLUMN account_cutoff_tax_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_cutoff_tax_line.cutoff_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.cutoff_amount IS 'Cut-off Tax Amount';


--
-- Name: COLUMN account_cutoff_tax_line.cutoff_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.cutoff_account_id IS 'Cut-off Account';


--
-- Name: COLUMN account_cutoff_tax_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_cutoff_tax_line.tax_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_cutoff_tax_line.tax_id IS 'Tax';


--
-- Name: account_cutoff_tax_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_cutoff_tax_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_cutoff_tax_line_id_seq OWNER TO odoo;

--
-- Name: account_cutoff_tax_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_cutoff_tax_line_id_seq OWNED BY account_cutoff_tax_line.id;


--
-- Name: account_move; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move (
    id integer NOT NULL,
    create_uid integer,
    partner_id integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    journal_id integer NOT NULL,
    state character varying NOT NULL,
    period_id integer NOT NULL,
    write_date timestamp without time zone,
    narration text,
    date date NOT NULL,
    balance numeric,
    ref character varying,
    to_check boolean
);


ALTER TABLE public.account_move OWNER TO odoo;

--
-- Name: TABLE account_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move IS 'Account Entry';


--
-- Name: COLUMN account_move.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.create_uid IS 'Created by';


--
-- Name: COLUMN account_move.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.partner_id IS 'Partner';


--
-- Name: COLUMN account_move.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.create_date IS 'Created on';


--
-- Name: COLUMN account_move.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.name IS 'Number';


--
-- Name: COLUMN account_move.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.company_id IS 'Company';


--
-- Name: COLUMN account_move.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.journal_id IS 'Journal';


--
-- Name: COLUMN account_move.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.state IS 'Status';


--
-- Name: COLUMN account_move.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.period_id IS 'Period';


--
-- Name: COLUMN account_move.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_move.narration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.narration IS 'Internal Note';


--
-- Name: COLUMN account_move.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.date IS 'Date';


--
-- Name: COLUMN account_move.balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.balance IS 'balance';


--
-- Name: COLUMN account_move.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.ref IS 'Reference';


--
-- Name: COLUMN account_move.to_check; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move.to_check IS 'To Review';


--
-- Name: account_move_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line (
    id integer NOT NULL,
    create_date timestamp without time zone,
    statement_id integer,
    company_id integer,
    currency_id integer,
    date_maturity date,
    partner_id integer,
    reconcile_partial_id integer,
    blocked boolean,
    analytic_account_id integer,
    create_uid integer,
    credit numeric,
    centralisation character varying(8),
    journal_id integer NOT NULL,
    reconcile_ref character varying,
    tax_code_id integer,
    state character varying,
    debit numeric,
    ref character varying,
    account_id integer NOT NULL,
    period_id integer NOT NULL,
    write_date timestamp without time zone,
    date_created date,
    date date NOT NULL,
    write_uid integer,
    move_id integer NOT NULL,
    name character varying NOT NULL,
    reconcile_id integer,
    tax_amount numeric,
    product_id integer,
    account_tax_id integer,
    product_uom_id integer,
    amount_currency numeric,
    quantity numeric,
    start_date date,
    end_date date,
    CONSTRAINT account_move_line_credit_debit1 CHECK (((credit * debit) = (0)::numeric)),
    CONSTRAINT account_move_line_credit_debit2 CHECK (((credit + debit) >= (0)::numeric))
);


ALTER TABLE public.account_move_line OWNER TO odoo;

--
-- Name: TABLE account_move_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line IS 'Journal Items';


--
-- Name: COLUMN account_move_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.create_date IS 'Created on';


--
-- Name: COLUMN account_move_line.statement_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.statement_id IS 'Statement';


--
-- Name: COLUMN account_move_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.company_id IS 'Company';


--
-- Name: COLUMN account_move_line.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.currency_id IS 'Currency';


--
-- Name: COLUMN account_move_line.date_maturity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.date_maturity IS 'Due date';


--
-- Name: COLUMN account_move_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.partner_id IS 'Partner';


--
-- Name: COLUMN account_move_line.reconcile_partial_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.reconcile_partial_id IS 'Partial Reconcile';


--
-- Name: COLUMN account_move_line.blocked; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.blocked IS 'No Follow-up';


--
-- Name: COLUMN account_move_line.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_move_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_line.credit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.credit IS 'Credit';


--
-- Name: COLUMN account_move_line.centralisation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.centralisation IS 'Centralisation';


--
-- Name: COLUMN account_move_line.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.journal_id IS 'Journal';


--
-- Name: COLUMN account_move_line.reconcile_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.reconcile_ref IS 'Reconcile Ref';


--
-- Name: COLUMN account_move_line.tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.tax_code_id IS 'Tax Account';


--
-- Name: COLUMN account_move_line.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.state IS 'Status';


--
-- Name: COLUMN account_move_line.debit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.debit IS 'Debit';


--
-- Name: COLUMN account_move_line.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.ref IS 'Reference';


--
-- Name: COLUMN account_move_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.account_id IS 'Account';


--
-- Name: COLUMN account_move_line.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.period_id IS 'Period';


--
-- Name: COLUMN account_move_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_move_line.date_created; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.date_created IS 'Creation date';


--
-- Name: COLUMN account_move_line.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.date IS 'Effective date';


--
-- Name: COLUMN account_move_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_line.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.move_id IS 'Journal Entry';


--
-- Name: COLUMN account_move_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.name IS 'Name';


--
-- Name: COLUMN account_move_line.reconcile_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.reconcile_id IS 'Reconcile';


--
-- Name: COLUMN account_move_line.tax_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.tax_amount IS 'Tax/Base Amount';


--
-- Name: COLUMN account_move_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.product_id IS 'Product';


--
-- Name: COLUMN account_move_line.account_tax_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.account_tax_id IS 'Tax';


--
-- Name: COLUMN account_move_line.product_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.product_uom_id IS 'Unit of Measure';


--
-- Name: COLUMN account_move_line.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.amount_currency IS 'Amount Currency';


--
-- Name: COLUMN account_move_line.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.quantity IS 'Quantity';


--
-- Name: COLUMN account_move_line.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.start_date IS 'Start Date';


--
-- Name: COLUMN account_move_line.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line.end_date IS 'End Date';


--
-- Name: account_period; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_period (
    id integer NOT NULL,
    create_uid integer,
    date_stop date NOT NULL,
    code character varying(12),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    date_start date NOT NULL,
    company_id integer,
    write_uid integer,
    fiscalyear_id integer NOT NULL,
    state character varying,
    write_date timestamp without time zone,
    special boolean
);


ALTER TABLE public.account_period OWNER TO odoo;

--
-- Name: TABLE account_period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_period IS 'Account period';


--
-- Name: COLUMN account_period.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.create_uid IS 'Created by';


--
-- Name: COLUMN account_period.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.date_stop IS 'End of Period';


--
-- Name: COLUMN account_period.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.code IS 'Code';


--
-- Name: COLUMN account_period.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.create_date IS 'Created on';


--
-- Name: COLUMN account_period.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.name IS 'Period Name';


--
-- Name: COLUMN account_period.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.date_start IS 'Start of Period';


--
-- Name: COLUMN account_period.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.company_id IS 'Company';


--
-- Name: COLUMN account_period.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_period.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_period.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.state IS 'Status';


--
-- Name: COLUMN account_period.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_period.special; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period.special IS 'Opening/Closing Period';


--
-- Name: account_entries_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW account_entries_report AS
 SELECT l.id,
    am.date,
    l.date_maturity,
    l.date_created,
    am.ref,
    am.state AS move_state,
    l.state AS move_line_state,
    l.reconcile_id,
    l.partner_id,
    l.product_id,
    l.product_uom_id,
    am.company_id,
    am.journal_id,
    p.fiscalyear_id,
    am.period_id,
    l.account_id,
    l.analytic_account_id,
    a.type,
    a.user_type,
    1 AS nbr,
    l.quantity,
    l.currency_id,
    l.amount_currency,
    l.debit,
    l.credit,
    (COALESCE(l.debit, 0.0) - COALESCE(l.credit, 0.0)) AS balance
   FROM (((account_move_line l
     LEFT JOIN account_account a ON ((l.account_id = a.id)))
     LEFT JOIN account_move am ON ((am.id = l.move_id)))
     LEFT JOIN account_period p ON ((am.period_id = p.id)))
  WHERE ((l.state)::text <> 'draft'::text);


ALTER TABLE public.account_entries_report OWNER TO odoo;

--
-- Name: account_financial_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_financial_report (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    account_report_id integer,
    style_overwrite integer,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone,
    display_detail character varying,
    sign integer NOT NULL,
    type character varying,
    level integer
);


ALTER TABLE public.account_financial_report OWNER TO odoo;

--
-- Name: TABLE account_financial_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_financial_report IS 'Account Report';


--
-- Name: COLUMN account_financial_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.create_uid IS 'Created by';


--
-- Name: COLUMN account_financial_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.create_date IS 'Created on';


--
-- Name: COLUMN account_financial_report.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.name IS 'Report Name';


--
-- Name: COLUMN account_financial_report.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.sequence IS 'Sequence';


--
-- Name: COLUMN account_financial_report.account_report_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.account_report_id IS 'Report Value';


--
-- Name: COLUMN account_financial_report.style_overwrite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.style_overwrite IS 'Financial Report Style';


--
-- Name: COLUMN account_financial_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_financial_report.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.parent_id IS 'Parent';


--
-- Name: COLUMN account_financial_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_financial_report.display_detail; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.display_detail IS 'Display details';


--
-- Name: COLUMN account_financial_report.sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.sign IS 'Sign on Reports';


--
-- Name: COLUMN account_financial_report.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.type IS 'Type';


--
-- Name: COLUMN account_financial_report.level; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_financial_report.level IS 'Level';


--
-- Name: account_financial_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_financial_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_financial_report_id_seq OWNER TO odoo;

--
-- Name: account_financial_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_financial_report_id_seq OWNED BY account_financial_report.id;


--
-- Name: account_fiscal_position; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position (
    id integer NOT NULL,
    create_uid integer,
    country_group_id integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    country_id integer,
    company_id integer,
    auto_apply boolean,
    write_uid integer,
    note text,
    write_date timestamp without time zone,
    vat_required boolean,
    active boolean
);


ALTER TABLE public.account_fiscal_position OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position IS 'Fiscal Position';


--
-- Name: COLUMN account_fiscal_position.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position.country_group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.country_group_id IS 'Country Group';


--
-- Name: COLUMN account_fiscal_position.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.name IS 'Fiscal Position';


--
-- Name: COLUMN account_fiscal_position.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.sequence IS 'Sequence';


--
-- Name: COLUMN account_fiscal_position.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.country_id IS 'Country';


--
-- Name: COLUMN account_fiscal_position.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.company_id IS 'Company';


--
-- Name: COLUMN account_fiscal_position.auto_apply; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.auto_apply IS 'Automatic';


--
-- Name: COLUMN account_fiscal_position.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.note IS 'Notes';


--
-- Name: COLUMN account_fiscal_position.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_fiscal_position.vat_required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.vat_required IS 'VAT required';


--
-- Name: COLUMN account_fiscal_position.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position.active IS 'Active';


--
-- Name: account_fiscal_position_account; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position_account (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    position_id integer NOT NULL,
    write_uid integer,
    account_dest_id integer NOT NULL,
    write_date timestamp without time zone,
    account_src_id integer NOT NULL
);


ALTER TABLE public.account_fiscal_position_account OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position_account IS 'Accounts Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_account.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position_account.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position_account.position_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.position_id IS 'Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_account.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position_account.account_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.account_dest_id IS 'Account Destination';


--
-- Name: COLUMN account_fiscal_position_account.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_fiscal_position_account.account_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account.account_src_id IS 'Account Source';


--
-- Name: account_fiscal_position_account_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_account_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_account_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_account_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_account_id_seq OWNED BY account_fiscal_position_account.id;


--
-- Name: account_fiscal_position_account_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position_account_template (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    position_id integer NOT NULL,
    write_uid integer,
    account_dest_id integer NOT NULL,
    write_date timestamp without time zone,
    account_src_id integer NOT NULL
);


ALTER TABLE public.account_fiscal_position_account_template OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position_account_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position_account_template IS 'Template Account Fiscal Mapping';


--
-- Name: COLUMN account_fiscal_position_account_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position_account_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position_account_template.position_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.position_id IS 'Fiscal Mapping';


--
-- Name: COLUMN account_fiscal_position_account_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position_account_template.account_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.account_dest_id IS 'Account Destination';


--
-- Name: COLUMN account_fiscal_position_account_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_fiscal_position_account_template.account_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_account_template.account_src_id IS 'Account Source';


--
-- Name: account_fiscal_position_account_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_account_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_account_template_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_account_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_account_template_id_seq OWNED BY account_fiscal_position_account_template.id;


--
-- Name: account_fiscal_position_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_id_seq OWNED BY account_fiscal_position.id;


--
-- Name: account_fiscal_position_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position_tax (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    position_id integer NOT NULL,
    tax_src_id integer NOT NULL,
    write_uid integer,
    tax_dest_id integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_fiscal_position_tax OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position_tax IS 'Taxes Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_tax.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position_tax.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position_tax.position_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.position_id IS 'Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_tax.tax_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.tax_src_id IS 'Tax Source';


--
-- Name: COLUMN account_fiscal_position_tax.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position_tax.tax_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.tax_dest_id IS 'Replacement Tax';


--
-- Name: COLUMN account_fiscal_position_tax.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax.write_date IS 'Last Updated on';


--
-- Name: account_fiscal_position_tax_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_tax_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_tax_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_tax_id_seq OWNED BY account_fiscal_position_tax.id;


--
-- Name: account_fiscal_position_tax_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position_tax_template (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    position_id integer NOT NULL,
    tax_src_id integer NOT NULL,
    write_uid integer,
    tax_dest_id integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_fiscal_position_tax_template OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position_tax_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position_tax_template IS 'Template Tax Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_tax_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position_tax_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position_tax_template.position_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.position_id IS 'Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_tax_template.tax_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.tax_src_id IS 'Tax Source';


--
-- Name: COLUMN account_fiscal_position_tax_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position_tax_template.tax_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.tax_dest_id IS 'Replacement Tax';


--
-- Name: COLUMN account_fiscal_position_tax_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_tax_template.write_date IS 'Last Updated on';


--
-- Name: account_fiscal_position_tax_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_tax_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_tax_template_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_tax_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_tax_template_id_seq OWNED BY account_fiscal_position_tax_template.id;


--
-- Name: account_fiscal_position_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscal_position_template (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    chart_template_id integer NOT NULL,
    write_uid integer,
    note text,
    write_date timestamp without time zone
);


ALTER TABLE public.account_fiscal_position_template OWNER TO odoo;

--
-- Name: TABLE account_fiscal_position_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscal_position_template IS 'Template for Fiscal Position';


--
-- Name: COLUMN account_fiscal_position_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscal_position_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscal_position_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.name IS 'Fiscal Position Template';


--
-- Name: COLUMN account_fiscal_position_template.chart_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.chart_template_id IS 'Chart Template';


--
-- Name: COLUMN account_fiscal_position_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscal_position_template.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.note IS 'Notes';


--
-- Name: COLUMN account_fiscal_position_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscal_position_template.write_date IS 'Last Updated on';


--
-- Name: account_fiscal_position_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscal_position_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscal_position_template_id_seq OWNER TO odoo;

--
-- Name: account_fiscal_position_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscal_position_template_id_seq OWNED BY account_fiscal_position_template.id;


--
-- Name: account_fiscalyear; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscalyear (
    id integer NOT NULL,
    create_uid integer,
    date_stop date NOT NULL,
    code character varying(6) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    end_journal_period_id integer,
    date_start date NOT NULL,
    company_id integer NOT NULL,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone
);


ALTER TABLE public.account_fiscalyear OWNER TO odoo;

--
-- Name: TABLE account_fiscalyear; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscalyear IS 'Fiscal Year';


--
-- Name: COLUMN account_fiscalyear.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscalyear.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.date_stop IS 'End Date';


--
-- Name: COLUMN account_fiscalyear.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.code IS 'Code';


--
-- Name: COLUMN account_fiscalyear.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscalyear.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.name IS 'Fiscal Year';


--
-- Name: COLUMN account_fiscalyear.end_journal_period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.end_journal_period_id IS 'End of Year Entries Journal';


--
-- Name: COLUMN account_fiscalyear.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.date_start IS 'Start Date';


--
-- Name: COLUMN account_fiscalyear.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.company_id IS 'Company';


--
-- Name: COLUMN account_fiscalyear.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscalyear.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.state IS 'Status';


--
-- Name: COLUMN account_fiscalyear.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear.write_date IS 'Last Updated on';


--
-- Name: account_fiscalyear_close; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscalyear_close (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    journal_id integer NOT NULL,
    report_name character varying NOT NULL,
    fy2_id integer NOT NULL,
    period_id integer NOT NULL,
    write_date timestamp without time zone,
    fy_id integer NOT NULL,
    write_uid integer
);


ALTER TABLE public.account_fiscalyear_close OWNER TO odoo;

--
-- Name: TABLE account_fiscalyear_close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscalyear_close IS 'Fiscalyear Close';


--
-- Name: COLUMN account_fiscalyear_close.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscalyear_close.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscalyear_close.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.journal_id IS 'Opening Entries Journal';


--
-- Name: COLUMN account_fiscalyear_close.report_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.report_name IS 'Name of new entries';


--
-- Name: COLUMN account_fiscalyear_close.fy2_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.fy2_id IS 'New Fiscal Year';


--
-- Name: COLUMN account_fiscalyear_close.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.period_id IS 'Opening Entries Period';


--
-- Name: COLUMN account_fiscalyear_close.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_fiscalyear_close.fy_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.fy_id IS 'Fiscal Year to close';


--
-- Name: COLUMN account_fiscalyear_close.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close.write_uid IS 'Last Updated by';


--
-- Name: account_fiscalyear_close_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscalyear_close_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscalyear_close_id_seq OWNER TO odoo;

--
-- Name: account_fiscalyear_close_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscalyear_close_id_seq OWNED BY account_fiscalyear_close.id;


--
-- Name: account_fiscalyear_close_state; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_fiscalyear_close_state (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    fy_id integer NOT NULL
);


ALTER TABLE public.account_fiscalyear_close_state OWNER TO odoo;

--
-- Name: TABLE account_fiscalyear_close_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_fiscalyear_close_state IS 'Fiscalyear Close state';


--
-- Name: COLUMN account_fiscalyear_close_state.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close_state.create_uid IS 'Created by';


--
-- Name: COLUMN account_fiscalyear_close_state.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close_state.create_date IS 'Created on';


--
-- Name: COLUMN account_fiscalyear_close_state.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close_state.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_fiscalyear_close_state.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close_state.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_fiscalyear_close_state.fy_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_fiscalyear_close_state.fy_id IS 'Fiscal Year to Close';


--
-- Name: account_fiscalyear_close_state_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscalyear_close_state_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscalyear_close_state_id_seq OWNER TO odoo;

--
-- Name: account_fiscalyear_close_state_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscalyear_close_state_id_seq OWNED BY account_fiscalyear_close_state.id;


--
-- Name: account_fiscalyear_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_fiscalyear_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_fiscalyear_id_seq OWNER TO odoo;

--
-- Name: account_fiscalyear_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_fiscalyear_id_seq OWNED BY account_fiscalyear.id;


--
-- Name: account_general_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_general_journal (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    amount_currency boolean,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_general_journal OWNER TO odoo;

--
-- Name: TABLE account_general_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_general_journal IS 'Account General Journal';


--
-- Name: COLUMN account_general_journal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.create_uid IS 'Created by';


--
-- Name: COLUMN account_general_journal.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_general_journal.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.date_from IS 'Start Date';


--
-- Name: COLUMN account_general_journal.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.period_to IS 'End Period';


--
-- Name: COLUMN account_general_journal.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.filter IS 'Filter by';


--
-- Name: COLUMN account_general_journal.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.period_from IS 'Start Period';


--
-- Name: COLUMN account_general_journal.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_general_journal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_general_journal.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.date_to IS 'End Date';


--
-- Name: COLUMN account_general_journal.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_general_journal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.create_date IS 'Created on';


--
-- Name: COLUMN account_general_journal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_general_journal.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_general_journal.target_move IS 'Target Moves';


--
-- Name: account_general_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_general_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_general_journal_id_seq OWNER TO odoo;

--
-- Name: account_general_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_general_journal_id_seq OWNED BY account_general_journal.id;


--
-- Name: account_general_journal_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_general_journal_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_general_journal_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_general_journal_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_general_journal_journal_rel IS 'RELATION BETWEEN account_general_journal AND account_journal';


--
-- Name: account_installer; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_installer (
    id integer NOT NULL,
    create_uid integer,
    date_stop date NOT NULL,
    create_date timestamp without time zone,
    date_start date NOT NULL,
    charts character varying NOT NULL,
    company_id integer NOT NULL,
    period character varying NOT NULL,
    write_date timestamp without time zone,
    has_default_company boolean,
    write_uid integer
);


ALTER TABLE public.account_installer OWNER TO odoo;

--
-- Name: TABLE account_installer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_installer IS 'account.installer';


--
-- Name: COLUMN account_installer.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.create_uid IS 'Created by';


--
-- Name: COLUMN account_installer.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.date_stop IS 'End Date';


--
-- Name: COLUMN account_installer.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.create_date IS 'Created on';


--
-- Name: COLUMN account_installer.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.date_start IS 'Start Date';


--
-- Name: COLUMN account_installer.charts; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.charts IS 'Accounting Package';


--
-- Name: COLUMN account_installer.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.company_id IS 'Company';


--
-- Name: COLUMN account_installer.period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.period IS 'Periods';


--
-- Name: COLUMN account_installer.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_installer.has_default_company; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.has_default_company IS 'Has Default Company';


--
-- Name: COLUMN account_installer.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_installer.write_uid IS 'Last Updated by';


--
-- Name: account_installer_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_installer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_installer_id_seq OWNER TO odoo;

--
-- Name: account_installer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_installer_id_seq OWNED BY account_installer.id;


--
-- Name: account_invoice; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice (
    id integer NOT NULL,
    comment text,
    date_due date,
    check_total numeric,
    reference character varying,
    payment_term integer,
    number character varying,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    currency_id integer NOT NULL,
    create_date timestamp without time zone,
    create_uid integer,
    fiscal_position integer,
    amount_untaxed numeric,
    partner_bank_id integer,
    partner_id integer NOT NULL,
    supplier_invoice_number character varying,
    reference_type character varying NOT NULL,
    journal_id integer NOT NULL,
    amount_tax numeric,
    state character varying,
    move_id integer,
    type character varying,
    internal_number character varying,
    account_id integer NOT NULL,
    reconciled boolean,
    residual numeric,
    move_name character varying,
    date_invoice date,
    period_id integer,
    write_date timestamp without time zone,
    user_id integer,
    write_uid integer,
    origin character varying,
    amount_total numeric,
    name character varying,
    sent boolean,
    commercial_partner_id integer,
    section_id integer,
    x_tax_invoice boolean,
    address_shipping_id integer,
    x_bill_from integer,
    contract_id integer,
    x_checked_by integer,
    x_prepared_by integer,
    x_received_by character varying,
    x_received_date date,
    x_kind_attn character varying,
    x_po_ref character varying,
    x_bill_period_from timestamp without time zone,
    x_bill_period_to timestamp without time zone,
    x_book_no character varying
);


ALTER TABLE public.account_invoice OWNER TO odoo;

--
-- Name: TABLE account_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice IS 'Invoice';


--
-- Name: COLUMN account_invoice.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.comment IS 'Additional Information';


--
-- Name: COLUMN account_invoice.date_due; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.date_due IS 'Due Date';


--
-- Name: COLUMN account_invoice.check_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.check_total IS 'Verification Total';


--
-- Name: COLUMN account_invoice.reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.reference IS 'Invoice Reference';


--
-- Name: COLUMN account_invoice.payment_term; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.payment_term IS 'Payment Terms';


--
-- Name: COLUMN account_invoice.number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.number IS 'Number';


--
-- Name: COLUMN account_invoice.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN account_invoice.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.company_id IS 'Company';


--
-- Name: COLUMN account_invoice.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.currency_id IS 'Currency';


--
-- Name: COLUMN account_invoice.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice.fiscal_position; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.fiscal_position IS 'Fiscal Position';


--
-- Name: COLUMN account_invoice.amount_untaxed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.amount_untaxed IS 'Subtotal';


--
-- Name: COLUMN account_invoice.partner_bank_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.partner_bank_id IS 'Bank Account';


--
-- Name: COLUMN account_invoice.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.partner_id IS 'Partner';


--
-- Name: COLUMN account_invoice.supplier_invoice_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.supplier_invoice_number IS 'Supplier Invoice Number';


--
-- Name: COLUMN account_invoice.reference_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.reference_type IS 'Payment Reference';


--
-- Name: COLUMN account_invoice.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.journal_id IS 'Journal';


--
-- Name: COLUMN account_invoice.amount_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.amount_tax IS 'Tax';


--
-- Name: COLUMN account_invoice.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.state IS 'Status';


--
-- Name: COLUMN account_invoice.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.move_id IS 'Journal Entry';


--
-- Name: COLUMN account_invoice.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.type IS 'Type';


--
-- Name: COLUMN account_invoice.internal_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.internal_number IS 'Invoice Number';


--
-- Name: COLUMN account_invoice.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.account_id IS 'Account';


--
-- Name: COLUMN account_invoice.reconciled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.reconciled IS 'Paid/Reconciled';


--
-- Name: COLUMN account_invoice.residual; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.residual IS 'Balance';


--
-- Name: COLUMN account_invoice.move_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.move_name IS 'Journal Entry';


--
-- Name: COLUMN account_invoice.date_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.date_invoice IS 'Invoice Date';


--
-- Name: COLUMN account_invoice.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.period_id IS 'Force Period';


--
-- Name: COLUMN account_invoice.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.user_id IS 'Salesperson';


--
-- Name: COLUMN account_invoice.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_invoice.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.origin IS 'Source Document';


--
-- Name: COLUMN account_invoice.amount_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.amount_total IS 'Total';


--
-- Name: COLUMN account_invoice.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.name IS 'Reference/Description';


--
-- Name: COLUMN account_invoice.sent; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.sent IS 'Sent';


--
-- Name: COLUMN account_invoice.commercial_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.commercial_partner_id IS 'Commercial Entity';


--
-- Name: COLUMN account_invoice.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.section_id IS 'Sales Team';


--
-- Name: COLUMN account_invoice.x_tax_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_tax_invoice IS 'Tax Invoice';


--
-- Name: COLUMN account_invoice.address_shipping_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.address_shipping_id IS 'Shipping Address';


--
-- Name: COLUMN account_invoice.x_bill_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_bill_from IS 'Bill From';


--
-- Name: COLUMN account_invoice.contract_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.contract_id IS 'Contract';


--
-- Name: COLUMN account_invoice.x_checked_by; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_checked_by IS 'Checked By';


--
-- Name: COLUMN account_invoice.x_prepared_by; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_prepared_by IS 'Prepared By';


--
-- Name: COLUMN account_invoice.x_received_by; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_received_by IS 'Received By';


--
-- Name: COLUMN account_invoice.x_received_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_received_date IS 'Received Date';


--
-- Name: COLUMN account_invoice.x_kind_attn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_kind_attn IS 'Contact (Kind Attn:)';


--
-- Name: COLUMN account_invoice.x_po_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_po_ref IS 'P.O.Number';


--
-- Name: COLUMN account_invoice.x_bill_period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_bill_period_from IS 'Bill From';


--
-- Name: COLUMN account_invoice.x_bill_period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_bill_period_to IS 'Bill To';


--
-- Name: COLUMN account_invoice.x_book_no; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice.x_book_no IS 'Book Number';


--
-- Name: account_invoice_cancel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_cancel (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_invoice_cancel OWNER TO odoo;

--
-- Name: TABLE account_invoice_cancel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_cancel IS 'Cancel the Selected Invoices';


--
-- Name: COLUMN account_invoice_cancel.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_cancel.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice_cancel.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_cancel.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice_cancel.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_cancel.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice_cancel.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_cancel.write_uid IS 'Last Updated by';


--
-- Name: account_invoice_cancel_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_cancel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_cancel_id_seq OWNER TO odoo;

--
-- Name: account_invoice_cancel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_cancel_id_seq OWNED BY account_invoice_cancel.id;


--
-- Name: account_invoice_confirm; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_confirm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_invoice_confirm OWNER TO odoo;

--
-- Name: TABLE account_invoice_confirm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_confirm IS 'Confirm the selected invoices';


--
-- Name: COLUMN account_invoice_confirm.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_confirm.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice_confirm.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_confirm.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice_confirm.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_confirm.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice_confirm.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_confirm.write_uid IS 'Last Updated by';


--
-- Name: account_invoice_confirm_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_confirm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_confirm_id_seq OWNER TO odoo;

--
-- Name: account_invoice_confirm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_confirm_id_seq OWNED BY account_invoice_confirm.id;


--
-- Name: account_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_id_seq OWNER TO odoo;

--
-- Name: account_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_id_seq OWNED BY account_invoice.id;


--
-- Name: account_invoice_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_line (
    id integer NOT NULL,
    origin character varying,
    create_uid integer,
    uos_id integer,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    sequence integer,
    invoice_id integer,
    price_unit numeric NOT NULL,
    price_subtotal numeric,
    company_id integer,
    write_uid integer,
    discount numeric,
    product_id integer,
    write_date timestamp without time zone,
    account_analytic_id integer,
    partner_id integer,
    quantity numeric NOT NULL,
    name text NOT NULL,
    purchase_line_id integer,
    start_date date,
    end_date date
);


ALTER TABLE public.account_invoice_line OWNER TO odoo;

--
-- Name: TABLE account_invoice_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_line IS 'Invoice Line';


--
-- Name: COLUMN account_invoice_line.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.origin IS 'Source Document';


--
-- Name: COLUMN account_invoice_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice_line.uos_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.uos_id IS 'Unit of Measure';


--
-- Name: COLUMN account_invoice_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.account_id IS 'Account';


--
-- Name: COLUMN account_invoice_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.sequence IS 'Sequence';


--
-- Name: COLUMN account_invoice_line.invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.invoice_id IS 'Invoice Reference';


--
-- Name: COLUMN account_invoice_line.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.price_unit IS 'Unit Price';


--
-- Name: COLUMN account_invoice_line.price_subtotal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.price_subtotal IS 'Amount';


--
-- Name: COLUMN account_invoice_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.company_id IS 'Company';


--
-- Name: COLUMN account_invoice_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_invoice_line.discount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.discount IS 'Discount (%)';


--
-- Name: COLUMN account_invoice_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.product_id IS 'Product';


--
-- Name: COLUMN account_invoice_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice_line.account_analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.account_analytic_id IS 'Analytic Account';


--
-- Name: COLUMN account_invoice_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.partner_id IS 'Partner';


--
-- Name: COLUMN account_invoice_line.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.quantity IS 'Quantity';


--
-- Name: COLUMN account_invoice_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.name IS 'Description';


--
-- Name: COLUMN account_invoice_line.purchase_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.purchase_line_id IS 'Purchase Order Line';


--
-- Name: COLUMN account_invoice_line.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.start_date IS 'Start Date';


--
-- Name: COLUMN account_invoice_line.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_line.end_date IS 'End Date';


--
-- Name: account_invoice_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_line_id_seq OWNER TO odoo;

--
-- Name: account_invoice_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_line_id_seq OWNED BY account_invoice_line.id;


--
-- Name: account_invoice_line_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_line_tax (
    invoice_line_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.account_invoice_line_tax OWNER TO odoo;

--
-- Name: TABLE account_invoice_line_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_line_tax IS 'RELATION BETWEEN account_invoice_line AND account_tax';


--
-- Name: account_invoice_refund; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_refund (
    id integer NOT NULL,
    create_uid integer,
    filter_refund character varying NOT NULL,
    create_date timestamp without time zone,
    description character varying NOT NULL,
    journal_id integer,
    period integer,
    write_date timestamp without time zone,
    date date,
    write_uid integer
);


ALTER TABLE public.account_invoice_refund OWNER TO odoo;

--
-- Name: TABLE account_invoice_refund; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_refund IS 'Invoice Refund';


--
-- Name: COLUMN account_invoice_refund.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice_refund.filter_refund; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.filter_refund IS 'Refund Method';


--
-- Name: COLUMN account_invoice_refund.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice_refund.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.description IS 'Reason';


--
-- Name: COLUMN account_invoice_refund.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.journal_id IS 'Refund Journal';


--
-- Name: COLUMN account_invoice_refund.period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.period IS 'Force period';


--
-- Name: COLUMN account_invoice_refund.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice_refund.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.date IS 'Date';


--
-- Name: COLUMN account_invoice_refund.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_refund.write_uid IS 'Last Updated by';


--
-- Name: account_invoice_refund_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_refund_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_refund_id_seq OWNER TO odoo;

--
-- Name: account_invoice_refund_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_refund_id_seq OWNED BY account_invoice_refund.id;


--
-- Name: product_product; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_product (
    id integer NOT NULL,
    ean13 character varying(13),
    create_date timestamp without time zone,
    default_code character varying,
    name_template character varying,
    create_uid integer,
    message_last_post timestamp without time zone,
    product_tmpl_id integer NOT NULL,
    image_variant bytea,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.product_product OWNER TO odoo;

--
-- Name: TABLE product_product; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_product IS 'Product';


--
-- Name: COLUMN product_product.ean13; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.ean13 IS 'EAN13 Barcode';


--
-- Name: COLUMN product_product.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.create_date IS 'Created on';


--
-- Name: COLUMN product_product.default_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.default_code IS 'Internal Reference';


--
-- Name: COLUMN product_product.name_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.name_template IS 'Template Name';


--
-- Name: COLUMN product_product.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.create_uid IS 'Created by';


--
-- Name: COLUMN product_product.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN product_product.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_product.image_variant; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.image_variant IS 'Variant Image';


--
-- Name: COLUMN product_product.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_product.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_product.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_product.active IS 'Active';


--
-- Name: product_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_template (
    id integer NOT NULL,
    warranty double precision,
    uos_id integer,
    list_price numeric,
    weight numeric,
    color integer,
    image bytea,
    write_uid integer,
    mes_type character varying,
    uom_id integer NOT NULL,
    description_purchase text,
    create_date timestamp without time zone,
    uos_coeff numeric,
    create_uid integer,
    sale_ok boolean,
    categ_id integer NOT NULL,
    product_manager integer,
    message_last_post timestamp without time zone,
    company_id integer,
    state character varying,
    uom_po_id integer NOT NULL,
    description_sale text,
    description text,
    weight_net numeric,
    volume double precision,
    write_date timestamp without time zone,
    active boolean,
    rental boolean,
    image_medium bytea,
    name character varying NOT NULL,
    type character varying NOT NULL,
    image_small bytea,
    track_all boolean,
    loc_row character varying(16),
    track_outgoing boolean,
    loc_rack character varying(16),
    loc_case character varying(16),
    track_incoming boolean,
    sale_delay double precision,
    purchase_ok boolean,
    sale_line_warn_msg text,
    purchase_line_warn_msg text,
    purchase_line_warn character varying NOT NULL,
    sale_line_warn character varying NOT NULL,
    track_production boolean,
    produce_delay double precision,
    must_have_dates boolean
);


ALTER TABLE public.product_template OWNER TO odoo;

--
-- Name: TABLE product_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_template IS 'Product Template';


--
-- Name: COLUMN product_template.warranty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.warranty IS 'Warranty';


--
-- Name: COLUMN product_template.uos_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.uos_id IS 'Unit of Sale';


--
-- Name: COLUMN product_template.list_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.list_price IS 'Sale Price';


--
-- Name: COLUMN product_template.weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.weight IS 'Gross Weight';


--
-- Name: COLUMN product_template.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.color IS 'Color Index';


--
-- Name: COLUMN product_template.image; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.image IS 'Image';


--
-- Name: COLUMN product_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_template.mes_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.mes_type IS 'Measure Type';


--
-- Name: COLUMN product_template.uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.uom_id IS 'Unit of Measure';


--
-- Name: COLUMN product_template.description_purchase; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.description_purchase IS 'Purchase Description';


--
-- Name: COLUMN product_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.create_date IS 'Created on';


--
-- Name: COLUMN product_template.uos_coeff; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.uos_coeff IS 'Unit of Measure -> UOS Coeff';


--
-- Name: COLUMN product_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.create_uid IS 'Created by';


--
-- Name: COLUMN product_template.sale_ok; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.sale_ok IS 'Can be Sold';


--
-- Name: COLUMN product_template.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.categ_id IS 'Internal Category';


--
-- Name: COLUMN product_template.product_manager; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.product_manager IS 'Product Manager';


--
-- Name: COLUMN product_template.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN product_template.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.company_id IS 'Company';


--
-- Name: COLUMN product_template.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.state IS 'Status';


--
-- Name: COLUMN product_template.uom_po_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.uom_po_id IS 'Purchase Unit of Measure';


--
-- Name: COLUMN product_template.description_sale; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.description_sale IS 'Sale Description';


--
-- Name: COLUMN product_template.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.description IS 'Description';


--
-- Name: COLUMN product_template.weight_net; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.weight_net IS 'Net Weight';


--
-- Name: COLUMN product_template.volume; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.volume IS 'Volume';


--
-- Name: COLUMN product_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_template.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.active IS 'Active';


--
-- Name: COLUMN product_template.rental; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.rental IS 'Can be Rent';


--
-- Name: COLUMN product_template.image_medium; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.image_medium IS 'Medium-sized image';


--
-- Name: COLUMN product_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.name IS 'Name';


--
-- Name: COLUMN product_template.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.type IS 'Product Type';


--
-- Name: COLUMN product_template.image_small; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.image_small IS 'Small-sized image';


--
-- Name: COLUMN product_template.track_all; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.track_all IS 'Full Lots Traceability';


--
-- Name: COLUMN product_template.loc_row; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.loc_row IS 'Row';


--
-- Name: COLUMN product_template.track_outgoing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.track_outgoing IS 'Track Outgoing Lots';


--
-- Name: COLUMN product_template.loc_rack; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.loc_rack IS 'Rack';


--
-- Name: COLUMN product_template.loc_case; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.loc_case IS 'Case';


--
-- Name: COLUMN product_template.track_incoming; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.track_incoming IS 'Track Incoming Lots';


--
-- Name: COLUMN product_template.sale_delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.sale_delay IS 'Customer Lead Time';


--
-- Name: COLUMN product_template.purchase_ok; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.purchase_ok IS 'Can be Purchased';


--
-- Name: COLUMN product_template.sale_line_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.sale_line_warn_msg IS 'Message for Sales Order Line';


--
-- Name: COLUMN product_template.purchase_line_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.purchase_line_warn_msg IS 'Message for Purchase Order Line';


--
-- Name: COLUMN product_template.purchase_line_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.purchase_line_warn IS 'Purchase Order Line';


--
-- Name: COLUMN product_template.sale_line_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.sale_line_warn IS 'Sales Order Line';


--
-- Name: COLUMN product_template.track_production; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.track_production IS 'Track Manufacturing Lots';


--
-- Name: COLUMN product_template.produce_delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.produce_delay IS 'Manufacturing Lead Time';


--
-- Name: COLUMN product_template.must_have_dates; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_template.must_have_dates IS 'Must Have Start and End Dates';


--
-- Name: product_uom; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_uom (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    rounding numeric NOT NULL,
    write_uid integer,
    active boolean,
    write_date timestamp without time zone,
    factor numeric NOT NULL,
    uom_type character varying NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT product_uom_factor_gt_zero CHECK ((factor <> (0)::numeric))
);


ALTER TABLE public.product_uom OWNER TO odoo;

--
-- Name: TABLE product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN product_uom.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.create_uid IS 'Created by';


--
-- Name: COLUMN product_uom.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.create_date IS 'Created on';


--
-- Name: COLUMN product_uom.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.name IS 'Unit of Measure';


--
-- Name: COLUMN product_uom.rounding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.rounding IS 'Rounding Precision';


--
-- Name: COLUMN product_uom.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_uom.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.active IS 'Active';


--
-- Name: COLUMN product_uom.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_uom.factor; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.factor IS 'Ratio';


--
-- Name: COLUMN product_uom.uom_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.uom_type IS 'Type';


--
-- Name: COLUMN product_uom.category_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom.category_id IS 'Unit of Measure Category';


--
-- Name: res_currency_rate; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_currency_rate (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name timestamp without time zone NOT NULL,
    write_uid integer,
    currency_id integer,
    rate numeric,
    write_date timestamp without time zone
);


ALTER TABLE public.res_currency_rate OWNER TO odoo;

--
-- Name: TABLE res_currency_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_currency_rate IS 'Currency Rate';


--
-- Name: COLUMN res_currency_rate.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.create_uid IS 'Created by';


--
-- Name: COLUMN res_currency_rate.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.create_date IS 'Created on';


--
-- Name: COLUMN res_currency_rate.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.name IS 'Date';


--
-- Name: COLUMN res_currency_rate.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_currency_rate.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.currency_id IS 'Currency';


--
-- Name: COLUMN res_currency_rate.rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.rate IS 'Rate';


--
-- Name: COLUMN res_currency_rate.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency_rate.write_date IS 'Last Updated on';


--
-- Name: res_partner; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner (
    id integer NOT NULL,
    name character varying NOT NULL,
    company_id integer,
    comment text,
    ean13 character varying(13),
    create_date timestamp without time zone,
    color integer,
    image_small bytea,
    image bytea,
    date date,
    street character varying,
    city character varying,
    display_name character varying,
    zip character varying(24),
    title integer,
    function character varying,
    country_id integer,
    parent_id integer,
    supplier boolean,
    ref character varying,
    email character varying,
    is_company boolean,
    website character varying,
    customer boolean,
    fax character varying,
    street2 character varying,
    employee boolean,
    credit_limit double precision,
    write_date timestamp without time zone,
    active boolean,
    tz character varying(64),
    write_uid integer,
    lang character varying,
    create_uid integer,
    image_medium bytea,
    phone character varying,
    mobile character varying,
    type character varying,
    use_parent_address boolean,
    user_id integer,
    birthdate character varying,
    vat character varying,
    state_id integer,
    commercial_partner_id integer,
    notify_email character varying NOT NULL,
    message_last_post timestamp without time zone,
    opt_out boolean,
    section_id integer,
    signup_type character varying,
    signup_expiration timestamp without time zone,
    signup_token character varying,
    calendar_last_notif_ack timestamp without time zone,
    last_reconciliation_date timestamp without time zone,
    debit_limit double precision,
    vat_subjected boolean,
    x_pan character varying,
    x_tin character varying,
    x_accounts_approval boolean,
    x_srv_tax character varying,
    x_roc character varying,
    x_watchlist character varying,
    picking_warn character varying NOT NULL,
    sale_warn character varying NOT NULL,
    purchase_warn character varying NOT NULL,
    picking_warn_msg text,
    invoice_warn_msg text,
    sale_warn_msg text,
    invoice_warn character varying NOT NULL,
    purchase_warn_msg text,
    x_core_code character varying,
    x_kyc_template character varying,
    x_kyc_form character varying
);


ALTER TABLE public.res_partner OWNER TO odoo;

--
-- Name: COLUMN res_partner.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.comment IS 'Notes';


--
-- Name: COLUMN res_partner.ean13; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.ean13 IS 'EAN13';


--
-- Name: COLUMN res_partner.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.create_date IS 'Created on';


--
-- Name: COLUMN res_partner.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.color IS 'Color Index';


--
-- Name: COLUMN res_partner.image_small; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.image_small IS 'Small-sized image';


--
-- Name: COLUMN res_partner.image; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.image IS 'Image';


--
-- Name: COLUMN res_partner.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.date IS 'Date';


--
-- Name: COLUMN res_partner.street; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.street IS 'Street';


--
-- Name: COLUMN res_partner.city; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.city IS 'City';


--
-- Name: COLUMN res_partner.display_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.display_name IS 'Name';


--
-- Name: COLUMN res_partner.zip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.zip IS 'Zip';


--
-- Name: COLUMN res_partner.title; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.title IS 'Title';


--
-- Name: COLUMN res_partner.function; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.function IS 'Job Position';


--
-- Name: COLUMN res_partner.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.country_id IS 'Country';


--
-- Name: COLUMN res_partner.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.parent_id IS 'Related Company';


--
-- Name: COLUMN res_partner.supplier; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.supplier IS 'Supplier';


--
-- Name: COLUMN res_partner.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.ref IS 'Contact Reference';


--
-- Name: COLUMN res_partner.email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.email IS 'Email';


--
-- Name: COLUMN res_partner.is_company; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.is_company IS 'Is a Company';


--
-- Name: COLUMN res_partner.website; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.website IS 'Website';


--
-- Name: COLUMN res_partner.customer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.customer IS 'Customer';


--
-- Name: COLUMN res_partner.fax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.fax IS 'Fax';


--
-- Name: COLUMN res_partner.street2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.street2 IS 'Street2';


--
-- Name: COLUMN res_partner.employee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.employee IS 'Employee';


--
-- Name: COLUMN res_partner.credit_limit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.credit_limit IS 'Credit Limit';


--
-- Name: COLUMN res_partner.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_partner.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.active IS 'Active';


--
-- Name: COLUMN res_partner.tz; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.tz IS 'Timezone';


--
-- Name: COLUMN res_partner.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.lang IS 'Language';


--
-- Name: COLUMN res_partner.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner.image_medium; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.image_medium IS 'Medium-sized image';


--
-- Name: COLUMN res_partner.phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.phone IS 'Phone';


--
-- Name: COLUMN res_partner.mobile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.mobile IS 'Mobile';


--
-- Name: COLUMN res_partner.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.type IS 'Address Type';


--
-- Name: COLUMN res_partner.use_parent_address; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.use_parent_address IS 'Use Company Address';


--
-- Name: COLUMN res_partner.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.user_id IS 'Salesperson';


--
-- Name: COLUMN res_partner.birthdate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.birthdate IS 'Birthdate';


--
-- Name: COLUMN res_partner.vat; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.vat IS 'TIN';


--
-- Name: COLUMN res_partner.state_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.state_id IS 'State';


--
-- Name: COLUMN res_partner.commercial_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.commercial_partner_id IS 'Commercial Entity';


--
-- Name: COLUMN res_partner.notify_email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.notify_email IS 'Receive Inbox Notifications by Email';


--
-- Name: COLUMN res_partner.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN res_partner.opt_out; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.opt_out IS 'Opt-Out';


--
-- Name: COLUMN res_partner.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.section_id IS 'Sales Team';


--
-- Name: COLUMN res_partner.signup_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.signup_type IS 'Signup Token Type';


--
-- Name: COLUMN res_partner.signup_expiration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.signup_expiration IS 'Signup Expiration';


--
-- Name: COLUMN res_partner.signup_token; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.signup_token IS 'Signup Token';


--
-- Name: COLUMN res_partner.calendar_last_notif_ack; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.calendar_last_notif_ack IS 'Last notification marked as read from base Calendar';


--
-- Name: COLUMN res_partner.last_reconciliation_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.last_reconciliation_date IS 'Latest Full Reconciliation Date';


--
-- Name: COLUMN res_partner.debit_limit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.debit_limit IS 'Payable Limit';


--
-- Name: COLUMN res_partner.vat_subjected; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.vat_subjected IS 'VAT Legal Statement';


--
-- Name: COLUMN res_partner.x_pan; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_pan IS 'PAN #';


--
-- Name: COLUMN res_partner.x_tin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_tin IS 'TIN #';


--
-- Name: COLUMN res_partner.x_accounts_approval; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_accounts_approval IS 'Approved by Accounts';


--
-- Name: COLUMN res_partner.x_srv_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_srv_tax IS 'Service Tax #';


--
-- Name: COLUMN res_partner.x_roc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_roc IS 'ROC #';


--
-- Name: COLUMN res_partner.x_watchlist; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_watchlist IS 'Watchlist Status';


--
-- Name: COLUMN res_partner.picking_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.picking_warn IS 'Stock Picking';


--
-- Name: COLUMN res_partner.sale_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.sale_warn IS 'Sales Order';


--
-- Name: COLUMN res_partner.purchase_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.purchase_warn IS 'Purchase Order';


--
-- Name: COLUMN res_partner.picking_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.picking_warn_msg IS 'Message for Stock Picking';


--
-- Name: COLUMN res_partner.invoice_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.invoice_warn_msg IS 'Message for Invoice';


--
-- Name: COLUMN res_partner.sale_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.sale_warn_msg IS 'Message for Sales Order';


--
-- Name: COLUMN res_partner.invoice_warn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.invoice_warn IS 'Invoice';


--
-- Name: COLUMN res_partner.purchase_warn_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.purchase_warn_msg IS 'Message for Purchase Order';


--
-- Name: COLUMN res_partner.x_core_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_core_code IS 'Core Software Party Code';


--
-- Name: COLUMN res_partner.x_kyc_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_kyc_template IS 'KYC Template';


--
-- Name: COLUMN res_partner.x_kyc_form; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner.x_kyc_form IS 'KYC Form';


--
-- Name: account_invoice_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW account_invoice_report AS
 WITH currency_rate(currency_id, rate, date_start, date_end) AS (
         SELECT r.currency_id,
            r.rate,
            r.name AS date_start,
            ( SELECT r2.name
                   FROM res_currency_rate r2
                  WHERE ((r2.name > r.name) AND (r2.currency_id = r.currency_id))
                  ORDER BY r2.name
                 LIMIT 1) AS date_end
           FROM res_currency_rate r
        )
 SELECT sub.id,
    sub.date,
    sub.product_id,
    sub.partner_id,
    sub.country_id,
    sub.payment_term,
    sub.period_id,
    sub.uom_name,
    sub.currency_id,
    sub.journal_id,
    sub.fiscal_position,
    sub.user_id,
    sub.company_id,
    sub.nbr,
    sub.type,
    sub.state,
    sub.categ_id,
    sub.date_due,
    sub.account_id,
    sub.account_line_id,
    sub.partner_bank_id,
    sub.product_qty,
    (sub.price_total / cr.rate) AS price_total,
    (sub.price_average / cr.rate) AS price_average,
    cr.rate AS currency_rate,
    (sub.residual / cr.rate) AS residual,
    sub.commercial_partner_id,
    sub.section_id
   FROM (( SELECT min(ail.id) AS id,
            ai.date_invoice AS date,
            ail.product_id,
            ai.partner_id,
            ai.payment_term,
            ai.period_id,
            u2.name AS uom_name,
            ai.currency_id,
            ai.journal_id,
            ai.fiscal_position,
            ai.user_id,
            ai.company_id,
            count(ail.*) AS nbr,
            ai.type,
            ai.state,
            pt.categ_id,
            ai.date_due,
            ai.account_id,
            ail.account_id AS account_line_id,
            ai.partner_bank_id,
            sum(
                CASE
                    WHEN ((ai.type)::text = ANY (ARRAY[('out_refund'::character varying)::text, ('in_invoice'::character varying)::text])) THEN (((- ail.quantity) / u.factor) * u2.factor)
                    ELSE ((ail.quantity / u.factor) * u2.factor)
                END) AS product_qty,
            sum(
                CASE
                    WHEN ((ai.type)::text = ANY (ARRAY[('out_refund'::character varying)::text, ('in_invoice'::character varying)::text])) THEN (- ail.price_subtotal)
                    ELSE ail.price_subtotal
                END) AS price_total,
            (
                CASE
                    WHEN ((ai.type)::text = ANY (ARRAY[('out_refund'::character varying)::text, ('in_invoice'::character varying)::text])) THEN sum((- ail.price_subtotal))
                    ELSE sum(ail.price_subtotal)
                END /
                CASE
                    WHEN (sum(((ail.quantity / u.factor) * u2.factor)) <> (0)::numeric) THEN
                    CASE
                        WHEN ((ai.type)::text = ANY (ARRAY[('out_refund'::character varying)::text, ('in_invoice'::character varying)::text])) THEN sum((((- ail.quantity) / u.factor) * u2.factor))
                        ELSE sum(((ail.quantity / u.factor) * u2.factor))
                    END
                    ELSE (1)::numeric
                END) AS price_average,
            ((
                CASE
                    WHEN ((ai.type)::text = ANY (ARRAY[('out_refund'::character varying)::text, ('in_invoice'::character varying)::text])) THEN (- ai.residual)
                    ELSE ai.residual
                END / (( SELECT count(*) AS count
                   FROM account_invoice_line l
                  WHERE (l.invoice_id = ai.id)))::numeric) * (count(*))::numeric) AS residual,
            ai.commercial_partner_id,
            partner.country_id,
            ai.section_id
           FROM ((((((account_invoice_line ail
             JOIN account_invoice ai ON ((ai.id = ail.invoice_id)))
             JOIN res_partner partner ON ((ai.commercial_partner_id = partner.id)))
             LEFT JOIN product_product pr ON ((pr.id = ail.product_id)))
             LEFT JOIN product_template pt ON ((pt.id = pr.product_tmpl_id)))
             LEFT JOIN product_uom u ON ((u.id = ail.uos_id)))
             LEFT JOIN product_uom u2 ON ((u2.id = pt.uom_id)))
          GROUP BY ail.product_id, ai.date_invoice, ai.id, ai.partner_id, ai.payment_term, ai.period_id, u2.name, u2.id, ai.currency_id, ai.journal_id, ai.fiscal_position, ai.user_id, ai.company_id, ai.type, ai.state, pt.categ_id, ai.date_due, ai.account_id, ail.account_id, ai.partner_bank_id, ai.residual, ai.amount_total, ai.commercial_partner_id, partner.country_id, ai.section_id) sub
     JOIN currency_rate cr ON ((((cr.currency_id = sub.currency_id) AND (cr.date_start <= COALESCE((sub.date)::timestamp with time zone, now()))) AND ((cr.date_end IS NULL) OR (cr.date_end > COALESCE((sub.date)::timestamp with time zone, now()))))));


ALTER TABLE public.account_invoice_report OWNER TO odoo;

--
-- Name: account_invoice_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_invoice_tax (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    sequence integer,
    company_id integer,
    invoice_id integer,
    manual boolean,
    base_amount numeric,
    write_uid integer,
    tax_code_id integer,
    amount numeric,
    base numeric,
    write_date timestamp without time zone,
    account_analytic_id integer,
    tax_amount numeric,
    base_code_id integer,
    name character varying NOT NULL
);


ALTER TABLE public.account_invoice_tax OWNER TO odoo;

--
-- Name: TABLE account_invoice_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_invoice_tax IS 'Invoice Tax';


--
-- Name: COLUMN account_invoice_tax.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.create_uid IS 'Created by';


--
-- Name: COLUMN account_invoice_tax.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.create_date IS 'Created on';


--
-- Name: COLUMN account_invoice_tax.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.account_id IS 'Tax Account';


--
-- Name: COLUMN account_invoice_tax.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.sequence IS 'Sequence';


--
-- Name: COLUMN account_invoice_tax.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.company_id IS 'Company';


--
-- Name: COLUMN account_invoice_tax.invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.invoice_id IS 'Invoice Line';


--
-- Name: COLUMN account_invoice_tax.manual; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.manual IS 'Manual';


--
-- Name: COLUMN account_invoice_tax.base_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.base_amount IS 'Base Code Amount';


--
-- Name: COLUMN account_invoice_tax.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_invoice_tax.tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.tax_code_id IS 'Tax Code';


--
-- Name: COLUMN account_invoice_tax.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.amount IS 'Amount';


--
-- Name: COLUMN account_invoice_tax.base; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.base IS 'Base';


--
-- Name: COLUMN account_invoice_tax.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_invoice_tax.account_analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.account_analytic_id IS 'Analytic account';


--
-- Name: COLUMN account_invoice_tax.tax_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.tax_amount IS 'Tax Code Amount';


--
-- Name: COLUMN account_invoice_tax.base_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.base_code_id IS 'Base Code';


--
-- Name: COLUMN account_invoice_tax.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_invoice_tax.name IS 'Tax Description';


--
-- Name: account_invoice_tax_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_invoice_tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_invoice_tax_id_seq OWNER TO odoo;

--
-- Name: account_invoice_tax_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_invoice_tax_id_seq OWNED BY account_invoice_tax.id;


--
-- Name: account_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal (
    id integer NOT NULL,
    code character varying(5) NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    loss_account_id integer,
    currency integer,
    internal_account_id integer,
    create_uid integer,
    user_id integer,
    cash_control boolean,
    centralisation boolean,
    company_id integer NOT NULL,
    profit_account_id integer,
    type character varying(32) NOT NULL,
    default_debit_account_id integer,
    default_credit_account_id integer,
    sequence_id integer NOT NULL,
    write_date timestamp without time zone,
    allow_date boolean,
    update_posted boolean,
    name character varying NOT NULL,
    analytic_journal_id integer,
    with_last_closing_balance boolean,
    entry_posted boolean,
    group_invoice_lines boolean,
    x_tax_invoice boolean,
    x_bill_from integer
);


ALTER TABLE public.account_journal OWNER TO odoo;

--
-- Name: TABLE account_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal IS 'Journal';


--
-- Name: COLUMN account_journal.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.code IS 'Code';


--
-- Name: COLUMN account_journal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.create_date IS 'Created on';


--
-- Name: COLUMN account_journal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_journal.loss_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.loss_account_id IS 'Loss Account';


--
-- Name: COLUMN account_journal.currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.currency IS 'Currency';


--
-- Name: COLUMN account_journal.internal_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.internal_account_id IS 'Internal Transfers Account';


--
-- Name: COLUMN account_journal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.create_uid IS 'Created by';


--
-- Name: COLUMN account_journal.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.user_id IS 'User';


--
-- Name: COLUMN account_journal.cash_control; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.cash_control IS 'Cash Control';


--
-- Name: COLUMN account_journal.centralisation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.centralisation IS 'Centralized Counterpart';


--
-- Name: COLUMN account_journal.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.company_id IS 'Company';


--
-- Name: COLUMN account_journal.profit_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.profit_account_id IS 'Profit Account';


--
-- Name: COLUMN account_journal.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.type IS 'Type';


--
-- Name: COLUMN account_journal.default_debit_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.default_debit_account_id IS 'Default Debit Account';


--
-- Name: COLUMN account_journal.default_credit_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.default_credit_account_id IS 'Default Credit Account';


--
-- Name: COLUMN account_journal.sequence_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.sequence_id IS 'Entry Sequence';


--
-- Name: COLUMN account_journal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_journal.allow_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.allow_date IS 'Check Date in Period';


--
-- Name: COLUMN account_journal.update_posted; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.update_posted IS 'Allow Cancelling Entries';


--
-- Name: COLUMN account_journal.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.name IS 'Journal Name';


--
-- Name: COLUMN account_journal.analytic_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.analytic_journal_id IS 'Analytic Journal';


--
-- Name: COLUMN account_journal.with_last_closing_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.with_last_closing_balance IS 'Opening With Last Closing Balance';


--
-- Name: COLUMN account_journal.entry_posted; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.entry_posted IS 'Autopost Created Moves';


--
-- Name: COLUMN account_journal.group_invoice_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.group_invoice_lines IS 'Group Invoice Lines';


--
-- Name: COLUMN account_journal.x_tax_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.x_tax_invoice IS 'Tax Invoice';


--
-- Name: COLUMN account_journal.x_bill_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal.x_bill_from IS 'Bill Address';


--
-- Name: account_journal_account_vat_declaration_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_account_vat_declaration_rel (
    account_vat_declaration_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_journal_account_vat_declaration_rel OWNER TO odoo;

--
-- Name: TABLE account_journal_account_vat_declaration_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_account_vat_declaration_rel IS 'RELATION BETWEEN account_vat_declaration AND account_journal';


--
-- Name: account_journal_accounting_report_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_accounting_report_rel (
    accounting_report_id integer NOT NULL,
    account_journal_id integer NOT NULL
);


ALTER TABLE public.account_journal_accounting_report_rel OWNER TO odoo;

--
-- Name: TABLE account_journal_accounting_report_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_accounting_report_rel IS 'RELATION BETWEEN accounting_report AND account_journal';


--
-- Name: account_journal_cashbox_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_cashbox_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    journal_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    pieces numeric
);


ALTER TABLE public.account_journal_cashbox_line OWNER TO odoo;

--
-- Name: TABLE account_journal_cashbox_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_cashbox_line IS 'account.journal.cashbox.line';


--
-- Name: COLUMN account_journal_cashbox_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_journal_cashbox_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.create_date IS 'Created on';


--
-- Name: COLUMN account_journal_cashbox_line.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.journal_id IS 'Journal';


--
-- Name: COLUMN account_journal_cashbox_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_journal_cashbox_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_journal_cashbox_line.pieces; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_cashbox_line.pieces IS 'Values';


--
-- Name: account_journal_cashbox_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_journal_cashbox_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_journal_cashbox_line_id_seq OWNER TO odoo;

--
-- Name: account_journal_cashbox_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_journal_cashbox_line_id_seq OWNED BY account_journal_cashbox_line.id;


--
-- Name: account_journal_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_group_rel (
    journal_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.account_journal_group_rel OWNER TO odoo;

--
-- Name: TABLE account_journal_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_group_rel IS 'RELATION BETWEEN account_journal AND res_groups';


--
-- Name: account_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_journal_id_seq OWNER TO odoo;

--
-- Name: account_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_journal_id_seq OWNED BY account_journal.id;


--
-- Name: account_journal_period; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_period (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    journal_id integer NOT NULL,
    state character varying NOT NULL,
    period_id integer NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    write_uid integer
);


ALTER TABLE public.account_journal_period OWNER TO odoo;

--
-- Name: TABLE account_journal_period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_period IS 'Journal Period';


--
-- Name: COLUMN account_journal_period.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.create_uid IS 'Created by';


--
-- Name: COLUMN account_journal_period.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.create_date IS 'Created on';


--
-- Name: COLUMN account_journal_period.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.name IS 'Journal-Period Name';


--
-- Name: COLUMN account_journal_period.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.company_id IS 'Company';


--
-- Name: COLUMN account_journal_period.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.journal_id IS 'Journal';


--
-- Name: COLUMN account_journal_period.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.state IS 'Status';


--
-- Name: COLUMN account_journal_period.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.period_id IS 'Period';


--
-- Name: COLUMN account_journal_period.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_journal_period.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.active IS 'Active';


--
-- Name: COLUMN account_journal_period.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_period.write_uid IS 'Last Updated by';


--
-- Name: account_journal_period_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_journal_period_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_journal_period_id_seq OWNER TO odoo;

--
-- Name: account_journal_period_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_journal_period_id_seq OWNED BY account_journal_period.id;


--
-- Name: account_journal_select; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_select (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_journal_select OWNER TO odoo;

--
-- Name: TABLE account_journal_select; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_select IS 'Account Journal Select';


--
-- Name: COLUMN account_journal_select.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_select.create_uid IS 'Created by';


--
-- Name: COLUMN account_journal_select.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_select.create_date IS 'Created on';


--
-- Name: COLUMN account_journal_select.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_select.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_journal_select.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_journal_select.write_uid IS 'Last Updated by';


--
-- Name: account_journal_select_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_journal_select_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_journal_select_id_seq OWNER TO odoo;

--
-- Name: account_journal_select_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_journal_select_id_seq OWNED BY account_journal_select.id;


--
-- Name: account_journal_type_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_journal_type_rel (
    journal_id integer NOT NULL,
    type_id integer NOT NULL
);


ALTER TABLE public.account_journal_type_rel OWNER TO odoo;

--
-- Name: TABLE account_journal_type_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_journal_type_rel IS 'RELATION BETWEEN account_journal AND account_account_type';


--
-- Name: account_model; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_model (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    journal_id integer NOT NULL,
    company_id integer,
    write_date timestamp without time zone,
    write_uid integer,
    legend text
);


ALTER TABLE public.account_model OWNER TO odoo;

--
-- Name: TABLE account_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_model IS 'Account Model';


--
-- Name: COLUMN account_model.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.create_uid IS 'Created by';


--
-- Name: COLUMN account_model.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.create_date IS 'Created on';


--
-- Name: COLUMN account_model.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.name IS 'Model Name';


--
-- Name: COLUMN account_model.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.journal_id IS 'Journal';


--
-- Name: COLUMN account_model.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.company_id IS 'Company';


--
-- Name: COLUMN account_model.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_model.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_model.legend; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model.legend IS 'Legend';


--
-- Name: account_model_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_model_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_model_id_seq OWNER TO odoo;

--
-- Name: account_model_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_model_id_seq OWNED BY account_model.id;


--
-- Name: account_model_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_model_line (
    id integer NOT NULL,
    analytic_account_id integer,
    model_id integer NOT NULL,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    name character varying NOT NULL,
    sequence integer NOT NULL,
    write_uid integer,
    currency_id integer,
    credit numeric,
    date_maturity character varying,
    write_date timestamp without time zone,
    debit numeric,
    amount_currency double precision,
    partner_id integer,
    create_uid integer,
    quantity numeric,
    CONSTRAINT account_model_line_credit_debit1 CHECK (((credit * debit) = (0)::numeric)),
    CONSTRAINT account_model_line_credit_debit2 CHECK (((credit + debit) >= (0)::numeric))
);


ALTER TABLE public.account_model_line OWNER TO odoo;

--
-- Name: TABLE account_model_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_model_line IS 'Account Model Entries';


--
-- Name: COLUMN account_model_line.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_model_line.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.model_id IS 'Model';


--
-- Name: COLUMN account_model_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.create_date IS 'Created on';


--
-- Name: COLUMN account_model_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.account_id IS 'Account';


--
-- Name: COLUMN account_model_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.name IS 'Name';


--
-- Name: COLUMN account_model_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.sequence IS 'Sequence';


--
-- Name: COLUMN account_model_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_model_line.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.currency_id IS 'Currency';


--
-- Name: COLUMN account_model_line.credit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.credit IS 'Credit';


--
-- Name: COLUMN account_model_line.date_maturity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.date_maturity IS 'Maturity Date';


--
-- Name: COLUMN account_model_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_model_line.debit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.debit IS 'Debit';


--
-- Name: COLUMN account_model_line.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.amount_currency IS 'Amount Currency';


--
-- Name: COLUMN account_model_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.partner_id IS 'Partner';


--
-- Name: COLUMN account_model_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_model_line.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_model_line.quantity IS 'Quantity';


--
-- Name: account_model_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_model_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_model_line_id_seq OWNER TO odoo;

--
-- Name: account_model_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_model_line_id_seq OWNED BY account_model_line.id;


--
-- Name: account_move_bank_reconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_bank_reconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    journal_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_move_bank_reconcile OWNER TO odoo;

--
-- Name: TABLE account_move_bank_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_bank_reconcile IS 'Move bank reconcile';


--
-- Name: COLUMN account_move_bank_reconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_bank_reconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_bank_reconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_bank_reconcile.create_date IS 'Created on';


--
-- Name: COLUMN account_move_bank_reconcile.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_bank_reconcile.journal_id IS 'Journal';


--
-- Name: COLUMN account_move_bank_reconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_bank_reconcile.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_bank_reconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_bank_reconcile.write_date IS 'Last Updated on';


--
-- Name: account_move_bank_reconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_bank_reconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_bank_reconcile_id_seq OWNER TO odoo;

--
-- Name: account_move_bank_reconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_bank_reconcile_id_seq OWNED BY account_move_bank_reconcile.id;


--
-- Name: account_move_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_id_seq OWNER TO odoo;

--
-- Name: account_move_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_id_seq OWNED BY account_move.id;


--
-- Name: account_move_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_line_id_seq OWNER TO odoo;

--
-- Name: account_move_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_line_id_seq OWNED BY account_move_line.id;


--
-- Name: account_move_line_reconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line_reconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    writeoff numeric,
    write_uid integer,
    credit numeric,
    write_date timestamp without time zone,
    debit numeric,
    trans_nbr integer
);


ALTER TABLE public.account_move_line_reconcile OWNER TO odoo;

--
-- Name: TABLE account_move_line_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line_reconcile IS 'Account move line reconcile';


--
-- Name: COLUMN account_move_line_reconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_line_reconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.create_date IS 'Created on';


--
-- Name: COLUMN account_move_line_reconcile.writeoff; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.writeoff IS 'Write-Off amount';


--
-- Name: COLUMN account_move_line_reconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_line_reconcile.credit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.credit IS 'Credit amount';


--
-- Name: COLUMN account_move_line_reconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_move_line_reconcile.debit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.debit IS 'Debit amount';


--
-- Name: COLUMN account_move_line_reconcile.trans_nbr; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile.trans_nbr IS '# of Transaction';


--
-- Name: account_move_line_reconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_line_reconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_line_reconcile_id_seq OWNER TO odoo;

--
-- Name: account_move_line_reconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_line_reconcile_id_seq OWNED BY account_move_line_reconcile.id;


--
-- Name: account_move_line_reconcile_select; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line_reconcile_select (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_move_line_reconcile_select OWNER TO odoo;

--
-- Name: TABLE account_move_line_reconcile_select; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line_reconcile_select IS 'Move line reconcile select';


--
-- Name: COLUMN account_move_line_reconcile_select.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_select.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_line_reconcile_select.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_select.create_date IS 'Created on';


--
-- Name: COLUMN account_move_line_reconcile_select.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_select.account_id IS 'Account';


--
-- Name: COLUMN account_move_line_reconcile_select.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_select.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_line_reconcile_select.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_select.write_date IS 'Last Updated on';


--
-- Name: account_move_line_reconcile_select_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_line_reconcile_select_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_line_reconcile_select_id_seq OWNER TO odoo;

--
-- Name: account_move_line_reconcile_select_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_line_reconcile_select_id_seq OWNED BY account_move_line_reconcile_select.id;


--
-- Name: account_move_line_reconcile_writeoff; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line_reconcile_writeoff (
    id integer NOT NULL,
    comment character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    writeoff_acc_id integer NOT NULL,
    journal_id integer NOT NULL,
    analytic_id integer,
    write_date timestamp without time zone,
    date_p date,
    write_uid integer
);


ALTER TABLE public.account_move_line_reconcile_writeoff OWNER TO odoo;

--
-- Name: TABLE account_move_line_reconcile_writeoff; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line_reconcile_writeoff IS 'Account move line reconcile (writeoff)';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.comment IS 'Comment';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.create_date IS 'Created on';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.writeoff_acc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.writeoff_acc_id IS 'Write-Off account';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.journal_id IS 'Write-Off Journal';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.analytic_id IS 'Analytic Account';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.date_p; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.date_p IS 'Date';


--
-- Name: COLUMN account_move_line_reconcile_writeoff.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_reconcile_writeoff.write_uid IS 'Last Updated by';


--
-- Name: account_move_line_reconcile_writeoff_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_line_reconcile_writeoff_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_line_reconcile_writeoff_id_seq OWNER TO odoo;

--
-- Name: account_move_line_reconcile_writeoff_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_line_reconcile_writeoff_id_seq OWNED BY account_move_line_reconcile_writeoff.id;


--
-- Name: account_move_line_relation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line_relation (
    move_id integer NOT NULL,
    line_id integer NOT NULL
);


ALTER TABLE public.account_move_line_relation OWNER TO odoo;

--
-- Name: TABLE account_move_line_relation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line_relation IS 'RELATION BETWEEN account_statement_from_invoice_lines AND account_move_line';


--
-- Name: account_move_line_unreconcile_select; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_line_unreconcile_select (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    account_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_move_line_unreconcile_select OWNER TO odoo;

--
-- Name: TABLE account_move_line_unreconcile_select; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_line_unreconcile_select IS 'Unreconciliation';


--
-- Name: COLUMN account_move_line_unreconcile_select.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_unreconcile_select.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_line_unreconcile_select.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_unreconcile_select.create_date IS 'Created on';


--
-- Name: COLUMN account_move_line_unreconcile_select.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_unreconcile_select.account_id IS 'Account';


--
-- Name: COLUMN account_move_line_unreconcile_select.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_unreconcile_select.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_line_unreconcile_select.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_line_unreconcile_select.write_date IS 'Last Updated on';


--
-- Name: account_move_line_unreconcile_select_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_line_unreconcile_select_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_line_unreconcile_select_id_seq OWNER TO odoo;

--
-- Name: account_move_line_unreconcile_select_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_line_unreconcile_select_id_seq OWNED BY account_move_line_unreconcile_select.id;


--
-- Name: account_move_reconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_move_reconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date date,
    name character varying NOT NULL,
    opening_reconciliation boolean,
    write_uid integer,
    write_date timestamp without time zone,
    type character varying NOT NULL
);


ALTER TABLE public.account_move_reconcile OWNER TO odoo;

--
-- Name: TABLE account_move_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_move_reconcile IS 'Account Reconciliation';


--
-- Name: COLUMN account_move_reconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_move_reconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.create_date IS 'Creation date';


--
-- Name: COLUMN account_move_reconcile.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.name IS 'Name';


--
-- Name: COLUMN account_move_reconcile.opening_reconciliation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.opening_reconciliation IS 'Opening Entries Reconciliation';


--
-- Name: COLUMN account_move_reconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_move_reconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_move_reconcile.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_move_reconcile.type IS 'Type';


--
-- Name: account_move_reconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_move_reconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_move_reconcile_id_seq OWNER TO odoo;

--
-- Name: account_move_reconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_move_reconcile_id_seq OWNED BY account_move_reconcile.id;


--
-- Name: account_open_closed_fiscalyear; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_open_closed_fiscalyear (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    fyear_id integer NOT NULL
);


ALTER TABLE public.account_open_closed_fiscalyear OWNER TO odoo;

--
-- Name: TABLE account_open_closed_fiscalyear; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_open_closed_fiscalyear IS 'Choose Fiscal Year';


--
-- Name: COLUMN account_open_closed_fiscalyear.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_open_closed_fiscalyear.create_uid IS 'Created by';


--
-- Name: COLUMN account_open_closed_fiscalyear.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_open_closed_fiscalyear.create_date IS 'Created on';


--
-- Name: COLUMN account_open_closed_fiscalyear.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_open_closed_fiscalyear.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_open_closed_fiscalyear.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_open_closed_fiscalyear.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_open_closed_fiscalyear.fyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_open_closed_fiscalyear.fyear_id IS 'Fiscal Year';


--
-- Name: account_open_closed_fiscalyear_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_open_closed_fiscalyear_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_open_closed_fiscalyear_id_seq OWNER TO odoo;

--
-- Name: account_open_closed_fiscalyear_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_open_closed_fiscalyear_id_seq OWNED BY account_open_closed_fiscalyear.id;


--
-- Name: account_partner_balance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_partner_balance (
    id integer NOT NULL,
    create_uid integer,
    display_partner character varying,
    chart_account_id integer NOT NULL,
    result_selection character varying NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_partner_balance OWNER TO odoo;

--
-- Name: TABLE account_partner_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_partner_balance IS 'Print Account Partner Balance';


--
-- Name: COLUMN account_partner_balance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.create_uid IS 'Created by';


--
-- Name: COLUMN account_partner_balance.display_partner; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.display_partner IS 'Display Partners';


--
-- Name: COLUMN account_partner_balance.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_partner_balance.result_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.result_selection IS 'Partner''s';


--
-- Name: COLUMN account_partner_balance.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.date_from IS 'Start Date';


--
-- Name: COLUMN account_partner_balance.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.period_to IS 'End Period';


--
-- Name: COLUMN account_partner_balance.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.filter IS 'Filter by';


--
-- Name: COLUMN account_partner_balance.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.period_from IS 'Start Period';


--
-- Name: COLUMN account_partner_balance.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_partner_balance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_partner_balance.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.date_to IS 'End Date';


--
-- Name: COLUMN account_partner_balance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.create_date IS 'Created on';


--
-- Name: COLUMN account_partner_balance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_partner_balance.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_balance.target_move IS 'Target Moves';


--
-- Name: account_partner_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_partner_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_partner_balance_id_seq OWNER TO odoo;

--
-- Name: account_partner_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_partner_balance_id_seq OWNED BY account_partner_balance.id;


--
-- Name: account_partner_balance_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_partner_balance_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_partner_balance_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_partner_balance_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_partner_balance_journal_rel IS 'RELATION BETWEEN account_partner_balance AND account_journal';


--
-- Name: account_partner_ledger; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_partner_ledger (
    id integer NOT NULL,
    create_uid integer,
    initial_balance boolean,
    chart_account_id integer NOT NULL,
    page_split boolean,
    period_to integer,
    date_from date,
    result_selection character varying NOT NULL,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    amount_currency boolean,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_partner_ledger OWNER TO odoo;

--
-- Name: TABLE account_partner_ledger; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_partner_ledger IS 'Account Partner Ledger';


--
-- Name: COLUMN account_partner_ledger.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.create_uid IS 'Created by';


--
-- Name: COLUMN account_partner_ledger.initial_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.initial_balance IS 'Include Initial Balances';


--
-- Name: COLUMN account_partner_ledger.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_partner_ledger.page_split; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.page_split IS 'One Partner Per Page';


--
-- Name: COLUMN account_partner_ledger.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.period_to IS 'End Period';


--
-- Name: COLUMN account_partner_ledger.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.date_from IS 'Start Date';


--
-- Name: COLUMN account_partner_ledger.result_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.result_selection IS 'Partner''s';


--
-- Name: COLUMN account_partner_ledger.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.filter IS 'Filter by';


--
-- Name: COLUMN account_partner_ledger.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.period_from IS 'Start Period';


--
-- Name: COLUMN account_partner_ledger.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_partner_ledger.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_partner_ledger.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.date_to IS 'End Date';


--
-- Name: COLUMN account_partner_ledger.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_partner_ledger.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.create_date IS 'Created on';


--
-- Name: COLUMN account_partner_ledger.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_partner_ledger.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_ledger.target_move IS 'Target Moves';


--
-- Name: account_partner_ledger_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_partner_ledger_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_partner_ledger_id_seq OWNER TO odoo;

--
-- Name: account_partner_ledger_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_partner_ledger_id_seq OWNED BY account_partner_ledger.id;


--
-- Name: account_partner_ledger_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_partner_ledger_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_partner_ledger_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_partner_ledger_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_partner_ledger_journal_rel IS 'RELATION BETWEEN account_partner_ledger AND account_journal';


--
-- Name: account_partner_reconcile_process; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_partner_reconcile_process (
    id integer NOT NULL,
    create_uid integer,
    next_partner_id integer,
    create_date timestamp without time zone,
    to_reconcile double precision,
    write_uid integer,
    today_reconciled double precision,
    write_date timestamp without time zone,
    progress double precision
);


ALTER TABLE public.account_partner_reconcile_process OWNER TO odoo;

--
-- Name: TABLE account_partner_reconcile_process; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_partner_reconcile_process IS 'Reconcilation Process partner by partner';


--
-- Name: COLUMN account_partner_reconcile_process.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.create_uid IS 'Created by';


--
-- Name: COLUMN account_partner_reconcile_process.next_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.next_partner_id IS 'Next Partner to Reconcile';


--
-- Name: COLUMN account_partner_reconcile_process.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.create_date IS 'Created on';


--
-- Name: COLUMN account_partner_reconcile_process.to_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.to_reconcile IS 'Remaining Partners';


--
-- Name: COLUMN account_partner_reconcile_process.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_partner_reconcile_process.today_reconciled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.today_reconciled IS 'Partners Reconciled Today';


--
-- Name: COLUMN account_partner_reconcile_process.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_partner_reconcile_process.progress; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_partner_reconcile_process.progress IS 'Progress';


--
-- Name: account_partner_reconcile_process_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_partner_reconcile_process_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_partner_reconcile_process_id_seq OWNER TO odoo;

--
-- Name: account_partner_reconcile_process_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_partner_reconcile_process_id_seq OWNED BY account_partner_reconcile_process.id;


--
-- Name: account_payment_term; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_payment_term (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    note text,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.account_payment_term OWNER TO odoo;

--
-- Name: TABLE account_payment_term; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_payment_term IS 'Payment Term';


--
-- Name: COLUMN account_payment_term.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.create_uid IS 'Created by';


--
-- Name: COLUMN account_payment_term.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.create_date IS 'Created on';


--
-- Name: COLUMN account_payment_term.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.name IS 'Payment Term';


--
-- Name: COLUMN account_payment_term.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_payment_term.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.note IS 'Description';


--
-- Name: COLUMN account_payment_term.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_payment_term.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term.active IS 'Active';


--
-- Name: account_payment_term_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_payment_term_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_payment_term_id_seq OWNER TO odoo;

--
-- Name: account_payment_term_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_payment_term_id_seq OWNED BY account_payment_term.id;


--
-- Name: account_payment_term_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_payment_term_line (
    id integer NOT NULL,
    payment_id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    days2 integer NOT NULL,
    days integer NOT NULL,
    value character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    value_amount numeric
);


ALTER TABLE public.account_payment_term_line OWNER TO odoo;

--
-- Name: TABLE account_payment_term_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_payment_term_line IS 'Payment Term Line';


--
-- Name: COLUMN account_payment_term_line.payment_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.payment_id IS 'Payment Term';


--
-- Name: COLUMN account_payment_term_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_payment_term_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.create_date IS 'Created on';


--
-- Name: COLUMN account_payment_term_line.days2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.days2 IS 'Day of the Month';


--
-- Name: COLUMN account_payment_term_line.days; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.days IS 'Number of Days';


--
-- Name: COLUMN account_payment_term_line.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.value IS 'Computation';


--
-- Name: COLUMN account_payment_term_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_payment_term_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_payment_term_line.value_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_payment_term_line.value_amount IS 'Amount To Pay';


--
-- Name: account_payment_term_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_payment_term_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_payment_term_line_id_seq OWNER TO odoo;

--
-- Name: account_payment_term_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_payment_term_line_id_seq OWNED BY account_payment_term_line.id;


--
-- Name: account_period_close; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_period_close (
    id integer NOT NULL,
    create_uid integer,
    sure boolean,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_period_close OWNER TO odoo;

--
-- Name: TABLE account_period_close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_period_close IS 'period close';


--
-- Name: COLUMN account_period_close.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period_close.create_uid IS 'Created by';


--
-- Name: COLUMN account_period_close.sure; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period_close.sure IS 'Check this box';


--
-- Name: COLUMN account_period_close.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period_close.create_date IS 'Created on';


--
-- Name: COLUMN account_period_close.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period_close.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_period_close.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_period_close.write_date IS 'Last Updated on';


--
-- Name: account_period_close_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_period_close_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_period_close_id_seq OWNER TO odoo;

--
-- Name: account_period_close_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_period_close_id_seq OWNED BY account_period_close.id;


--
-- Name: account_period_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_period_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_period_id_seq OWNER TO odoo;

--
-- Name: account_period_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_period_id_seq OWNED BY account_period.id;


--
-- Name: account_print_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_print_journal (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    sort_selection character varying NOT NULL,
    date_from date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    date_to date,
    amount_currency boolean,
    create_date timestamp without time zone,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_print_journal OWNER TO odoo;

--
-- Name: TABLE account_print_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_print_journal IS 'Account Print Journal';


--
-- Name: COLUMN account_print_journal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.create_uid IS 'Created by';


--
-- Name: COLUMN account_print_journal.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_print_journal.sort_selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.sort_selection IS 'Entries Sorted by';


--
-- Name: COLUMN account_print_journal.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.date_from IS 'Start Date';


--
-- Name: COLUMN account_print_journal.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.period_to IS 'End Period';


--
-- Name: COLUMN account_print_journal.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.filter IS 'Filter by';


--
-- Name: COLUMN account_print_journal.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.period_from IS 'Start Period';


--
-- Name: COLUMN account_print_journal.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_print_journal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_print_journal.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.date_to IS 'End Date';


--
-- Name: COLUMN account_print_journal.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_print_journal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.create_date IS 'Created on';


--
-- Name: COLUMN account_print_journal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_print_journal.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_print_journal.target_move IS 'Target Moves';


--
-- Name: account_print_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_print_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_print_journal_id_seq OWNER TO odoo;

--
-- Name: account_print_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_print_journal_id_seq OWNED BY account_print_journal.id;


--
-- Name: account_print_journal_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_print_journal_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_print_journal_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_print_journal_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_print_journal_journal_rel IS 'RELATION BETWEEN account_print_journal AND account_journal';


--
-- Name: account_report_general_ledger; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_report_general_ledger (
    id integer NOT NULL,
    create_uid integer,
    initial_balance boolean,
    target_move character varying NOT NULL,
    chart_account_id integer NOT NULL,
    display_account character varying NOT NULL,
    date_from date,
    period_to integer,
    write_uid integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    sortby character varying NOT NULL,
    write_date timestamp without time zone,
    date_to date,
    create_date timestamp without time zone,
    amount_currency boolean,
    landscape boolean
);


ALTER TABLE public.account_report_general_ledger OWNER TO odoo;

--
-- Name: TABLE account_report_general_ledger; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_report_general_ledger IS 'General Ledger Report';


--
-- Name: COLUMN account_report_general_ledger.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.create_uid IS 'Created by';


--
-- Name: COLUMN account_report_general_ledger.initial_balance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.initial_balance IS 'Include Initial Balances';


--
-- Name: COLUMN account_report_general_ledger.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.target_move IS 'Target Moves';


--
-- Name: COLUMN account_report_general_ledger.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_report_general_ledger.display_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.display_account IS 'Display Accounts';


--
-- Name: COLUMN account_report_general_ledger.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.date_from IS 'Start Date';


--
-- Name: COLUMN account_report_general_ledger.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.period_to IS 'End Period';


--
-- Name: COLUMN account_report_general_ledger.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_report_general_ledger.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.filter IS 'Filter by';


--
-- Name: COLUMN account_report_general_ledger.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.period_from IS 'Start Period';


--
-- Name: COLUMN account_report_general_ledger.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_report_general_ledger.sortby; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.sortby IS 'Sort by';


--
-- Name: COLUMN account_report_general_ledger.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_report_general_ledger.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.date_to IS 'End Date';


--
-- Name: COLUMN account_report_general_ledger.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.create_date IS 'Created on';


--
-- Name: COLUMN account_report_general_ledger.amount_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.amount_currency IS 'With Currency';


--
-- Name: COLUMN account_report_general_ledger.landscape; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_report_general_ledger.landscape IS 'Landscape Mode';


--
-- Name: account_report_general_ledger_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_report_general_ledger_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_report_general_ledger_id_seq OWNER TO odoo;

--
-- Name: account_report_general_ledger_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_report_general_ledger_id_seq OWNED BY account_report_general_ledger.id;


--
-- Name: account_report_general_ledger_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_report_general_ledger_journal_rel (
    account_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.account_report_general_ledger_journal_rel OWNER TO odoo;

--
-- Name: TABLE account_report_general_ledger_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_report_general_ledger_journal_rel IS 'RELATION BETWEEN account_report_general_ledger AND account_journal';


--
-- Name: account_sequence_fiscalyear; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_sequence_fiscalyear (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    fiscalyear_id integer NOT NULL,
    write_uid integer,
    sequence_id integer NOT NULL,
    write_date timestamp without time zone,
    sequence_main_id integer NOT NULL,
    CONSTRAINT account_sequence_fiscalyear_main_id CHECK ((sequence_main_id <> sequence_id))
);


ALTER TABLE public.account_sequence_fiscalyear OWNER TO odoo;

--
-- Name: TABLE account_sequence_fiscalyear; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_sequence_fiscalyear IS 'account.sequence.fiscalyear';


--
-- Name: COLUMN account_sequence_fiscalyear.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.create_uid IS 'Created by';


--
-- Name: COLUMN account_sequence_fiscalyear.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.create_date IS 'Created on';


--
-- Name: COLUMN account_sequence_fiscalyear.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_sequence_fiscalyear.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_sequence_fiscalyear.sequence_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.sequence_id IS 'Sequence';


--
-- Name: COLUMN account_sequence_fiscalyear.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_sequence_fiscalyear.sequence_main_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_sequence_fiscalyear.sequence_main_id IS 'Main Sequence';


--
-- Name: account_sequence_fiscalyear_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_sequence_fiscalyear_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_sequence_fiscalyear_id_seq OWNER TO odoo;

--
-- Name: account_sequence_fiscalyear_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_sequence_fiscalyear_id_seq OWNED BY account_sequence_fiscalyear.id;


--
-- Name: account_state_open; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_state_open (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_state_open OWNER TO odoo;

--
-- Name: TABLE account_state_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_state_open IS 'Account State Open';


--
-- Name: COLUMN account_state_open.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_state_open.create_uid IS 'Created by';


--
-- Name: COLUMN account_state_open.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_state_open.create_date IS 'Created on';


--
-- Name: COLUMN account_state_open.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_state_open.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_state_open.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_state_open.write_uid IS 'Last Updated by';


--
-- Name: account_state_open_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_state_open_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_state_open_id_seq OWNER TO odoo;

--
-- Name: account_state_open_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_state_open_id_seq OWNED BY account_state_open.id;


--
-- Name: account_statement_from_invoice_lines; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_statement_from_invoice_lines (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_statement_from_invoice_lines OWNER TO odoo;

--
-- Name: TABLE account_statement_from_invoice_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_statement_from_invoice_lines IS 'Entries by Statement from Invoices';


--
-- Name: COLUMN account_statement_from_invoice_lines.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_from_invoice_lines.create_uid IS 'Created by';


--
-- Name: COLUMN account_statement_from_invoice_lines.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_from_invoice_lines.create_date IS 'Created on';


--
-- Name: COLUMN account_statement_from_invoice_lines.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_from_invoice_lines.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_statement_from_invoice_lines.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_from_invoice_lines.write_date IS 'Last Updated on';


--
-- Name: account_statement_from_invoice_lines_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_statement_from_invoice_lines_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_statement_from_invoice_lines_id_seq OWNER TO odoo;

--
-- Name: account_statement_from_invoice_lines_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_statement_from_invoice_lines_id_seq OWNED BY account_statement_from_invoice_lines.id;


--
-- Name: account_statement_operation_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_statement_operation_template (
    id integer NOT NULL,
    amount_type character varying NOT NULL,
    analytic_account_id integer,
    create_date timestamp without time zone,
    account_id integer,
    name character varying NOT NULL,
    create_uid integer,
    label character varying,
    amount numeric NOT NULL,
    write_date timestamp without time zone,
    write_uid integer,
    tax_id integer
);


ALTER TABLE public.account_statement_operation_template OWNER TO odoo;

--
-- Name: TABLE account_statement_operation_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_statement_operation_template IS 'Preset for the lines that can be created in a bank statement reconciliation';


--
-- Name: COLUMN account_statement_operation_template.amount_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.amount_type IS 'Amount type';


--
-- Name: COLUMN account_statement_operation_template.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN account_statement_operation_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.create_date IS 'Created on';


--
-- Name: COLUMN account_statement_operation_template.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.account_id IS 'Account';


--
-- Name: COLUMN account_statement_operation_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.name IS 'Button Label';


--
-- Name: COLUMN account_statement_operation_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_statement_operation_template.label; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.label IS 'Label';


--
-- Name: COLUMN account_statement_operation_template.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.amount IS 'Amount';


--
-- Name: COLUMN account_statement_operation_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_statement_operation_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_statement_operation_template.tax_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_statement_operation_template.tax_id IS 'Tax';


--
-- Name: account_statement_operation_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_statement_operation_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_statement_operation_template_id_seq OWNER TO odoo;

--
-- Name: account_statement_operation_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_statement_operation_template_id_seq OWNED BY account_statement_operation_template.id;


--
-- Name: account_subscription; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_subscription (
    id integer NOT NULL,
    model_id integer NOT NULL,
    period_nbr integer NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    create_uid integer,
    date_start date NOT NULL,
    write_uid integer,
    period_total integer NOT NULL,
    state character varying NOT NULL,
    period_type character varying NOT NULL,
    write_date timestamp without time zone,
    ref character varying
);


ALTER TABLE public.account_subscription OWNER TO odoo;

--
-- Name: TABLE account_subscription; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_subscription IS 'Account Subscription';


--
-- Name: COLUMN account_subscription.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.model_id IS 'Model';


--
-- Name: COLUMN account_subscription.period_nbr; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.period_nbr IS 'Period';


--
-- Name: COLUMN account_subscription.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.create_date IS 'Created on';


--
-- Name: COLUMN account_subscription.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.name IS 'Name';


--
-- Name: COLUMN account_subscription.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.create_uid IS 'Created by';


--
-- Name: COLUMN account_subscription.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.date_start IS 'Start Date';


--
-- Name: COLUMN account_subscription.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_subscription.period_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.period_total IS 'Number of Periods';


--
-- Name: COLUMN account_subscription.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.state IS 'Status';


--
-- Name: COLUMN account_subscription.period_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.period_type IS 'Period Type';


--
-- Name: COLUMN account_subscription.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_subscription.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription.ref IS 'Reference';


--
-- Name: account_subscription_generate; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_subscription_generate (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    date date NOT NULL
);


ALTER TABLE public.account_subscription_generate OWNER TO odoo;

--
-- Name: TABLE account_subscription_generate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_subscription_generate IS 'Subscription Compute';


--
-- Name: COLUMN account_subscription_generate.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_generate.create_uid IS 'Created by';


--
-- Name: COLUMN account_subscription_generate.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_generate.create_date IS 'Created on';


--
-- Name: COLUMN account_subscription_generate.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_generate.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_subscription_generate.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_generate.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_subscription_generate.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_generate.date IS 'Generate Entries Before';


--
-- Name: account_subscription_generate_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_subscription_generate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_subscription_generate_id_seq OWNER TO odoo;

--
-- Name: account_subscription_generate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_subscription_generate_id_seq OWNED BY account_subscription_generate.id;


--
-- Name: account_subscription_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_subscription_id_seq OWNER TO odoo;

--
-- Name: account_subscription_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_subscription_id_seq OWNED BY account_subscription.id;


--
-- Name: account_subscription_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_subscription_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    date date NOT NULL,
    subscription_id integer NOT NULL,
    move_id integer
);


ALTER TABLE public.account_subscription_line OWNER TO odoo;

--
-- Name: TABLE account_subscription_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_subscription_line IS 'Account Subscription Line';


--
-- Name: COLUMN account_subscription_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_subscription_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.create_date IS 'Created on';


--
-- Name: COLUMN account_subscription_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_subscription_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_subscription_line.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.date IS 'Date';


--
-- Name: COLUMN account_subscription_line.subscription_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.subscription_id IS 'Subscription';


--
-- Name: COLUMN account_subscription_line.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_subscription_line.move_id IS 'Entry';


--
-- Name: account_subscription_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_subscription_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_subscription_line_id_seq OWNER TO odoo;

--
-- Name: account_subscription_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_subscription_line_id_seq OWNED BY account_subscription_line.id;


--
-- Name: account_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_tax (
    id integer NOT NULL,
    domain character varying,
    create_date timestamp without time zone,
    account_analytic_paid_id integer,
    ref_tax_code_id integer,
    sequence integer NOT NULL,
    account_paid_id integer,
    write_uid integer,
    base_sign numeric,
    child_depend boolean,
    include_base_amount boolean,
    create_uid integer,
    ref_tax_sign numeric,
    applicable_type character varying NOT NULL,
    company_id integer NOT NULL,
    tax_code_id integer,
    parent_id integer,
    python_compute_inv text,
    python_applicable text,
    type character varying NOT NULL,
    ref_base_sign numeric,
    description character varying,
    type_tax_use character varying NOT NULL,
    base_code_id integer,
    account_analytic_collected_id integer,
    write_date timestamp without time zone,
    active boolean,
    ref_base_code_id integer,
    name character varying NOT NULL,
    account_collected_id integer,
    amount numeric NOT NULL,
    python_compute text,
    tax_sign numeric,
    price_include boolean,
    x_tax_print character varying,
    x_tax_state integer
);


ALTER TABLE public.account_tax OWNER TO odoo;

--
-- Name: TABLE account_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_tax IS 'Tax';


--
-- Name: COLUMN account_tax.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.domain IS 'Domain';


--
-- Name: COLUMN account_tax.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.create_date IS 'Created on';


--
-- Name: COLUMN account_tax.account_analytic_paid_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.account_analytic_paid_id IS 'Refund Tax Analytic Account';


--
-- Name: COLUMN account_tax.ref_tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.ref_tax_code_id IS 'Refund Tax Code';


--
-- Name: COLUMN account_tax.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.sequence IS 'Sequence';


--
-- Name: COLUMN account_tax.account_paid_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.account_paid_id IS 'Refund Tax Account';


--
-- Name: COLUMN account_tax.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_tax.base_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.base_sign IS 'Base Code Sign';


--
-- Name: COLUMN account_tax.child_depend; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.child_depend IS 'Tax on Children';


--
-- Name: COLUMN account_tax.include_base_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.include_base_amount IS 'Included in base amount';


--
-- Name: COLUMN account_tax.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.create_uid IS 'Created by';


--
-- Name: COLUMN account_tax.ref_tax_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.ref_tax_sign IS 'Refund Tax Code Sign';


--
-- Name: COLUMN account_tax.applicable_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.applicable_type IS 'Applicability';


--
-- Name: COLUMN account_tax.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.company_id IS 'Company';


--
-- Name: COLUMN account_tax.tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.tax_code_id IS 'Account Tax Code';


--
-- Name: COLUMN account_tax.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.parent_id IS 'Parent Tax Account';


--
-- Name: COLUMN account_tax.python_compute_inv; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.python_compute_inv IS 'Python Code (reverse)';


--
-- Name: COLUMN account_tax.python_applicable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.python_applicable IS 'Applicable Code';


--
-- Name: COLUMN account_tax.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.type IS 'Tax Type';


--
-- Name: COLUMN account_tax.ref_base_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.ref_base_sign IS 'Refund Base Code Sign';


--
-- Name: COLUMN account_tax.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.description IS 'Tax Code';


--
-- Name: COLUMN account_tax.type_tax_use; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.type_tax_use IS 'Tax Application';


--
-- Name: COLUMN account_tax.base_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.base_code_id IS 'Account Base Code';


--
-- Name: COLUMN account_tax.account_analytic_collected_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.account_analytic_collected_id IS 'Invoice Tax Analytic Account';


--
-- Name: COLUMN account_tax.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_tax.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.active IS 'Active';


--
-- Name: COLUMN account_tax.ref_base_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.ref_base_code_id IS 'Refund Base Code';


--
-- Name: COLUMN account_tax.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.name IS 'Tax Name';


--
-- Name: COLUMN account_tax.account_collected_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.account_collected_id IS 'Invoice Tax Account';


--
-- Name: COLUMN account_tax.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.amount IS 'Amount';


--
-- Name: COLUMN account_tax.python_compute; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.python_compute IS 'Python Code';


--
-- Name: COLUMN account_tax.tax_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.tax_sign IS 'Tax Code Sign';


--
-- Name: COLUMN account_tax.price_include; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.price_include IS 'Tax Included in Price';


--
-- Name: COLUMN account_tax.x_tax_print; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.x_tax_print IS 'Print on Invoice';


--
-- Name: COLUMN account_tax.x_tax_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax.x_tax_state IS 'State (Tax Applicable)';


--
-- Name: account_tax_chart; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_tax_chart (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    period_id integer,
    write_date timestamp without time zone,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_tax_chart OWNER TO odoo;

--
-- Name: TABLE account_tax_chart; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_tax_chart IS 'Account tax chart';


--
-- Name: COLUMN account_tax_chart.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.create_uid IS 'Created by';


--
-- Name: COLUMN account_tax_chart.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.create_date IS 'Created on';


--
-- Name: COLUMN account_tax_chart.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_tax_chart.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.period_id IS 'Period';


--
-- Name: COLUMN account_tax_chart.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_tax_chart.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_chart.target_move IS 'Target Moves';


--
-- Name: account_tax_chart_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_tax_chart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_tax_chart_id_seq OWNER TO odoo;

--
-- Name: account_tax_chart_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_tax_chart_id_seq OWNED BY account_tax_chart.id;


--
-- Name: account_tax_code; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_tax_code (
    id integer NOT NULL,
    info text,
    create_uid integer,
    code character varying(64),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    company_id integer NOT NULL,
    sign double precision NOT NULL,
    notprintable boolean,
    parent_id integer,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_tax_code OWNER TO odoo;

--
-- Name: TABLE account_tax_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_tax_code IS 'Tax Code';


--
-- Name: COLUMN account_tax_code.info; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.info IS 'Description';


--
-- Name: COLUMN account_tax_code.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.create_uid IS 'Created by';


--
-- Name: COLUMN account_tax_code.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.code IS 'Case Code';


--
-- Name: COLUMN account_tax_code.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.create_date IS 'Created on';


--
-- Name: COLUMN account_tax_code.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.name IS 'Tax Case Name';


--
-- Name: COLUMN account_tax_code.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.sequence IS 'Sequence';


--
-- Name: COLUMN account_tax_code.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.company_id IS 'Company';


--
-- Name: COLUMN account_tax_code.sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.sign IS 'Coefficent for parent';


--
-- Name: COLUMN account_tax_code.notprintable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.notprintable IS 'Not Printable in Invoice';


--
-- Name: COLUMN account_tax_code.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.parent_id IS 'Parent Code';


--
-- Name: COLUMN account_tax_code.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_tax_code.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code.write_uid IS 'Last Updated by';


--
-- Name: account_tax_code_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_tax_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_tax_code_id_seq OWNER TO odoo;

--
-- Name: account_tax_code_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_tax_code_id_seq OWNED BY account_tax_code.id;


--
-- Name: account_tax_code_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_tax_code_template (
    id integer NOT NULL,
    info text,
    create_uid integer,
    code character varying(64),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    sign double precision NOT NULL,
    notprintable boolean,
    parent_id integer,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_tax_code_template OWNER TO odoo;

--
-- Name: TABLE account_tax_code_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_tax_code_template IS 'Tax Code Template';


--
-- Name: COLUMN account_tax_code_template.info; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.info IS 'Description';


--
-- Name: COLUMN account_tax_code_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_tax_code_template.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.code IS 'Case Code';


--
-- Name: COLUMN account_tax_code_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.create_date IS 'Created on';


--
-- Name: COLUMN account_tax_code_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.name IS 'Tax Case Name';


--
-- Name: COLUMN account_tax_code_template.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.sequence IS 'Sequence';


--
-- Name: COLUMN account_tax_code_template.sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.sign IS 'Sign For Parent';


--
-- Name: COLUMN account_tax_code_template.notprintable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.notprintable IS 'Not Printable in Invoice';


--
-- Name: COLUMN account_tax_code_template.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.parent_id IS 'Parent Code';


--
-- Name: COLUMN account_tax_code_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_tax_code_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_code_template.write_uid IS 'Last Updated by';


--
-- Name: account_tax_code_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_tax_code_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_tax_code_template_id_seq OWNER TO odoo;

--
-- Name: account_tax_code_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_tax_code_template_id_seq OWNED BY account_tax_code_template.id;


--
-- Name: account_tax_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_tax_id_seq OWNER TO odoo;

--
-- Name: account_tax_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_tax_id_seq OWNED BY account_tax.id;


--
-- Name: account_tax_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_tax_template (
    id integer NOT NULL,
    domain character varying,
    create_date timestamp without time zone,
    ref_tax_code_id integer,
    sequence integer NOT NULL,
    write_uid integer,
    base_sign double precision,
    child_depend boolean,
    include_base_amount boolean,
    applicable_type character varying NOT NULL,
    create_uid integer,
    ref_base_code_id integer,
    name character varying NOT NULL,
    tax_code_id integer,
    parent_id integer,
    python_compute_inv text,
    ref_tax_sign double precision,
    type character varying NOT NULL,
    ref_base_sign double precision,
    description character varying,
    type_tax_use character varying NOT NULL,
    base_code_id integer,
    write_date timestamp without time zone,
    python_applicable text,
    account_paid_id integer,
    account_collected_id integer,
    chart_template_id integer NOT NULL,
    amount numeric NOT NULL,
    python_compute text,
    tax_sign double precision,
    price_include boolean
);


ALTER TABLE public.account_tax_template OWNER TO odoo;

--
-- Name: TABLE account_tax_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_tax_template IS 'Templates for Taxes';


--
-- Name: COLUMN account_tax_template.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.domain IS 'Domain';


--
-- Name: COLUMN account_tax_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.create_date IS 'Created on';


--
-- Name: COLUMN account_tax_template.ref_tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.ref_tax_code_id IS 'Refund Tax Code';


--
-- Name: COLUMN account_tax_template.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.sequence IS 'Sequence';


--
-- Name: COLUMN account_tax_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_tax_template.base_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.base_sign IS 'Base Code Sign';


--
-- Name: COLUMN account_tax_template.child_depend; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.child_depend IS 'Tax on Children';


--
-- Name: COLUMN account_tax_template.include_base_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.include_base_amount IS 'Include in Base Amount';


--
-- Name: COLUMN account_tax_template.applicable_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.applicable_type IS 'Applicable Type';


--
-- Name: COLUMN account_tax_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.create_uid IS 'Created by';


--
-- Name: COLUMN account_tax_template.ref_base_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.ref_base_code_id IS 'Refund Base Code';


--
-- Name: COLUMN account_tax_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.name IS 'Tax Name';


--
-- Name: COLUMN account_tax_template.tax_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.tax_code_id IS 'Tax Code';


--
-- Name: COLUMN account_tax_template.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.parent_id IS 'Parent Tax Account';


--
-- Name: COLUMN account_tax_template.python_compute_inv; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.python_compute_inv IS 'Python Code (reverse)';


--
-- Name: COLUMN account_tax_template.ref_tax_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.ref_tax_sign IS 'Refund Tax Code Sign';


--
-- Name: COLUMN account_tax_template.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.type IS 'Tax Type';


--
-- Name: COLUMN account_tax_template.ref_base_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.ref_base_sign IS 'Refund Base Code Sign';


--
-- Name: COLUMN account_tax_template.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.description IS 'Internal Name';


--
-- Name: COLUMN account_tax_template.type_tax_use; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.type_tax_use IS 'Tax Use In';


--
-- Name: COLUMN account_tax_template.base_code_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.base_code_id IS 'Base Code';


--
-- Name: COLUMN account_tax_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_tax_template.python_applicable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.python_applicable IS 'Applicable Code';


--
-- Name: COLUMN account_tax_template.account_paid_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.account_paid_id IS 'Refund Tax Account';


--
-- Name: COLUMN account_tax_template.account_collected_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.account_collected_id IS 'Invoice Tax Account';


--
-- Name: COLUMN account_tax_template.chart_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.chart_template_id IS 'Chart Template';


--
-- Name: COLUMN account_tax_template.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.amount IS 'Amount';


--
-- Name: COLUMN account_tax_template.python_compute; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.python_compute IS 'Python Code';


--
-- Name: COLUMN account_tax_template.tax_sign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.tax_sign IS 'Tax Code Sign';


--
-- Name: COLUMN account_tax_template.price_include; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_tax_template.price_include IS 'Tax Included in Price';


--
-- Name: account_tax_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_tax_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_tax_template_id_seq OWNER TO odoo;

--
-- Name: account_tax_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_tax_template_id_seq OWNED BY account_tax_template.id;


--
-- Name: account_template_financial_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_template_financial_report (
    account_template_id integer NOT NULL,
    report_line_id integer NOT NULL
);


ALTER TABLE public.account_template_financial_report OWNER TO odoo;

--
-- Name: TABLE account_template_financial_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_template_financial_report IS 'RELATION BETWEEN account_account_template AND account_financial_report';


--
-- Name: account_treasury_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW account_treasury_report AS
 SELECT p.id,
    p.fiscalyear_id,
    p.id AS period_id,
    sum(l.debit) AS debit,
    sum(l.credit) AS credit,
    sum((l.debit - l.credit)) AS balance,
    p.date_start AS date,
    am.company_id
   FROM (((account_move_line l
     LEFT JOIN account_account a ON ((l.account_id = a.id)))
     LEFT JOIN account_move am ON ((am.id = l.move_id)))
     LEFT JOIN account_period p ON ((am.period_id = p.id)))
  WHERE (((l.state)::text <> 'draft'::text) AND ((a.type)::text = 'liquidity'::text))
  GROUP BY p.id, p.fiscalyear_id, p.date_start, am.company_id;


ALTER TABLE public.account_treasury_report OWNER TO odoo;

--
-- Name: account_unreconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_unreconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_unreconcile OWNER TO odoo;

--
-- Name: TABLE account_unreconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_unreconcile IS 'Account Unreconcile';


--
-- Name: COLUMN account_unreconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_unreconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile.create_date IS 'Created on';


--
-- Name: COLUMN account_unreconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_unreconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile.write_uid IS 'Last Updated by';


--
-- Name: account_unreconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_unreconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_unreconcile_id_seq OWNER TO odoo;

--
-- Name: account_unreconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_unreconcile_id_seq OWNED BY account_unreconcile.id;


--
-- Name: account_unreconcile_reconcile; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_unreconcile_reconcile (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.account_unreconcile_reconcile OWNER TO odoo;

--
-- Name: TABLE account_unreconcile_reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_unreconcile_reconcile IS 'Account Unreconcile Reconcile';


--
-- Name: COLUMN account_unreconcile_reconcile.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile_reconcile.create_uid IS 'Created by';


--
-- Name: COLUMN account_unreconcile_reconcile.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile_reconcile.create_date IS 'Created on';


--
-- Name: COLUMN account_unreconcile_reconcile.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile_reconcile.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_unreconcile_reconcile.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_unreconcile_reconcile.write_uid IS 'Last Updated by';


--
-- Name: account_unreconcile_reconcile_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_unreconcile_reconcile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_unreconcile_reconcile_id_seq OWNER TO odoo;

--
-- Name: account_unreconcile_reconcile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_unreconcile_reconcile_id_seq OWNED BY account_unreconcile_reconcile.id;


--
-- Name: account_use_model; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_use_model (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.account_use_model OWNER TO odoo;

--
-- Name: TABLE account_use_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_use_model IS 'Use model';


--
-- Name: COLUMN account_use_model.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_use_model.create_uid IS 'Created by';


--
-- Name: COLUMN account_use_model.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_use_model.create_date IS 'Created on';


--
-- Name: COLUMN account_use_model.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_use_model.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_use_model.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_use_model.write_date IS 'Last Updated on';


--
-- Name: account_use_model_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_use_model_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_use_model_id_seq OWNER TO odoo;

--
-- Name: account_use_model_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_use_model_id_seq OWNED BY account_use_model.id;


--
-- Name: account_use_model_relation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_use_model_relation (
    account_id integer NOT NULL,
    model_id integer NOT NULL
);


ALTER TABLE public.account_use_model_relation OWNER TO odoo;

--
-- Name: TABLE account_use_model_relation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_use_model_relation IS 'RELATION BETWEEN account_use_model AND account_model';


--
-- Name: account_vat_declaration; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_vat_declaration (
    id integer NOT NULL,
    create_uid integer,
    chart_account_id integer NOT NULL,
    date_from date,
    date_to date,
    period_to integer,
    filter character varying NOT NULL,
    period_from integer,
    fiscalyear_id integer,
    write_date timestamp without time zone,
    based_on character varying NOT NULL,
    display_detail boolean,
    create_date timestamp without time zone,
    chart_tax_id integer NOT NULL,
    write_uid integer,
    target_move character varying NOT NULL
);


ALTER TABLE public.account_vat_declaration OWNER TO odoo;

--
-- Name: TABLE account_vat_declaration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_vat_declaration IS 'Account Vat Declaration';


--
-- Name: COLUMN account_vat_declaration.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.create_uid IS 'Created by';


--
-- Name: COLUMN account_vat_declaration.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN account_vat_declaration.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.date_from IS 'Start Date';


--
-- Name: COLUMN account_vat_declaration.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.date_to IS 'End Date';


--
-- Name: COLUMN account_vat_declaration.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.period_to IS 'End Period';


--
-- Name: COLUMN account_vat_declaration.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.filter IS 'Filter by';


--
-- Name: COLUMN account_vat_declaration.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.period_from IS 'Start Period';


--
-- Name: COLUMN account_vat_declaration.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN account_vat_declaration.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_vat_declaration.based_on; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.based_on IS 'Based on';


--
-- Name: COLUMN account_vat_declaration.display_detail; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.display_detail IS 'Display Detail';


--
-- Name: COLUMN account_vat_declaration.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.create_date IS 'Created on';


--
-- Name: COLUMN account_vat_declaration.chart_tax_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.chart_tax_id IS 'Chart of Tax';


--
-- Name: COLUMN account_vat_declaration.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_vat_declaration.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_vat_declaration.target_move IS 'Target Moves';


--
-- Name: account_vat_declaration_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_vat_declaration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_vat_declaration_id_seq OWNER TO odoo;

--
-- Name: account_vat_declaration_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_vat_declaration_id_seq OWNED BY account_vat_declaration.id;


--
-- Name: account_voucher; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_voucher (
    id integer NOT NULL,
    comment character varying NOT NULL,
    date_due date,
    create_date timestamp without time zone,
    is_multi_currency boolean,
    number character varying,
    journal_id integer NOT NULL,
    narration text,
    partner_id integer,
    payment_rate_currency_id integer NOT NULL,
    create_uid integer,
    reference character varying,
    pay_now character varying,
    message_last_post timestamp without time zone,
    writeoff_acc_id integer,
    state character varying,
    pre_line boolean,
    type character varying,
    payment_option character varying NOT NULL,
    account_id integer NOT NULL,
    company_id integer NOT NULL,
    period_id integer NOT NULL,
    write_date timestamp without time zone,
    date date,
    tax_amount numeric,
    write_uid integer,
    move_id integer,
    tax_id integer,
    payment_rate numeric NOT NULL,
    name character varying,
    analytic_id integer,
    amount numeric NOT NULL
);


ALTER TABLE public.account_voucher OWNER TO odoo;

--
-- Name: TABLE account_voucher; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_voucher IS 'Accounting Voucher';


--
-- Name: COLUMN account_voucher.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.comment IS 'Counterpart Comment';


--
-- Name: COLUMN account_voucher.date_due; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.date_due IS 'Due Date';


--
-- Name: COLUMN account_voucher.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.create_date IS 'Created on';


--
-- Name: COLUMN account_voucher.is_multi_currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.is_multi_currency IS 'Multi Currency Voucher';


--
-- Name: COLUMN account_voucher.number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.number IS 'Number';


--
-- Name: COLUMN account_voucher.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.journal_id IS 'Journal';


--
-- Name: COLUMN account_voucher.narration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.narration IS 'Notes';


--
-- Name: COLUMN account_voucher.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.partner_id IS 'Partner';


--
-- Name: COLUMN account_voucher.payment_rate_currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.payment_rate_currency_id IS 'Payment Rate Currency';


--
-- Name: COLUMN account_voucher.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.create_uid IS 'Created by';


--
-- Name: COLUMN account_voucher.reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.reference IS 'Ref #';


--
-- Name: COLUMN account_voucher.pay_now; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.pay_now IS 'Payment';


--
-- Name: COLUMN account_voucher.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN account_voucher.writeoff_acc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.writeoff_acc_id IS 'Counterpart Account';


--
-- Name: COLUMN account_voucher.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.state IS 'Status';


--
-- Name: COLUMN account_voucher.pre_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.pre_line IS 'Previous Payments ?';


--
-- Name: COLUMN account_voucher.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.type IS 'Default Type';


--
-- Name: COLUMN account_voucher.payment_option; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.payment_option IS 'Payment Difference';


--
-- Name: COLUMN account_voucher.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.account_id IS 'Account';


--
-- Name: COLUMN account_voucher.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.company_id IS 'Company';


--
-- Name: COLUMN account_voucher.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.period_id IS 'Period';


--
-- Name: COLUMN account_voucher.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_voucher.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.date IS 'Date';


--
-- Name: COLUMN account_voucher.tax_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.tax_amount IS 'Tax Amount';


--
-- Name: COLUMN account_voucher.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_voucher.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.move_id IS 'Account Entry';


--
-- Name: COLUMN account_voucher.tax_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.tax_id IS 'Tax';


--
-- Name: COLUMN account_voucher.payment_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.payment_rate IS 'Exchange Rate';


--
-- Name: COLUMN account_voucher.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.name IS 'Memo';


--
-- Name: COLUMN account_voucher.analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.analytic_id IS 'Write-Off Analytic Account';


--
-- Name: COLUMN account_voucher.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher.amount IS 'Total';


--
-- Name: account_voucher_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_voucher_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_voucher_id_seq OWNER TO odoo;

--
-- Name: account_voucher_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_voucher_id_seq OWNED BY account_voucher.id;


--
-- Name: account_voucher_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE account_voucher_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    reconcile boolean,
    name character varying,
    amount_unreconciled numeric,
    type character varying,
    untax_amount double precision,
    company_id integer,
    write_uid integer,
    voucher_id integer NOT NULL,
    amount numeric,
    amount_original numeric,
    write_date timestamp without time zone,
    account_analytic_id integer,
    move_line_id integer,
    account_id integer NOT NULL
);


ALTER TABLE public.account_voucher_line OWNER TO odoo;

--
-- Name: TABLE account_voucher_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE account_voucher_line IS 'Voucher Lines';


--
-- Name: COLUMN account_voucher_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.create_uid IS 'Created by';


--
-- Name: COLUMN account_voucher_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.create_date IS 'Created on';


--
-- Name: COLUMN account_voucher_line.reconcile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.reconcile IS 'Full Reconcile';


--
-- Name: COLUMN account_voucher_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.name IS 'Description';


--
-- Name: COLUMN account_voucher_line.amount_unreconciled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.amount_unreconciled IS 'Open Balance';


--
-- Name: COLUMN account_voucher_line.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.type IS 'Dr/Cr';


--
-- Name: COLUMN account_voucher_line.untax_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.untax_amount IS 'Untax Amount';


--
-- Name: COLUMN account_voucher_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.company_id IS 'Company';


--
-- Name: COLUMN account_voucher_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN account_voucher_line.voucher_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.voucher_id IS 'Voucher';


--
-- Name: COLUMN account_voucher_line.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.amount IS 'Amount';


--
-- Name: COLUMN account_voucher_line.amount_original; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.amount_original IS 'Original Amount';


--
-- Name: COLUMN account_voucher_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN account_voucher_line.account_analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.account_analytic_id IS 'Analytic Account';


--
-- Name: COLUMN account_voucher_line.move_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.move_line_id IS 'Journal Item';


--
-- Name: COLUMN account_voucher_line.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN account_voucher_line.account_id IS 'Account';


--
-- Name: account_voucher_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE account_voucher_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.account_voucher_line_id_seq OWNER TO odoo;

--
-- Name: account_voucher_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE account_voucher_line_id_seq OWNED BY account_voucher_line.id;


--
-- Name: accounting_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE accounting_report (
    id integer NOT NULL,
    period_to_cmp integer,
    chart_account_id integer NOT NULL,
    period_from_cmp integer,
    account_report_id integer NOT NULL,
    period_to integer,
    date_to_cmp date,
    write_uid integer,
    fiscalyear_id integer,
    create_date timestamp without time zone,
    create_uid integer,
    fiscalyear_id_cmp integer,
    date_from date,
    period_from integer,
    label_filter character varying,
    filter_cmp character varying NOT NULL,
    enable_filter boolean,
    write_date timestamp without time zone,
    date_to date,
    filter character varying NOT NULL,
    date_from_cmp date,
    debit_credit boolean,
    target_move character varying NOT NULL
);


ALTER TABLE public.accounting_report OWNER TO odoo;

--
-- Name: TABLE accounting_report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE accounting_report IS 'Accounting Report';


--
-- Name: COLUMN accounting_report.period_to_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.period_to_cmp IS 'End Period';


--
-- Name: COLUMN accounting_report.chart_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.chart_account_id IS 'Chart of Account';


--
-- Name: COLUMN accounting_report.period_from_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.period_from_cmp IS 'Start Period';


--
-- Name: COLUMN accounting_report.account_report_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.account_report_id IS 'Account Reports';


--
-- Name: COLUMN accounting_report.period_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.period_to IS 'End Period';


--
-- Name: COLUMN accounting_report.date_to_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.date_to_cmp IS 'End Date';


--
-- Name: COLUMN accounting_report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.write_uid IS 'Last Updated by';


--
-- Name: COLUMN accounting_report.fiscalyear_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.fiscalyear_id IS 'Fiscal Year';


--
-- Name: COLUMN accounting_report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.create_date IS 'Created on';


--
-- Name: COLUMN accounting_report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.create_uid IS 'Created by';


--
-- Name: COLUMN accounting_report.fiscalyear_id_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.fiscalyear_id_cmp IS 'Fiscal Year';


--
-- Name: COLUMN accounting_report.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.date_from IS 'Start Date';


--
-- Name: COLUMN accounting_report.period_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.period_from IS 'Start Period';


--
-- Name: COLUMN accounting_report.label_filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.label_filter IS 'Column Label';


--
-- Name: COLUMN accounting_report.filter_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.filter_cmp IS 'Filter by';


--
-- Name: COLUMN accounting_report.enable_filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.enable_filter IS 'Enable Comparison';


--
-- Name: COLUMN accounting_report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.write_date IS 'Last Updated on';


--
-- Name: COLUMN accounting_report.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.date_to IS 'End Date';


--
-- Name: COLUMN accounting_report.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.filter IS 'Filter by';


--
-- Name: COLUMN accounting_report.date_from_cmp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.date_from_cmp IS 'Start Date';


--
-- Name: COLUMN accounting_report.debit_credit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.debit_credit IS 'Display Debit/Credit Columns';


--
-- Name: COLUMN accounting_report.target_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN accounting_report.target_move IS 'Target Moves';


--
-- Name: accounting_report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE accounting_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.accounting_report_id_seq OWNER TO odoo;

--
-- Name: accounting_report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE accounting_report_id_seq OWNED BY accounting_report.id;


--
-- Name: analytic_entries_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW analytic_entries_report AS
 SELECT min(a.id) AS id,
    count(DISTINCT a.id) AS nbr,
    a.date,
    a.user_id,
    a.name,
    analytic.partner_id,
    a.company_id,
    a.currency_id,
    a.account_id,
    a.general_account_id,
    a.journal_id,
    a.move_id,
    a.product_id,
    a.product_uom_id,
    sum(a.amount) AS amount,
    sum(a.unit_amount) AS unit_amount
   FROM account_analytic_line a,
    account_analytic_account analytic
  WHERE (analytic.id = a.account_id)
  GROUP BY a.date, a.user_id, a.name, analytic.partner_id, a.company_id, a.currency_id, a.account_id, a.general_account_id, a.journal_id, a.move_id, a.product_id, a.product_uom_id;


ALTER TABLE public.analytic_entries_report OWNER TO odoo;

--
-- Name: analytic_profit_emp_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE analytic_profit_emp_rel (
    analytic_id integer NOT NULL,
    emp_id integer NOT NULL
);


ALTER TABLE public.analytic_profit_emp_rel OWNER TO odoo;

--
-- Name: TABLE analytic_profit_emp_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE analytic_profit_emp_rel IS 'RELATION BETWEEN hr_timesheet_analytic_profit AND res_users';


--
-- Name: analytic_profit_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE analytic_profit_journal_rel (
    analytic_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.analytic_profit_journal_rel OWNER TO odoo;

--
-- Name: TABLE analytic_profit_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE analytic_profit_journal_rel IS 'RELATION BETWEEN hr_timesheet_analytic_profit AND account_analytic_journal';


--
-- Name: base_action_rule; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_action_rule (
    id integer NOT NULL,
    create_uid integer,
    kind character varying,
    create_date timestamp without time zone,
    filter_pre_id integer,
    sequence integer,
    trg_date_calendar_id integer,
    act_user_id integer,
    last_run timestamp without time zone,
    write_uid integer,
    trg_date_range_type character varying,
    write_date timestamp without time zone,
    filter_id integer,
    active boolean,
    model_id integer NOT NULL,
    trg_date_id integer,
    trg_date_range integer,
    name character varying NOT NULL
);


ALTER TABLE public.base_action_rule OWNER TO odoo;

--
-- Name: TABLE base_action_rule; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_action_rule IS 'Action Rules';


--
-- Name: COLUMN base_action_rule.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.create_uid IS 'Created by';


--
-- Name: COLUMN base_action_rule.kind; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.kind IS 'When to Run';


--
-- Name: COLUMN base_action_rule.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.create_date IS 'Create Date';


--
-- Name: COLUMN base_action_rule.filter_pre_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.filter_pre_id IS 'Before Update Filter';


--
-- Name: COLUMN base_action_rule.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.sequence IS 'Sequence';


--
-- Name: COLUMN base_action_rule.trg_date_calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.trg_date_calendar_id IS 'Use Calendar';


--
-- Name: COLUMN base_action_rule.act_user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.act_user_id IS 'Set Responsible';


--
-- Name: COLUMN base_action_rule.last_run; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.last_run IS 'Last Run';


--
-- Name: COLUMN base_action_rule.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_action_rule.trg_date_range_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.trg_date_range_type IS 'Delay type';


--
-- Name: COLUMN base_action_rule.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_action_rule.filter_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.filter_id IS 'Filter';


--
-- Name: COLUMN base_action_rule.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.active IS 'Active';


--
-- Name: COLUMN base_action_rule.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.model_id IS 'Related Document Model';


--
-- Name: COLUMN base_action_rule.trg_date_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.trg_date_id IS 'Trigger Date';


--
-- Name: COLUMN base_action_rule.trg_date_range; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.trg_date_range IS 'Delay after trigger date';


--
-- Name: COLUMN base_action_rule.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule.name IS 'Rule Name';


--
-- Name: base_action_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_action_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_action_rule_id_seq OWNER TO odoo;

--
-- Name: base_action_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_action_rule_id_seq OWNED BY base_action_rule.id;


--
-- Name: base_action_rule_ir_act_server_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_action_rule_ir_act_server_rel (
    base_action_rule_id integer NOT NULL,
    ir_act_server_id integer NOT NULL
);


ALTER TABLE public.base_action_rule_ir_act_server_rel OWNER TO odoo;

--
-- Name: TABLE base_action_rule_ir_act_server_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_action_rule_ir_act_server_rel IS 'RELATION BETWEEN base_action_rule AND ir_act_server';


--
-- Name: base_action_rule_lead_test; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_action_rule_lead_test (
    id integer NOT NULL,
    create_uid integer,
    user_id integer,
    name character varying NOT NULL,
    date_action_last timestamp without time zone,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    active boolean,
    create_date timestamp without time zone,
    partner_id integer
);


ALTER TABLE public.base_action_rule_lead_test OWNER TO odoo;

--
-- Name: TABLE base_action_rule_lead_test; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_action_rule_lead_test IS 'base.action.rule.lead.test';


--
-- Name: COLUMN base_action_rule_lead_test.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.create_uid IS 'Created by';


--
-- Name: COLUMN base_action_rule_lead_test.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.user_id IS 'Responsible';


--
-- Name: COLUMN base_action_rule_lead_test.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.name IS 'Subject';


--
-- Name: COLUMN base_action_rule_lead_test.date_action_last; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.date_action_last IS 'Last Action';


--
-- Name: COLUMN base_action_rule_lead_test.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_action_rule_lead_test.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.state IS 'Status';


--
-- Name: COLUMN base_action_rule_lead_test.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_action_rule_lead_test.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.active IS 'Active';


--
-- Name: COLUMN base_action_rule_lead_test.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.create_date IS 'Created on';


--
-- Name: COLUMN base_action_rule_lead_test.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_action_rule_lead_test.partner_id IS 'Partner';


--
-- Name: base_action_rule_lead_test_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_action_rule_lead_test_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_action_rule_lead_test_id_seq OWNER TO odoo;

--
-- Name: base_action_rule_lead_test_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_action_rule_lead_test_id_seq OWNED BY base_action_rule_lead_test.id;


--
-- Name: base_action_rule_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_action_rule_res_partner_rel (
    base_action_rule_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.base_action_rule_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE base_action_rule_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_action_rule_res_partner_rel IS 'RELATION BETWEEN base_action_rule AND res_partner';


--
-- Name: base_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_config_settings (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    module_google_drive boolean,
    module_base_import boolean,
    write_uid integer,
    module_portal boolean,
    module_google_calendar boolean,
    write_date timestamp without time zone,
    module_share boolean,
    font integer,
    module_auth_oauth boolean,
    module_multi_company boolean,
    alias_domain character varying,
    auth_signup_reset_password boolean,
    auth_signup_uninvited boolean,
    auth_signup_template_user_id integer,
    group_note_fancy boolean,
    module_note_pad boolean
);


ALTER TABLE public.base_config_settings OWNER TO odoo;

--
-- Name: TABLE base_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_config_settings IS 'base.config.settings';


--
-- Name: COLUMN base_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN base_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN base_config_settings.module_google_drive; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_google_drive IS 'Attach Google documents to any record';


--
-- Name: COLUMN base_config_settings.module_base_import; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_base_import IS 'Allow users to import data from CSV files';


--
-- Name: COLUMN base_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_config_settings.module_portal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_portal IS 'Activate the customer portal';


--
-- Name: COLUMN base_config_settings.module_google_calendar; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_google_calendar IS 'Allow the users to synchronize their calendar  with Google Calendar';


--
-- Name: COLUMN base_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_config_settings.module_share; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_share IS 'Allow documents sharing';


--
-- Name: COLUMN base_config_settings.font; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.font IS 'Report Font';


--
-- Name: COLUMN base_config_settings.module_auth_oauth; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_auth_oauth IS 'Use external authentication providers, sign in with google, facebook, ...';


--
-- Name: COLUMN base_config_settings.module_multi_company; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_multi_company IS 'Manage multiple companies';


--
-- Name: COLUMN base_config_settings.alias_domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.alias_domain IS 'Alias Domain';


--
-- Name: COLUMN base_config_settings.auth_signup_reset_password; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.auth_signup_reset_password IS 'Enable password reset from Login page';


--
-- Name: COLUMN base_config_settings.auth_signup_uninvited; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.auth_signup_uninvited IS 'Allow external users to sign up';


--
-- Name: COLUMN base_config_settings.auth_signup_template_user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.auth_signup_template_user_id IS 'Template user for new users created through signup';


--
-- Name: COLUMN base_config_settings.group_note_fancy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.group_note_fancy IS 'Use fancy layouts for notes';


--
-- Name: COLUMN base_config_settings.module_note_pad; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_config_settings.module_note_pad IS 'Use collaborative pads (etherpad)';


--
-- Name: base_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_config_settings_id_seq OWNER TO odoo;

--
-- Name: base_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_config_settings_id_seq OWNED BY base_config_settings.id;


--
-- Name: base_import_import; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_import (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    file_type character varying,
    file_name character varying,
    write_uid integer,
    file bytea,
    res_model character varying
);


ALTER TABLE public.base_import_import OWNER TO odoo;

--
-- Name: TABLE base_import_import; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_import IS 'base_import.import';


--
-- Name: COLUMN base_import_import.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_import.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.create_date IS 'Created on';


--
-- Name: COLUMN base_import_import.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_import_import.file_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.file_type IS 'File Type';


--
-- Name: COLUMN base_import_import.file_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.file_name IS 'File Name';


--
-- Name: COLUMN base_import_import.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_import.file; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.file IS 'File';


--
-- Name: COLUMN base_import_import.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_import.res_model IS 'Model';


--
-- Name: base_import_import_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_import_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_import_id_seq OWNER TO odoo;

--
-- Name: base_import_import_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_import_id_seq OWNED BY base_import_import.id;


--
-- Name: base_import_tests_models_char; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char IS 'base_import.tests.models.char';


--
-- Name: COLUMN base_import_tests_models_char.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_id_seq OWNED BY base_import_tests_models_char.id;


--
-- Name: base_import_tests_models_char_noreadonly; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char_noreadonly (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char_noreadonly OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char_noreadonly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char_noreadonly IS 'base_import.tests.models.char.noreadonly';


--
-- Name: COLUMN base_import_tests_models_char_noreadonly.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_noreadonly.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char_noreadonly.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_noreadonly.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char_noreadonly.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_noreadonly.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char_noreadonly.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_noreadonly.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char_noreadonly.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_noreadonly.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_noreadonly_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_noreadonly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_noreadonly_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_noreadonly_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_noreadonly_id_seq OWNED BY base_import_tests_models_char_noreadonly.id;


--
-- Name: base_import_tests_models_char_readonly; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char_readonly (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char_readonly OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char_readonly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char_readonly IS 'base_import.tests.models.char.readonly';


--
-- Name: COLUMN base_import_tests_models_char_readonly.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_readonly.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char_readonly.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_readonly.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char_readonly.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_readonly.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char_readonly.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_readonly.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char_readonly.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_readonly.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_readonly_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_readonly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_readonly_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_readonly_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_readonly_id_seq OWNED BY base_import_tests_models_char_readonly.id;


--
-- Name: base_import_tests_models_char_required; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char_required (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char_required OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char_required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char_required IS 'base_import.tests.models.char.required';


--
-- Name: COLUMN base_import_tests_models_char_required.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_required.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char_required.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_required.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char_required.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_required.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char_required.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_required.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char_required.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_required.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_required_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_required_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_required_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_required_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_required_id_seq OWNED BY base_import_tests_models_char_required.id;


--
-- Name: base_import_tests_models_char_states; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char_states (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char_states OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char_states; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char_states IS 'base_import.tests.models.char.states';


--
-- Name: COLUMN base_import_tests_models_char_states.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_states.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char_states.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_states.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char_states.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_states.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char_states.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_states.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char_states.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_states.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_states_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_states_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_states_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_states_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_states_id_seq OWNED BY base_import_tests_models_char_states.id;


--
-- Name: base_import_tests_models_char_stillreadonly; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_char_stillreadonly (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_char_stillreadonly OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_char_stillreadonly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_char_stillreadonly IS 'base_import.tests.models.char.stillreadonly';


--
-- Name: COLUMN base_import_tests_models_char_stillreadonly.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_stillreadonly.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_char_stillreadonly.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_stillreadonly.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_char_stillreadonly.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_stillreadonly.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_char_stillreadonly.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_stillreadonly.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_char_stillreadonly.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_char_stillreadonly.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_char_stillreadonly_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_char_stillreadonly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_char_stillreadonly_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_char_stillreadonly_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_char_stillreadonly_id_seq OWNED BY base_import_tests_models_char_stillreadonly.id;


--
-- Name: base_import_tests_models_m2o; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_m2o (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_m2o OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_m2o; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_m2o IS 'base_import.tests.models.m2o';


--
-- Name: COLUMN base_import_tests_models_m2o.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_m2o.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_m2o.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_m2o.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_m2o.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_m2o_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_m2o_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_m2o_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_m2o_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_m2o_id_seq OWNED BY base_import_tests_models_m2o.id;


--
-- Name: base_import_tests_models_m2o_related; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_m2o_related (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_m2o_related OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_m2o_related; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_m2o_related IS 'base_import.tests.models.m2o.related';


--
-- Name: COLUMN base_import_tests_models_m2o_related.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_related.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_m2o_related.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_related.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_m2o_related.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_related.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_m2o_related.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_related.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_m2o_related.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_related.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_m2o_related_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_m2o_related_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_m2o_related_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_m2o_related_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_m2o_related_id_seq OWNED BY base_import_tests_models_m2o_related.id;


--
-- Name: base_import_tests_models_m2o_required; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_m2o_required (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_m2o_required OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_m2o_required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_m2o_required IS 'base_import.tests.models.m2o.required';


--
-- Name: COLUMN base_import_tests_models_m2o_required.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_m2o_required.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_m2o_required.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_m2o_required.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_m2o_required.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_m2o_required_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_m2o_required_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_m2o_required_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_m2o_required_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_m2o_required_id_seq OWNED BY base_import_tests_models_m2o_required.id;


--
-- Name: base_import_tests_models_m2o_required_related; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_m2o_required_related (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_m2o_required_related OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_m2o_required_related; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_m2o_required_related IS 'base_import.tests.models.m2o.required.related';


--
-- Name: COLUMN base_import_tests_models_m2o_required_related.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required_related.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_m2o_required_related.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required_related.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_m2o_required_related.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required_related.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_m2o_required_related.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required_related.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_m2o_required_related.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_m2o_required_related.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_m2o_required_related_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_m2o_required_related_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_m2o_required_related_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_m2o_required_related_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_m2o_required_related_id_seq OWNED BY base_import_tests_models_m2o_required_related.id;


--
-- Name: base_import_tests_models_o2m; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_o2m (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_o2m OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_o2m; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_o2m IS 'base_import.tests.models.o2m';


--
-- Name: COLUMN base_import_tests_models_o2m.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_o2m.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_o2m.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_o2m.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_o2m_child; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_o2m_child (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value integer,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_import_tests_models_o2m_child OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_o2m_child; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_o2m_child IS 'base_import.tests.models.o2m.child';


--
-- Name: COLUMN base_import_tests_models_o2m_child.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_o2m_child.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_o2m_child.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.value IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_o2m_child.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_o2m_child.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.parent_id IS 'unknown';


--
-- Name: COLUMN base_import_tests_models_o2m_child.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_o2m_child.write_date IS 'Last Updated on';


--
-- Name: base_import_tests_models_o2m_child_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_o2m_child_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_o2m_child_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_o2m_child_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_o2m_child_id_seq OWNED BY base_import_tests_models_o2m_child.id;


--
-- Name: base_import_tests_models_o2m_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_o2m_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_o2m_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_o2m_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_o2m_id_seq OWNED BY base_import_tests_models_o2m.id;


--
-- Name: base_import_tests_models_preview; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_import_tests_models_preview (
    id integer NOT NULL,
    create_uid integer,
    othervalue integer,
    create_date timestamp without time zone,
    name character varying,
    write_uid integer,
    write_date timestamp without time zone,
    somevalue integer NOT NULL
);


ALTER TABLE public.base_import_tests_models_preview OWNER TO odoo;

--
-- Name: TABLE base_import_tests_models_preview; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_import_tests_models_preview IS 'base_import.tests.models.preview';


--
-- Name: COLUMN base_import_tests_models_preview.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.create_uid IS 'Created by';


--
-- Name: COLUMN base_import_tests_models_preview.othervalue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.othervalue IS 'Other Variable';


--
-- Name: COLUMN base_import_tests_models_preview.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.create_date IS 'Created on';


--
-- Name: COLUMN base_import_tests_models_preview.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.name IS 'Name';


--
-- Name: COLUMN base_import_tests_models_preview.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_import_tests_models_preview.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_import_tests_models_preview.somevalue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_import_tests_models_preview.somevalue IS 'Some Value';


--
-- Name: base_import_tests_models_preview_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_import_tests_models_preview_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_import_tests_models_preview_id_seq OWNER TO odoo;

--
-- Name: base_import_tests_models_preview_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_import_tests_models_preview_id_seq OWNED BY base_import_tests_models_preview.id;


--
-- Name: base_language_export; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_language_export (
    id integer NOT NULL,
    lang character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    format character varying NOT NULL,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    data bytea
);


ALTER TABLE public.base_language_export OWNER TO odoo;

--
-- Name: TABLE base_language_export; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_language_export IS 'base.language.export';


--
-- Name: COLUMN base_language_export.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.lang IS 'Language';


--
-- Name: COLUMN base_language_export.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.create_uid IS 'Created by';


--
-- Name: COLUMN base_language_export.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.create_date IS 'Created on';


--
-- Name: COLUMN base_language_export.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.name IS 'File Name';


--
-- Name: COLUMN base_language_export.format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.format IS 'File Format';


--
-- Name: COLUMN base_language_export.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_language_export.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.state IS 'unknown';


--
-- Name: COLUMN base_language_export.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_language_export.data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_export.data IS 'File';


--
-- Name: base_language_export_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_language_export_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_language_export_id_seq OWNER TO odoo;

--
-- Name: base_language_export_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_language_export_id_seq OWNED BY base_language_export.id;


--
-- Name: base_language_import; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_language_import (
    id integer NOT NULL,
    create_uid integer,
    code character varying(5) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    data bytea NOT NULL,
    overwrite boolean
);


ALTER TABLE public.base_language_import OWNER TO odoo;

--
-- Name: TABLE base_language_import; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_language_import IS 'Language Import';


--
-- Name: COLUMN base_language_import.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.create_uid IS 'Created by';


--
-- Name: COLUMN base_language_import.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.code IS 'ISO Code';


--
-- Name: COLUMN base_language_import.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.create_date IS 'Created on';


--
-- Name: COLUMN base_language_import.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.name IS 'Language Name';


--
-- Name: COLUMN base_language_import.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_language_import.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_language_import.data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.data IS 'File';


--
-- Name: COLUMN base_language_import.overwrite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_import.overwrite IS 'Overwrite Existing Terms';


--
-- Name: base_language_import_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_language_import_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_language_import_id_seq OWNER TO odoo;

--
-- Name: base_language_import_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_language_import_id_seq OWNED BY base_language_import.id;


--
-- Name: base_language_install; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_language_install (
    id integer NOT NULL,
    lang character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    overwrite boolean
);


ALTER TABLE public.base_language_install OWNER TO odoo;

--
-- Name: TABLE base_language_install; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_language_install IS 'Install Language';


--
-- Name: COLUMN base_language_install.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.lang IS 'Language';


--
-- Name: COLUMN base_language_install.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.create_uid IS 'Created by';


--
-- Name: COLUMN base_language_install.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.create_date IS 'Created on';


--
-- Name: COLUMN base_language_install.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_language_install.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.state IS 'Status';


--
-- Name: COLUMN base_language_install.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_language_install.overwrite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_language_install.overwrite IS 'Overwrite Existing Terms';


--
-- Name: base_language_install_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_language_install_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_language_install_id_seq OWNER TO odoo;

--
-- Name: base_language_install_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_language_install_id_seq OWNED BY base_language_install.id;


--
-- Name: base_module_configuration; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_module_configuration (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.base_module_configuration OWNER TO odoo;

--
-- Name: TABLE base_module_configuration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_module_configuration IS 'base.module.configuration';


--
-- Name: COLUMN base_module_configuration.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_configuration.create_uid IS 'Created by';


--
-- Name: COLUMN base_module_configuration.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_configuration.create_date IS 'Created on';


--
-- Name: COLUMN base_module_configuration.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_configuration.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_module_configuration.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_configuration.write_uid IS 'Last Updated by';


--
-- Name: base_module_configuration_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_module_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_module_configuration_id_seq OWNER TO odoo;

--
-- Name: base_module_configuration_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_module_configuration_id_seq OWNED BY base_module_configuration.id;


--
-- Name: base_module_record; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_module_record (
    id integer NOT NULL,
    create_date timestamp without time zone,
    file bytea,
    create_uid integer,
    date_filter character varying NOT NULL,
    filename character varying(64) NOT NULL,
    state character varying,
    start_date timestamp without time zone NOT NULL,
    write_date timestamp without time zone,
    filetype character varying NOT NULL,
    write_uid integer
);


ALTER TABLE public.base_module_record OWNER TO odoo;

--
-- Name: TABLE base_module_record; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_module_record IS 'Base Module Record';


--
-- Name: COLUMN base_module_record.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.create_date IS 'Created on';


--
-- Name: COLUMN base_module_record.file; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.file IS 'File';


--
-- Name: COLUMN base_module_record.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.create_uid IS 'Created by';


--
-- Name: COLUMN base_module_record.date_filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.date_filter IS 'Records only';


--
-- Name: COLUMN base_module_record.filename; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.filename IS 'Filename';


--
-- Name: COLUMN base_module_record.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.state IS 'State';


--
-- Name: COLUMN base_module_record.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.start_date IS 'Records from';


--
-- Name: COLUMN base_module_record.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_module_record.filetype; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.filetype IS 'Filetype';


--
-- Name: COLUMN base_module_record.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_record.write_uid IS 'Last Updated by';


--
-- Name: base_module_record_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_module_record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_module_record_id_seq OWNER TO odoo;

--
-- Name: base_module_record_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_module_record_id_seq OWNED BY base_module_record.id;


--
-- Name: base_module_record_model_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_module_record_model_rel (
    wizard_id integer NOT NULL,
    model_id integer NOT NULL
);


ALTER TABLE public.base_module_record_model_rel OWNER TO odoo;

--
-- Name: TABLE base_module_record_model_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_module_record_model_rel IS 'RELATION BETWEEN base_module_record AND ir_model';


--
-- Name: base_module_update; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_module_update (
    id integer NOT NULL,
    create_uid integer,
    updated integer,
    added integer,
    create_date timestamp without time zone,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone
);


ALTER TABLE public.base_module_update OWNER TO odoo;

--
-- Name: TABLE base_module_update; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_module_update IS 'Update Module';


--
-- Name: COLUMN base_module_update.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.create_uid IS 'Created by';


--
-- Name: COLUMN base_module_update.updated; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.updated IS 'Number of modules updated';


--
-- Name: COLUMN base_module_update.added; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.added IS 'Number of modules added';


--
-- Name: COLUMN base_module_update.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.create_date IS 'Created on';


--
-- Name: COLUMN base_module_update.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_module_update.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.state IS 'Status';


--
-- Name: COLUMN base_module_update.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_update.write_date IS 'Last Updated on';


--
-- Name: base_module_update_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_module_update_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_module_update_id_seq OWNER TO odoo;

--
-- Name: base_module_update_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_module_update_id_seq OWNED BY base_module_update.id;


--
-- Name: base_module_upgrade; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_module_upgrade (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    module_info text
);


ALTER TABLE public.base_module_upgrade OWNER TO odoo;

--
-- Name: TABLE base_module_upgrade; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_module_upgrade IS 'Module Upgrade';


--
-- Name: COLUMN base_module_upgrade.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_upgrade.create_uid IS 'Created by';


--
-- Name: COLUMN base_module_upgrade.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_upgrade.create_date IS 'Created on';


--
-- Name: COLUMN base_module_upgrade.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_upgrade.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_module_upgrade.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_upgrade.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_module_upgrade.module_info; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_module_upgrade.module_info IS 'Modules to Update';


--
-- Name: base_module_upgrade_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_module_upgrade_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_module_upgrade_id_seq OWNER TO odoo;

--
-- Name: base_module_upgrade_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_module_upgrade_id_seq OWNED BY base_module_upgrade.id;


--
-- Name: base_partner_merge_automatic_wizard; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_partner_merge_automatic_wizard (
    id integer NOT NULL,
    exclude_journal_item boolean,
    create_uid integer,
    current_line_id integer,
    create_date timestamp without time zone,
    group_by_name boolean,
    group_by_vat boolean,
    group_by_parent_id boolean,
    exclude_contact boolean,
    group_by_is_company boolean,
    write_uid integer,
    state character varying NOT NULL,
    maximum_group integer,
    write_date timestamp without time zone,
    number_group integer,
    group_by_email boolean,
    dst_partner_id integer
);


ALTER TABLE public.base_partner_merge_automatic_wizard OWNER TO odoo;

--
-- Name: TABLE base_partner_merge_automatic_wizard; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_partner_merge_automatic_wizard IS 'base.partner.merge.automatic.wizard';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.exclude_journal_item; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.exclude_journal_item IS 'Journal Items associated to the contact';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.create_uid IS 'Created by';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.current_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.current_line_id IS 'Current Line';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.create_date IS 'Created on';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.group_by_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.group_by_name IS 'Name';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.group_by_vat; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.group_by_vat IS 'VAT';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.group_by_parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.group_by_parent_id IS 'Parent Company';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.exclude_contact; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.exclude_contact IS 'A user associated to the contact';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.group_by_is_company; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.group_by_is_company IS 'Is Company';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.state IS 'State';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.maximum_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.maximum_group IS 'Maximum of Group of Contacts';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.number_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.number_group IS 'Group of Contacts';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.group_by_email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.group_by_email IS 'Email';


--
-- Name: COLUMN base_partner_merge_automatic_wizard.dst_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_automatic_wizard.dst_partner_id IS 'Destination Contact';


--
-- Name: base_partner_merge_automatic_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_partner_merge_automatic_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_partner_merge_automatic_wizard_id_seq OWNER TO odoo;

--
-- Name: base_partner_merge_automatic_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_partner_merge_automatic_wizard_id_seq OWNED BY base_partner_merge_automatic_wizard.id;


--
-- Name: base_partner_merge_automatic_wizard_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_partner_merge_automatic_wizard_res_partner_rel (
    base_partner_merge_automatic_wizard_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.base_partner_merge_automatic_wizard_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE base_partner_merge_automatic_wizard_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_partner_merge_automatic_wizard_res_partner_rel IS 'RELATION BETWEEN base_partner_merge_automatic_wizard AND res_partner';


--
-- Name: base_partner_merge_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_partner_merge_line (
    id integer NOT NULL,
    create_uid integer,
    aggr_ids character varying NOT NULL,
    wizard_id integer,
    write_uid integer,
    min_id integer,
    write_date timestamp without time zone,
    create_date timestamp without time zone
);


ALTER TABLE public.base_partner_merge_line OWNER TO odoo;

--
-- Name: TABLE base_partner_merge_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_partner_merge_line IS 'base.partner.merge.line';


--
-- Name: COLUMN base_partner_merge_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.create_uid IS 'Created by';


--
-- Name: COLUMN base_partner_merge_line.aggr_ids; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.aggr_ids IS 'Ids';


--
-- Name: COLUMN base_partner_merge_line.wizard_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.wizard_id IS 'Wizard';


--
-- Name: COLUMN base_partner_merge_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_partner_merge_line.min_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.min_id IS 'MinID';


--
-- Name: COLUMN base_partner_merge_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_partner_merge_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_partner_merge_line.create_date IS 'Created on';


--
-- Name: base_partner_merge_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_partner_merge_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_partner_merge_line_id_seq OWNER TO odoo;

--
-- Name: base_partner_merge_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_partner_merge_line_id_seq OWNED BY base_partner_merge_line.id;


--
-- Name: base_setup_terminology; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_setup_terminology (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    partner character varying NOT NULL
);


ALTER TABLE public.base_setup_terminology OWNER TO odoo;

--
-- Name: TABLE base_setup_terminology; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_setup_terminology IS 'base.setup.terminology';


--
-- Name: COLUMN base_setup_terminology.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_setup_terminology.create_uid IS 'Created by';


--
-- Name: COLUMN base_setup_terminology.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_setup_terminology.create_date IS 'Created on';


--
-- Name: COLUMN base_setup_terminology.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_setup_terminology.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_setup_terminology.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_setup_terminology.write_date IS 'Last Updated on';


--
-- Name: COLUMN base_setup_terminology.partner; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_setup_terminology.partner IS 'How do you call a Customer';


--
-- Name: base_setup_terminology_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_setup_terminology_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_setup_terminology_id_seq OWNER TO odoo;

--
-- Name: base_setup_terminology_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_setup_terminology_id_seq OWNED BY base_setup_terminology.id;


--
-- Name: base_update_translations; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE base_update_translations (
    id integer NOT NULL,
    lang character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.base_update_translations OWNER TO odoo;

--
-- Name: TABLE base_update_translations; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE base_update_translations IS 'base.update.translations';


--
-- Name: COLUMN base_update_translations.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_update_translations.lang IS 'Language';


--
-- Name: COLUMN base_update_translations.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_update_translations.create_uid IS 'Created by';


--
-- Name: COLUMN base_update_translations.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_update_translations.create_date IS 'Created on';


--
-- Name: COLUMN base_update_translations.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_update_translations.write_uid IS 'Last Updated by';


--
-- Name: COLUMN base_update_translations.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN base_update_translations.write_date IS 'Last Updated on';


--
-- Name: base_update_translations_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE base_update_translations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.base_update_translations_id_seq OWNER TO odoo;

--
-- Name: base_update_translations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE base_update_translations_id_seq OWNED BY base_update_translations.id;


--
-- Name: board_create; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE board_create (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    menu_parent_id integer NOT NULL
);


ALTER TABLE public.board_create OWNER TO odoo;

--
-- Name: TABLE board_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE board_create IS 'Board Creation';


--
-- Name: COLUMN board_create.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.create_uid IS 'Created by';


--
-- Name: COLUMN board_create.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.create_date IS 'Created on';


--
-- Name: COLUMN board_create.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.name IS 'Board Name';


--
-- Name: COLUMN board_create.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.write_uid IS 'Last Updated by';


--
-- Name: COLUMN board_create.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.write_date IS 'Last Updated on';


--
-- Name: COLUMN board_create.menu_parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN board_create.menu_parent_id IS 'Parent Menu';


--
-- Name: board_create_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE board_create_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.board_create_id_seq OWNER TO odoo;

--
-- Name: board_create_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE board_create_id_seq OWNED BY board_create.id;


--
-- Name: bus_bus; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE bus_bus (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    message character varying,
    channel character varying
);


ALTER TABLE public.bus_bus OWNER TO odoo;

--
-- Name: TABLE bus_bus; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE bus_bus IS 'bus.bus';


--
-- Name: COLUMN bus_bus.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.create_uid IS 'Created by';


--
-- Name: COLUMN bus_bus.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.create_date IS 'Create date';


--
-- Name: COLUMN bus_bus.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.write_uid IS 'Last Updated by';


--
-- Name: COLUMN bus_bus.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.write_date IS 'Last Updated on';


--
-- Name: COLUMN bus_bus.message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.message IS 'Message';


--
-- Name: COLUMN bus_bus.channel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN bus_bus.channel IS 'Channel';


--
-- Name: bus_bus_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE bus_bus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bus_bus_id_seq OWNER TO odoo;

--
-- Name: bus_bus_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE bus_bus_id_seq OWNED BY bus_bus.id;


--
-- Name: calendar_alarm; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_alarm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    "interval" character varying NOT NULL,
    write_uid integer,
    duration_minutes integer,
    write_date timestamp without time zone,
    duration integer NOT NULL,
    type character varying NOT NULL
);


ALTER TABLE public.calendar_alarm OWNER TO odoo;

--
-- Name: TABLE calendar_alarm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_alarm IS 'Event alarm';


--
-- Name: COLUMN calendar_alarm.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.create_uid IS 'Created by';


--
-- Name: COLUMN calendar_alarm.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.create_date IS 'Created on';


--
-- Name: COLUMN calendar_alarm.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.name IS 'Name';


--
-- Name: COLUMN calendar_alarm."interval"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm."interval" IS 'Unit';


--
-- Name: COLUMN calendar_alarm.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.write_uid IS 'Last Updated by';


--
-- Name: COLUMN calendar_alarm.duration_minutes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.duration_minutes IS 'duration_minutes';


--
-- Name: COLUMN calendar_alarm.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.write_date IS 'Last Updated on';


--
-- Name: COLUMN calendar_alarm.duration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.duration IS 'Amount';


--
-- Name: COLUMN calendar_alarm.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_alarm.type IS 'Type';


--
-- Name: calendar_alarm_calendar_event_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_alarm_calendar_event_rel (
    calendar_event_id integer NOT NULL,
    calendar_alarm_id integer NOT NULL
);


ALTER TABLE public.calendar_alarm_calendar_event_rel OWNER TO odoo;

--
-- Name: TABLE calendar_alarm_calendar_event_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_alarm_calendar_event_rel IS 'RELATION BETWEEN calendar_event AND calendar_alarm';


--
-- Name: calendar_alarm_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE calendar_alarm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.calendar_alarm_id_seq OWNER TO odoo;

--
-- Name: calendar_alarm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE calendar_alarm_id_seq OWNED BY calendar_alarm.id;


--
-- Name: calendar_attendee; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_attendee (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    cn character varying,
    access_token character varying,
    event_id integer,
    state character varying,
    email character varying,
    write_date timestamp without time zone,
    write_uid integer,
    partner_id integer,
    availability character varying
);


ALTER TABLE public.calendar_attendee OWNER TO odoo;

--
-- Name: TABLE calendar_attendee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_attendee IS 'Attendee information';


--
-- Name: COLUMN calendar_attendee.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.create_uid IS 'Created by';


--
-- Name: COLUMN calendar_attendee.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.create_date IS 'Created on';


--
-- Name: COLUMN calendar_attendee.cn; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.cn IS 'Common name';


--
-- Name: COLUMN calendar_attendee.access_token; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.access_token IS 'Invitation Token';


--
-- Name: COLUMN calendar_attendee.event_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.event_id IS 'Meeting linked';


--
-- Name: COLUMN calendar_attendee.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.state IS 'Status';


--
-- Name: COLUMN calendar_attendee.email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.email IS 'Email';


--
-- Name: COLUMN calendar_attendee.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.write_date IS 'Last Updated on';


--
-- Name: COLUMN calendar_attendee.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.write_uid IS 'Last Updated by';


--
-- Name: COLUMN calendar_attendee.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.partner_id IS 'Contact';


--
-- Name: COLUMN calendar_attendee.availability; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_attendee.availability IS 'Free/Busy';


--
-- Name: calendar_attendee_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE calendar_attendee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.calendar_attendee_id_seq OWNER TO odoo;

--
-- Name: calendar_attendee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE calendar_attendee_id_seq OWNED BY calendar_attendee.id;


--
-- Name: calendar_contacts; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_contacts (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean,
    user_id integer,
    partner_id integer NOT NULL
);


ALTER TABLE public.calendar_contacts OWNER TO odoo;

--
-- Name: TABLE calendar_contacts; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_contacts IS 'calendar.contacts';


--
-- Name: COLUMN calendar_contacts.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.create_uid IS 'Created by';


--
-- Name: COLUMN calendar_contacts.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.create_date IS 'Created on';


--
-- Name: COLUMN calendar_contacts.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.write_uid IS 'Last Updated by';


--
-- Name: COLUMN calendar_contacts.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.write_date IS 'Last Updated on';


--
-- Name: COLUMN calendar_contacts.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.active IS 'active';


--
-- Name: COLUMN calendar_contacts.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.user_id IS 'Me';


--
-- Name: COLUMN calendar_contacts.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_contacts.partner_id IS 'Employee';


--
-- Name: calendar_contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE calendar_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.calendar_contacts_id_seq OWNER TO odoo;

--
-- Name: calendar_contacts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE calendar_contacts_id_seq OWNED BY calendar_contacts.id;


--
-- Name: calendar_event; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_event (
    id integer NOT NULL,
    allday boolean,
    create_date timestamp without time zone,
    display_start character varying,
    message_last_post timestamp without time zone,
    start_datetime timestamp without time zone,
    write_uid integer,
    month_by character varying,
    rrule character varying,
    duration double precision,
    final_date date,
    create_uid integer,
    user_id integer,
    tu boolean,
    recurrency boolean,
    week_list character varying,
    day integer,
    start timestamp without time zone NOT NULL,
    state character varying,
    location character varying,
    th boolean,
    start_date date,
    fr boolean,
    recurrent_id_date timestamp without time zone,
    description text,
    stop_date date,
    stop timestamp without time zone NOT NULL,
    stop_datetime timestamp without time zone,
    write_date timestamp without time zone,
    active boolean,
    byday character varying,
    class character varying,
    count integer,
    end_type character varying,
    name character varying NOT NULL,
    we boolean,
    mo boolean,
    "interval" integer,
    su boolean,
    recurrent_id integer,
    sa boolean,
    rrule_type character varying,
    show_as character varying,
    opportunity_id integer,
    phonecall_id integer
);


ALTER TABLE public.calendar_event OWNER TO odoo;

--
-- Name: TABLE calendar_event; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_event IS 'Event';


--
-- Name: COLUMN calendar_event.allday; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.allday IS 'All Day';


--
-- Name: COLUMN calendar_event.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.create_date IS 'Created on';


--
-- Name: COLUMN calendar_event.display_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.display_start IS 'Date';


--
-- Name: COLUMN calendar_event.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN calendar_event.start_datetime; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.start_datetime IS 'Start DateTime';


--
-- Name: COLUMN calendar_event.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.write_uid IS 'Last Updated by';


--
-- Name: COLUMN calendar_event.month_by; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.month_by IS 'Option';


--
-- Name: COLUMN calendar_event.rrule; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.rrule IS 'Recurrent Rule';


--
-- Name: COLUMN calendar_event.duration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.duration IS 'Duration';


--
-- Name: COLUMN calendar_event.final_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.final_date IS 'Repeat Until';


--
-- Name: COLUMN calendar_event.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.create_uid IS 'Created by';


--
-- Name: COLUMN calendar_event.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.user_id IS 'Responsible';


--
-- Name: COLUMN calendar_event.tu; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.tu IS 'Tue';


--
-- Name: COLUMN calendar_event.recurrency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.recurrency IS 'Recurrent';


--
-- Name: COLUMN calendar_event.week_list; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.week_list IS 'Weekday';


--
-- Name: COLUMN calendar_event.day; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.day IS 'Date of month';


--
-- Name: COLUMN calendar_event.start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.start IS 'Calculated start';


--
-- Name: COLUMN calendar_event.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.state IS 'Status';


--
-- Name: COLUMN calendar_event.location; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.location IS 'Location';


--
-- Name: COLUMN calendar_event.th; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.th IS 'Thu';


--
-- Name: COLUMN calendar_event.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.start_date IS 'Start Date';


--
-- Name: COLUMN calendar_event.fr; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.fr IS 'Fri';


--
-- Name: COLUMN calendar_event.recurrent_id_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.recurrent_id_date IS 'Recurrent ID date';


--
-- Name: COLUMN calendar_event.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.description IS 'Description';


--
-- Name: COLUMN calendar_event.stop_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.stop_date IS 'End Date';


--
-- Name: COLUMN calendar_event.stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.stop IS 'Calculated stop';


--
-- Name: COLUMN calendar_event.stop_datetime; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.stop_datetime IS 'End Datetime';


--
-- Name: COLUMN calendar_event.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.write_date IS 'Last Updated on';


--
-- Name: COLUMN calendar_event.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.active IS 'Active';


--
-- Name: COLUMN calendar_event.byday; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.byday IS 'By day';


--
-- Name: COLUMN calendar_event.class; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.class IS 'Privacy';


--
-- Name: COLUMN calendar_event.count; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.count IS 'Repeat';


--
-- Name: COLUMN calendar_event.end_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.end_type IS 'Recurrence Termination';


--
-- Name: COLUMN calendar_event.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.name IS 'Meeting Subject';


--
-- Name: COLUMN calendar_event.we; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.we IS 'Wed';


--
-- Name: COLUMN calendar_event.mo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.mo IS 'Mon';


--
-- Name: COLUMN calendar_event."interval"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event."interval" IS 'Repeat Every';


--
-- Name: COLUMN calendar_event.su; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.su IS 'Sun';


--
-- Name: COLUMN calendar_event.recurrent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.recurrent_id IS 'Recurrent ID';


--
-- Name: COLUMN calendar_event.sa; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.sa IS 'Sat';


--
-- Name: COLUMN calendar_event.rrule_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.rrule_type IS 'Recurrency';


--
-- Name: COLUMN calendar_event.show_as; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.show_as IS 'Show Time as';


--
-- Name: COLUMN calendar_event.opportunity_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.opportunity_id IS 'Opportunity';


--
-- Name: COLUMN calendar_event.phonecall_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event.phonecall_id IS 'Phonecall';


--
-- Name: calendar_event_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE calendar_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.calendar_event_id_seq OWNER TO odoo;

--
-- Name: calendar_event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE calendar_event_id_seq OWNED BY calendar_event.id;


--
-- Name: calendar_event_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_event_res_partner_rel (
    calendar_event_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.calendar_event_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE calendar_event_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_event_res_partner_rel IS 'RELATION BETWEEN calendar_event AND res_partner';


--
-- Name: calendar_event_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE calendar_event_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.calendar_event_type OWNER TO odoo;

--
-- Name: TABLE calendar_event_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE calendar_event_type IS 'Meeting Type';


--
-- Name: COLUMN calendar_event_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event_type.create_uid IS 'Created by';


--
-- Name: COLUMN calendar_event_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event_type.create_date IS 'Created on';


--
-- Name: COLUMN calendar_event_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event_type.name IS 'Name';


--
-- Name: COLUMN calendar_event_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN calendar_event_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN calendar_event_type.write_date IS 'Last Updated on';


--
-- Name: calendar_event_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE calendar_event_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.calendar_event_type_id_seq OWNER TO odoo;

--
-- Name: calendar_event_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE calendar_event_type_id_seq OWNED BY calendar_event_type.id;


--
-- Name: cash_box_in; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE cash_box_in (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    amount numeric NOT NULL,
    write_date timestamp without time zone,
    ref character varying
);


ALTER TABLE public.cash_box_in OWNER TO odoo;

--
-- Name: TABLE cash_box_in; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE cash_box_in IS 'cash.box.in';


--
-- Name: COLUMN cash_box_in.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.create_uid IS 'Created by';


--
-- Name: COLUMN cash_box_in.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.create_date IS 'Created on';


--
-- Name: COLUMN cash_box_in.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.name IS 'Reason';


--
-- Name: COLUMN cash_box_in.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.write_uid IS 'Last Updated by';


--
-- Name: COLUMN cash_box_in.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.amount IS 'Amount';


--
-- Name: COLUMN cash_box_in.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.write_date IS 'Last Updated on';


--
-- Name: COLUMN cash_box_in.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_in.ref IS 'Reference';


--
-- Name: cash_box_in_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE cash_box_in_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cash_box_in_id_seq OWNER TO odoo;

--
-- Name: cash_box_in_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE cash_box_in_id_seq OWNED BY cash_box_in.id;


--
-- Name: cash_box_out; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE cash_box_out (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    amount numeric NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.cash_box_out OWNER TO odoo;

--
-- Name: TABLE cash_box_out; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE cash_box_out IS 'cash.box.out';


--
-- Name: COLUMN cash_box_out.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.create_uid IS 'Created by';


--
-- Name: COLUMN cash_box_out.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.create_date IS 'Created on';


--
-- Name: COLUMN cash_box_out.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.name IS 'Reason';


--
-- Name: COLUMN cash_box_out.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.write_uid IS 'Last Updated by';


--
-- Name: COLUMN cash_box_out.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.amount IS 'Amount';


--
-- Name: COLUMN cash_box_out.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN cash_box_out.write_date IS 'Last Updated on';


--
-- Name: cash_box_out_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE cash_box_out_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cash_box_out_id_seq OWNER TO odoo;

--
-- Name: cash_box_out_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE cash_box_out_id_seq OWNED BY cash_box_out.id;


--
-- Name: change_password_user; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE change_password_user (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    user_login character varying,
    new_passwd character varying,
    wizard_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    user_id integer NOT NULL
);


ALTER TABLE public.change_password_user OWNER TO odoo;

--
-- Name: TABLE change_password_user; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE change_password_user IS 'Change Password Wizard User';


--
-- Name: COLUMN change_password_user.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.create_uid IS 'Created by';


--
-- Name: COLUMN change_password_user.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.create_date IS 'Created on';


--
-- Name: COLUMN change_password_user.user_login; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.user_login IS 'User Login';


--
-- Name: COLUMN change_password_user.new_passwd; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.new_passwd IS 'New Password';


--
-- Name: COLUMN change_password_user.wizard_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.wizard_id IS 'Wizard';


--
-- Name: COLUMN change_password_user.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.write_uid IS 'Last Updated by';


--
-- Name: COLUMN change_password_user.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.write_date IS 'Last Updated on';


--
-- Name: COLUMN change_password_user.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_user.user_id IS 'User';


--
-- Name: change_password_user_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE change_password_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.change_password_user_id_seq OWNER TO odoo;

--
-- Name: change_password_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE change_password_user_id_seq OWNED BY change_password_user.id;


--
-- Name: change_password_wizard; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE change_password_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.change_password_wizard OWNER TO odoo;

--
-- Name: TABLE change_password_wizard; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE change_password_wizard IS 'Change Password Wizard';


--
-- Name: COLUMN change_password_wizard.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_wizard.create_uid IS 'Created by';


--
-- Name: COLUMN change_password_wizard.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_wizard.create_date IS 'Created on';


--
-- Name: COLUMN change_password_wizard.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_wizard.write_uid IS 'Last Updated by';


--
-- Name: COLUMN change_password_wizard.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_password_wizard.write_date IS 'Last Updated on';


--
-- Name: change_password_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE change_password_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.change_password_wizard_id_seq OWNER TO odoo;

--
-- Name: change_password_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE change_password_wizard_id_seq OWNED BY change_password_wizard.id;


--
-- Name: change_production_qty; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE change_production_qty (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL
);


ALTER TABLE public.change_production_qty OWNER TO odoo;

--
-- Name: TABLE change_production_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE change_production_qty IS 'Change Quantity of Products';


--
-- Name: COLUMN change_production_qty.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_production_qty.create_uid IS 'Created by';


--
-- Name: COLUMN change_production_qty.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_production_qty.create_date IS 'Created on';


--
-- Name: COLUMN change_production_qty.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_production_qty.write_uid IS 'Last Updated by';


--
-- Name: COLUMN change_production_qty.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_production_qty.write_date IS 'Last Updated on';


--
-- Name: COLUMN change_production_qty.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN change_production_qty.product_qty IS 'Product Qty';


--
-- Name: change_production_qty_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE change_production_qty_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.change_production_qty_id_seq OWNER TO odoo;

--
-- Name: change_production_qty_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE change_production_qty_id_seq OWNED BY change_production_qty.id;


--
-- Name: crm_case_categ; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_case_categ (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    section_id integer,
    object_id integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.crm_case_categ OWNER TO odoo;

--
-- Name: TABLE crm_case_categ; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_case_categ IS 'Category of Case';


--
-- Name: COLUMN crm_case_categ.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.create_uid IS 'Created by';


--
-- Name: COLUMN crm_case_categ.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.create_date IS 'Created on';


--
-- Name: COLUMN crm_case_categ.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.name IS 'Name';


--
-- Name: COLUMN crm_case_categ.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_case_categ.object_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.object_id IS 'Object Name';


--
-- Name: COLUMN crm_case_categ.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_case_categ.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_categ.write_date IS 'Last Updated on';


--
-- Name: crm_case_categ_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_case_categ_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_case_categ_id_seq OWNER TO odoo;

--
-- Name: crm_case_categ_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_case_categ_id_seq OWNED BY crm_case_categ.id;


--
-- Name: crm_case_section; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_case_section (
    id integer NOT NULL,
    code character varying(8),
    working_hours numeric,
    color integer,
    write_uid integer,
    create_date timestamp without time zone,
    create_uid integer,
    user_id integer,
    message_last_post timestamp without time zone,
    note text,
    parent_id integer,
    complete_name character varying(256),
    write_date timestamp without time zone,
    active boolean,
    change_responsible boolean,
    name character varying(64) NOT NULL,
    reply_to character varying(64),
    alias_id integer NOT NULL,
    use_leads boolean,
    use_opportunities boolean,
    resource_calendar_id integer,
    use_quotations boolean,
    invoiced_target integer,
    invoiced_forecast integer
);


ALTER TABLE public.crm_case_section OWNER TO odoo;

--
-- Name: TABLE crm_case_section; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_case_section IS 'Sales Teams';


--
-- Name: COLUMN crm_case_section.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.code IS 'Code';


--
-- Name: COLUMN crm_case_section.working_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.working_hours IS 'Working Hours';


--
-- Name: COLUMN crm_case_section.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.color IS 'Color Index';


--
-- Name: COLUMN crm_case_section.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_case_section.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.create_date IS 'Created on';


--
-- Name: COLUMN crm_case_section.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.create_uid IS 'Created by';


--
-- Name: COLUMN crm_case_section.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.user_id IS 'Team Leader';


--
-- Name: COLUMN crm_case_section.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN crm_case_section.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.note IS 'Description';


--
-- Name: COLUMN crm_case_section.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.parent_id IS 'Parent Team';


--
-- Name: COLUMN crm_case_section.complete_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.complete_name IS 'unknown';


--
-- Name: COLUMN crm_case_section.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_case_section.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.active IS 'Active';


--
-- Name: COLUMN crm_case_section.change_responsible; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.change_responsible IS 'Reassign Escalated';


--
-- Name: COLUMN crm_case_section.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.name IS 'Sales Team';


--
-- Name: COLUMN crm_case_section.reply_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.reply_to IS 'Reply-To';


--
-- Name: COLUMN crm_case_section.alias_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.alias_id IS 'Alias';


--
-- Name: COLUMN crm_case_section.use_leads; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.use_leads IS 'Leads';


--
-- Name: COLUMN crm_case_section.use_opportunities; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.use_opportunities IS 'Opportunities';


--
-- Name: COLUMN crm_case_section.resource_calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.resource_calendar_id IS 'Working Time';


--
-- Name: COLUMN crm_case_section.use_quotations; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.use_quotations IS 'Quotations';


--
-- Name: COLUMN crm_case_section.invoiced_target; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.invoiced_target IS 'Invoice Target';


--
-- Name: COLUMN crm_case_section.invoiced_forecast; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_section.invoiced_forecast IS 'Invoice Forecast';


--
-- Name: crm_case_section_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_case_section_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_case_section_id_seq OWNER TO odoo;

--
-- Name: crm_case_section_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_case_section_id_seq OWNED BY crm_case_section.id;


--
-- Name: crm_case_stage; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_case_stage (
    id integer NOT NULL,
    create_uid integer,
    case_default boolean,
    requirements text,
    name character varying NOT NULL,
    probability double precision NOT NULL,
    sequence integer,
    on_change boolean,
    write_uid integer,
    fold boolean,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    type character varying NOT NULL
);


ALTER TABLE public.crm_case_stage OWNER TO odoo;

--
-- Name: TABLE crm_case_stage; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_case_stage IS 'Stage of case';


--
-- Name: COLUMN crm_case_stage.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.create_uid IS 'Created by';


--
-- Name: COLUMN crm_case_stage.case_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.case_default IS 'Default to New Sales Team';


--
-- Name: COLUMN crm_case_stage.requirements; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.requirements IS 'Requirements';


--
-- Name: COLUMN crm_case_stage.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.name IS 'Stage Name';


--
-- Name: COLUMN crm_case_stage.probability; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.probability IS 'Probability (%)';


--
-- Name: COLUMN crm_case_stage.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.sequence IS 'Sequence';


--
-- Name: COLUMN crm_case_stage.on_change; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.on_change IS 'Change Probability Automatically';


--
-- Name: COLUMN crm_case_stage.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_case_stage.fold; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.fold IS 'Folded in Kanban View';


--
-- Name: COLUMN crm_case_stage.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_case_stage.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.create_date IS 'Created on';


--
-- Name: COLUMN crm_case_stage.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_case_stage.type IS 'Type';


--
-- Name: crm_case_stage_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_case_stage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_case_stage_id_seq OWNER TO odoo;

--
-- Name: crm_case_stage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_case_stage_id_seq OWNED BY crm_case_stage.id;


--
-- Name: crm_claim; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_claim (
    id integer NOT NULL,
    date_closed timestamp without time zone,
    create_date timestamp without time zone,
    write_uid integer,
    date timestamp without time zone,
    partner_id integer,
    type_action character varying,
    date_action_next timestamp without time zone,
    create_uid integer,
    user_id integer,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    email_cc text,
    cause text,
    description text,
    action_next character varying,
    section_id integer,
    write_date timestamp without time zone,
    active boolean,
    user_fault character varying,
    categ_id integer,
    stage_id integer,
    name character varying NOT NULL,
    date_deadline date,
    ref character varying,
    partner_phone character varying,
    resolution text,
    email_from character varying(128)
);


ALTER TABLE public.crm_claim OWNER TO odoo;

--
-- Name: TABLE crm_claim; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_claim IS 'Claim';


--
-- Name: COLUMN crm_claim.date_closed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.date_closed IS 'Closed';


--
-- Name: COLUMN crm_claim.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.create_date IS 'Creation Date';


--
-- Name: COLUMN crm_claim.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_claim.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.date IS 'Claim Date';


--
-- Name: COLUMN crm_claim.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.partner_id IS 'Partner';


--
-- Name: COLUMN crm_claim.type_action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.type_action IS 'Action Type';


--
-- Name: COLUMN crm_claim.date_action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.date_action_next IS 'Next Action Date';


--
-- Name: COLUMN crm_claim.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.create_uid IS 'Created by';


--
-- Name: COLUMN crm_claim.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.user_id IS 'Responsible';


--
-- Name: COLUMN crm_claim.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN crm_claim.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.company_id IS 'Company';


--
-- Name: COLUMN crm_claim.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.priority IS 'Priority';


--
-- Name: COLUMN crm_claim.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.email_cc IS 'Watchers Emails';


--
-- Name: COLUMN crm_claim.cause; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.cause IS 'Root Cause';


--
-- Name: COLUMN crm_claim.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.description IS 'Description';


--
-- Name: COLUMN crm_claim.action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.action_next IS 'Next Action';


--
-- Name: COLUMN crm_claim.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_claim.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.write_date IS 'Update Date';


--
-- Name: COLUMN crm_claim.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.active IS 'Active';


--
-- Name: COLUMN crm_claim.user_fault; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.user_fault IS 'Trouble Responsible';


--
-- Name: COLUMN crm_claim.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.categ_id IS 'Category';


--
-- Name: COLUMN crm_claim.stage_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.stage_id IS 'Stage';


--
-- Name: COLUMN crm_claim.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.name IS 'Claim Subject';


--
-- Name: COLUMN crm_claim.date_deadline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.date_deadline IS 'Deadline';


--
-- Name: COLUMN crm_claim.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.ref IS 'Reference';


--
-- Name: COLUMN crm_claim.partner_phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.partner_phone IS 'Phone';


--
-- Name: COLUMN crm_claim.resolution; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.resolution IS 'Resolution';


--
-- Name: COLUMN crm_claim.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim.email_from IS 'Email';


--
-- Name: crm_claim_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_claim_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_claim_id_seq OWNER TO odoo;

--
-- Name: crm_claim_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_claim_id_seq OWNED BY crm_claim.id;


--
-- Name: crm_claim_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_claim_report (
    id integer,
    claim_date timestamp without time zone,
    date_closed timestamp without time zone,
    date_deadline date,
    user_id integer,
    stage_id integer,
    section_id integer,
    partner_id integer,
    company_id integer,
    categ_id integer,
    subject character varying,
    nbr bigint,
    priority character varying,
    type_action character varying,
    create_date timestamp without time zone,
    delay_close double precision,
    email bigint,
    delay_expected double precision
);


ALTER TABLE public.crm_claim_report OWNER TO odoo;

--
-- Name: crm_claim_stage; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_claim_stage (
    id integer NOT NULL,
    create_uid integer,
    case_default boolean,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.crm_claim_stage OWNER TO odoo;

--
-- Name: TABLE crm_claim_stage; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_claim_stage IS 'Claim stages';


--
-- Name: COLUMN crm_claim_stage.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.create_uid IS 'Created by';


--
-- Name: COLUMN crm_claim_stage.case_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.case_default IS 'Common to All Teams';


--
-- Name: COLUMN crm_claim_stage.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.create_date IS 'Created on';


--
-- Name: COLUMN crm_claim_stage.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.name IS 'Stage Name';


--
-- Name: COLUMN crm_claim_stage.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.sequence IS 'Sequence';


--
-- Name: COLUMN crm_claim_stage.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_claim_stage.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_claim_stage.write_date IS 'Last Updated on';


--
-- Name: crm_claim_stage_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_claim_stage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_claim_stage_id_seq OWNER TO odoo;

--
-- Name: crm_claim_stage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_claim_stage_id_seq OWNED BY crm_claim_stage.id;


--
-- Name: crm_helpdesk; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_helpdesk (
    id integer NOT NULL,
    date_closed timestamp without time zone,
    create_date timestamp without time zone,
    probability double precision,
    date_action_last timestamp without time zone,
    write_uid integer,
    date timestamp without time zone,
    duration double precision,
    planned_revenue double precision,
    date_action_next timestamp without time zone,
    create_uid integer,
    user_id integer,
    partner_id integer,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    state character varying,
    email_cc text,
    ref character varying,
    description text,
    planned_cost double precision,
    ref2 character varying,
    section_id integer,
    write_date timestamp without time zone,
    active boolean,
    categ_id integer,
    name character varying NOT NULL,
    date_deadline date,
    channel_id integer,
    email_from character varying(128)
);


ALTER TABLE public.crm_helpdesk OWNER TO odoo;

--
-- Name: TABLE crm_helpdesk; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_helpdesk IS 'Helpdesk';


--
-- Name: COLUMN crm_helpdesk.date_closed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.date_closed IS 'Closed';


--
-- Name: COLUMN crm_helpdesk.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.create_date IS 'Creation Date';


--
-- Name: COLUMN crm_helpdesk.probability; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.probability IS 'Probability (%)';


--
-- Name: COLUMN crm_helpdesk.date_action_last; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_helpdesk.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_helpdesk.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.date IS 'Date';


--
-- Name: COLUMN crm_helpdesk.duration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.duration IS 'Duration';


--
-- Name: COLUMN crm_helpdesk.planned_revenue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.planned_revenue IS 'Planned Revenue';


--
-- Name: COLUMN crm_helpdesk.date_action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_helpdesk.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.create_uid IS 'Created by';


--
-- Name: COLUMN crm_helpdesk.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.user_id IS 'Responsible';


--
-- Name: COLUMN crm_helpdesk.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.partner_id IS 'Partner';


--
-- Name: COLUMN crm_helpdesk.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN crm_helpdesk.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.company_id IS 'Company';


--
-- Name: COLUMN crm_helpdesk.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.priority IS 'Priority';


--
-- Name: COLUMN crm_helpdesk.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.state IS 'Status';


--
-- Name: COLUMN crm_helpdesk.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.email_cc IS 'Watchers Emails';


--
-- Name: COLUMN crm_helpdesk.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.ref IS 'Reference';


--
-- Name: COLUMN crm_helpdesk.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.description IS 'Description';


--
-- Name: COLUMN crm_helpdesk.planned_cost; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.planned_cost IS 'Planned Costs';


--
-- Name: COLUMN crm_helpdesk.ref2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.ref2 IS 'Reference 2';


--
-- Name: COLUMN crm_helpdesk.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_helpdesk.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.write_date IS 'Update Date';


--
-- Name: COLUMN crm_helpdesk.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.active IS 'Active';


--
-- Name: COLUMN crm_helpdesk.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.categ_id IS 'Category';


--
-- Name: COLUMN crm_helpdesk.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.name IS 'Name';


--
-- Name: COLUMN crm_helpdesk.date_deadline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.date_deadline IS 'Deadline';


--
-- Name: COLUMN crm_helpdesk.channel_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.channel_id IS 'Channel';


--
-- Name: COLUMN crm_helpdesk.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_helpdesk.email_from IS 'Email';


--
-- Name: crm_helpdesk_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_helpdesk_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_helpdesk_id_seq OWNER TO odoo;

--
-- Name: crm_helpdesk_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_helpdesk_id_seq OWNED BY crm_helpdesk.id;


--
-- Name: mail_message; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_message (
    id integer NOT NULL,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    mail_server_id integer,
    write_uid integer,
    subject character varying,
    create_uid integer,
    parent_id integer,
    subtype_id integer,
    res_id integer,
    message_id character varying,
    body text,
    model character varying(128),
    record_name character varying,
    no_auto_thread boolean,
    date timestamp without time zone,
    author_id integer,
    type character varying(12),
    reply_to character varying,
    email_from character varying
);


ALTER TABLE public.mail_message OWNER TO odoo;

--
-- Name: TABLE mail_message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_message IS 'Message';


--
-- Name: COLUMN mail_message.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.create_date IS 'Created on';


--
-- Name: COLUMN mail_message.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_message.mail_server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.mail_server_id IS 'Outgoing mail server';


--
-- Name: COLUMN mail_message.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_message.subject; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.subject IS 'Subject';


--
-- Name: COLUMN mail_message.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.create_uid IS 'Created by';


--
-- Name: COLUMN mail_message.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.parent_id IS 'Parent Message';


--
-- Name: COLUMN mail_message.subtype_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.subtype_id IS 'Subtype';


--
-- Name: COLUMN mail_message.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_message.message_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.message_id IS 'Message-Id';


--
-- Name: COLUMN mail_message.body; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.body IS 'Contents';


--
-- Name: COLUMN mail_message.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.model IS 'Related Document Model';


--
-- Name: COLUMN mail_message.record_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.record_name IS 'Message Record Name';


--
-- Name: COLUMN mail_message.no_auto_thread; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.no_auto_thread IS 'No threading for answers';


--
-- Name: COLUMN mail_message.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.date IS 'Date';


--
-- Name: COLUMN mail_message.author_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.author_id IS 'Author';


--
-- Name: COLUMN mail_message.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.type IS 'Type';


--
-- Name: COLUMN mail_message.reply_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.reply_to IS 'Reply-To';


--
-- Name: COLUMN mail_message.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message.email_from IS 'From';


--
-- Name: crm_helpdesk_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW crm_helpdesk_report AS
 SELECT min(c.id) AS id,
    c.date,
    c.create_date,
    c.date_closed,
    c.state,
    c.user_id,
    c.section_id,
    c.partner_id,
    c.company_id,
    c.priority,
    c.date_deadline,
    c.categ_id,
    c.channel_id,
    c.planned_cost,
    count(*) AS nbr,
    (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close,
    ( SELECT count(mail_message.id) AS count
           FROM mail_message
          WHERE ((((mail_message.model)::text = 'crm.helpdesk'::text) AND (mail_message.res_id = c.id)) AND ((mail_message.type)::text = 'email'::text))) AS email,
    abs((avg(date_part('epoch'::text, ((c.date_deadline)::timestamp without time zone - c.date_closed))) / ((3600 * 24))::double precision)) AS delay_expected
   FROM crm_helpdesk c
  WHERE (c.active = true)
  GROUP BY c.date, c.state, c.user_id, c.section_id, c.priority, c.partner_id, c.company_id, c.date_deadline, c.create_date, c.date_closed, c.categ_id, c.channel_id, c.planned_cost, c.id;


ALTER TABLE public.crm_helpdesk_report OWNER TO odoo;

--
-- Name: crm_lead; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead (
    id integer NOT NULL,
    date_closed timestamp without time zone,
    create_date timestamp without time zone,
    date_deadline date,
    color integer,
    country_id integer,
    date_last_stage_update timestamp without time zone,
    date_action_last timestamp without time zone,
    campaign_id integer,
    day_close numeric,
    write_uid integer,
    active boolean,
    day_open numeric,
    contact_name character varying(64),
    partner_id integer,
    date_action_next timestamp without time zone,
    city character varying,
    user_id integer,
    opt_out boolean,
    date_open timestamp without time zone,
    title integer,
    partner_name character varying(64),
    planned_revenue double precision,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    email_cc text,
    ref character varying,
    planned_cost double precision,
    function character varying,
    fax character varying,
    zip character varying(24),
    description text,
    create_uid integer,
    street2 character varying,
    ref2 character varying,
    section_id integer,
    title_action character varying,
    phone character varying,
    probability double precision,
    write_date timestamp without time zone,
    payment_mode integer,
    date_action date,
    name character varying NOT NULL,
    stage_id integer,
    medium_id integer,
    mobile character varying,
    type character varying,
    street character varying,
    message_bounce integer,
    source_id integer,
    state_id integer,
    email_from character varying(128),
    referred character varying,
    weighted_planned_revenue double precision,
    code character varying NOT NULL,
    CONSTRAINT crm_lead_check_probability CHECK (((probability >= (0)::double precision) AND (probability <= (100)::double precision)))
);


ALTER TABLE public.crm_lead OWNER TO odoo;

--
-- Name: TABLE crm_lead; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead IS 'Lead/Opportunity';


--
-- Name: COLUMN crm_lead.date_closed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_closed IS 'Closed';


--
-- Name: COLUMN crm_lead.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.create_date IS 'Creation Date';


--
-- Name: COLUMN crm_lead.date_deadline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_deadline IS 'Expected Closing';


--
-- Name: COLUMN crm_lead.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.color IS 'Color Index';


--
-- Name: COLUMN crm_lead.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.country_id IS 'Country';


--
-- Name: COLUMN crm_lead.date_last_stage_update; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_last_stage_update IS 'Last Stage Update';


--
-- Name: COLUMN crm_lead.date_action_last; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_lead.campaign_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.campaign_id IS 'Campaign';


--
-- Name: COLUMN crm_lead.day_close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.day_close IS 'Days to Close';


--
-- Name: COLUMN crm_lead.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_lead.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.active IS 'Active';


--
-- Name: COLUMN crm_lead.day_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.day_open IS 'Days to Assign';


--
-- Name: COLUMN crm_lead.contact_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.contact_name IS 'Contact Name';


--
-- Name: COLUMN crm_lead.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.partner_id IS 'Partner';


--
-- Name: COLUMN crm_lead.date_action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_lead.city; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.city IS 'City';


--
-- Name: COLUMN crm_lead.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.user_id IS 'Salesperson';


--
-- Name: COLUMN crm_lead.opt_out; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.opt_out IS 'Opt-Out';


--
-- Name: COLUMN crm_lead.date_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_open IS 'Assigned';


--
-- Name: COLUMN crm_lead.title; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.title IS 'Title';


--
-- Name: COLUMN crm_lead.partner_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.partner_name IS 'Customer Name';


--
-- Name: COLUMN crm_lead.planned_revenue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.planned_revenue IS 'Expected Revenue';


--
-- Name: COLUMN crm_lead.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN crm_lead.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.company_id IS 'Company';


--
-- Name: COLUMN crm_lead.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.priority IS 'Priority';


--
-- Name: COLUMN crm_lead.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.email_cc IS 'Global CC';


--
-- Name: COLUMN crm_lead.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.ref IS 'Reference';


--
-- Name: COLUMN crm_lead.planned_cost; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.planned_cost IS 'Planned Costs';


--
-- Name: COLUMN crm_lead.function; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.function IS 'Function';


--
-- Name: COLUMN crm_lead.fax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.fax IS 'Fax';


--
-- Name: COLUMN crm_lead.zip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.zip IS 'Zip';


--
-- Name: COLUMN crm_lead.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.description IS 'Notes';


--
-- Name: COLUMN crm_lead.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.create_uid IS 'Created by';


--
-- Name: COLUMN crm_lead.street2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.street2 IS 'Street2';


--
-- Name: COLUMN crm_lead.ref2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.ref2 IS 'Reference 2';


--
-- Name: COLUMN crm_lead.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_lead.title_action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.title_action IS 'Next Action';


--
-- Name: COLUMN crm_lead.phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.phone IS 'Phone';


--
-- Name: COLUMN crm_lead.probability; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.probability IS 'Success Rate (%)';


--
-- Name: COLUMN crm_lead.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.write_date IS 'Update Date';


--
-- Name: COLUMN crm_lead.payment_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.payment_mode IS 'Payment Mode';


--
-- Name: COLUMN crm_lead.date_action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.date_action IS 'Next Action Date';


--
-- Name: COLUMN crm_lead.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.name IS 'Subject';


--
-- Name: COLUMN crm_lead.stage_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.stage_id IS 'Stage';


--
-- Name: COLUMN crm_lead.medium_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.medium_id IS 'Channel';


--
-- Name: COLUMN crm_lead.mobile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.mobile IS 'Mobile';


--
-- Name: COLUMN crm_lead.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.type IS 'Type';


--
-- Name: COLUMN crm_lead.street; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.street IS 'Street';


--
-- Name: COLUMN crm_lead.message_bounce; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.message_bounce IS 'Bounce';


--
-- Name: COLUMN crm_lead.source_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.source_id IS 'Source';


--
-- Name: COLUMN crm_lead.state_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.state_id IS 'State';


--
-- Name: COLUMN crm_lead.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.email_from IS 'Email';


--
-- Name: COLUMN crm_lead.referred; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.referred IS 'Referred By';


--
-- Name: COLUMN crm_lead.weighted_planned_revenue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead.weighted_planned_revenue IS 'Weighted expected revenue';


--
-- Name: crm_lead2opportunity_partner; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    section_id integer,
    write_date timestamp without time zone,
    action character varying NOT NULL,
    user_id integer,
    write_uid integer,
    partner_id integer
);


ALTER TABLE public.crm_lead2opportunity_partner OWNER TO odoo;

--
-- Name: TABLE crm_lead2opportunity_partner; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead2opportunity_partner IS 'Lead To Opportunity Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.create_uid IS 'Created by';


--
-- Name: COLUMN crm_lead2opportunity_partner.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.create_date IS 'Created on';


--
-- Name: COLUMN crm_lead2opportunity_partner.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.name IS 'Conversion Action';


--
-- Name: COLUMN crm_lead2opportunity_partner.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_lead2opportunity_partner.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_lead2opportunity_partner.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.action IS 'Related Customer';


--
-- Name: COLUMN crm_lead2opportunity_partner.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.user_id IS 'Salesperson';


--
-- Name: COLUMN crm_lead2opportunity_partner.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_lead2opportunity_partner.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner.partner_id IS 'Customer';


--
-- Name: crm_lead2opportunity_partner_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_lead2opportunity_partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_lead2opportunity_partner_id_seq OWNER TO odoo;

--
-- Name: crm_lead2opportunity_partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_lead2opportunity_partner_id_seq OWNED BY crm_lead2opportunity_partner.id;


--
-- Name: crm_lead2opportunity_partner_mass; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner_mass (
    id integer NOT NULL,
    create_uid integer,
    deduplicate boolean,
    user_id integer,
    name character varying NOT NULL,
    force_assignation boolean,
    section_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    action character varying NOT NULL,
    create_date timestamp without time zone,
    partner_id integer
);


ALTER TABLE public.crm_lead2opportunity_partner_mass OWNER TO odoo;

--
-- Name: TABLE crm_lead2opportunity_partner_mass; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead2opportunity_partner_mass IS 'Mass Lead To Opportunity Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.create_uid IS 'Created by';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.deduplicate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.deduplicate IS 'Apply deduplication';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.user_id IS 'Salesperson';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.name IS 'Conversion Action';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.force_assignation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.force_assignation IS 'Force assignation';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.action IS 'Related Customer';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.create_date IS 'Created on';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.partner_id IS 'Customer';


--
-- Name: crm_lead2opportunity_partner_mass_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_lead2opportunity_partner_mass_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_lead2opportunity_partner_mass_id_seq OWNER TO odoo;

--
-- Name: crm_lead2opportunity_partner_mass_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_lead2opportunity_partner_mass_id_seq OWNED BY crm_lead2opportunity_partner_mass.id;


--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner_mass_res_users_rel (
    crm_lead2opportunity_partner_mass_id integer NOT NULL,
    res_users_id integer NOT NULL
);


ALTER TABLE public.crm_lead2opportunity_partner_mass_res_users_rel OWNER TO odoo;

--
-- Name: TABLE crm_lead2opportunity_partner_mass_res_users_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead2opportunity_partner_mass_res_users_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner_mass AND res_users';


--
-- Name: crm_lead_category_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead_category_rel (
    lead_id integer NOT NULL,
    category_id integer NOT NULL
);


ALTER TABLE public.crm_lead_category_rel OWNER TO odoo;

--
-- Name: TABLE crm_lead_category_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead_category_rel IS 'RELATION BETWEEN crm_lead AND crm_case_categ';


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead_crm_lead2opportunity_partner_mass_rel (
    crm_lead2opportunity_partner_mass_id integer NOT NULL,
    crm_lead_id integer NOT NULL
);


ALTER TABLE public.crm_lead_crm_lead2opportunity_partner_mass_rel OWNER TO odoo;

--
-- Name: TABLE crm_lead_crm_lead2opportunity_partner_mass_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead_crm_lead2opportunity_partner_mass_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner_mass AND crm_lead';


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead_crm_lead2opportunity_partner_rel (
    crm_lead2opportunity_partner_id integer NOT NULL,
    crm_lead_id integer NOT NULL
);


ALTER TABLE public.crm_lead_crm_lead2opportunity_partner_rel OWNER TO odoo;

--
-- Name: TABLE crm_lead_crm_lead2opportunity_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_lead_crm_lead2opportunity_partner_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner AND crm_lead';


--
-- Name: crm_lead_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_lead_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_lead_id_seq OWNER TO odoo;

--
-- Name: crm_lead_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_lead_id_seq OWNED BY crm_lead.id;


--
-- Name: crm_lead_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_lead_report (
    id integer,
    date_deadline date,
    nbr_cases bigint,
    opening_date timestamp without time zone,
    date_closed timestamp without time zone,
    date_last_stage_update timestamp without time zone,
    user_id integer,
    probability double precision,
    stage_id integer,
    type character varying,
    company_id integer,
    priority character varying,
    section_id integer,
    campaign_id integer,
    source_id integer,
    medium_id integer,
    partner_id integer,
    country_id integer,
    planned_revenue double precision,
    probable_revenue double precision,
    create_date timestamp without time zone,
    delay_close double precision,
    delay_expected double precision,
    delay_open double precision
);


ALTER TABLE public.crm_lead_report OWNER TO odoo;

--
-- Name: crm_make_sale; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_make_sale (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    close boolean,
    partner_id integer NOT NULL
);


ALTER TABLE public.crm_make_sale OWNER TO odoo;

--
-- Name: TABLE crm_make_sale; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_make_sale IS 'Make sales';


--
-- Name: COLUMN crm_make_sale.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.create_uid IS 'Created by';


--
-- Name: COLUMN crm_make_sale.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.create_date IS 'Created on';


--
-- Name: COLUMN crm_make_sale.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_make_sale.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_make_sale.close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.close IS 'Mark Won';


--
-- Name: COLUMN crm_make_sale.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_make_sale.partner_id IS 'Customer';


--
-- Name: crm_make_sale_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_make_sale_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_make_sale_id_seq OWNER TO odoo;

--
-- Name: crm_make_sale_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_make_sale_id_seq OWNED BY crm_make_sale.id;


--
-- Name: crm_merge_opportunity; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_merge_opportunity (
    id integer NOT NULL,
    create_uid integer,
    user_id integer,
    section_id integer,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.crm_merge_opportunity OWNER TO odoo;

--
-- Name: TABLE crm_merge_opportunity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_merge_opportunity IS 'Merge opportunities';


--
-- Name: COLUMN crm_merge_opportunity.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.create_uid IS 'Created by';


--
-- Name: COLUMN crm_merge_opportunity.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.user_id IS 'Salesperson';


--
-- Name: COLUMN crm_merge_opportunity.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_merge_opportunity.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_merge_opportunity.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.create_date IS 'Created on';


--
-- Name: COLUMN crm_merge_opportunity.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_merge_opportunity.write_uid IS 'Last Updated by';


--
-- Name: crm_merge_opportunity_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_merge_opportunity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_merge_opportunity_id_seq OWNER TO odoo;

--
-- Name: crm_merge_opportunity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_merge_opportunity_id_seq OWNED BY crm_merge_opportunity.id;


--
-- Name: crm_opportunity_report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_opportunity_report (
    id integer,
    date_deadline date,
    nbr_cases bigint,
    opening_date timestamp without time zone,
    date_closed timestamp without time zone,
    date_last_stage_update timestamp without time zone,
    user_id integer,
    probability double precision,
    stage_id integer,
    type character varying,
    company_id integer,
    priority character varying,
    section_id integer,
    campaign_id integer,
    source_id integer,
    medium_id integer,
    partner_id integer,
    country_id integer,
    total_revenue double precision,
    expected_revenue double precision,
    create_date timestamp without time zone,
    delay_close double precision,
    delay_expected double precision,
    delay_open double precision
);


ALTER TABLE public.crm_opportunity_report OWNER TO odoo;

--
-- Name: crm_partner_binding; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_partner_binding (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    action character varying NOT NULL,
    partner_id integer
);


ALTER TABLE public.crm_partner_binding OWNER TO odoo;

--
-- Name: TABLE crm_partner_binding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_partner_binding IS 'Handle partner binding or generation in CRM wizards.';


--
-- Name: COLUMN crm_partner_binding.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.create_uid IS 'Created by';


--
-- Name: COLUMN crm_partner_binding.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.create_date IS 'Created on';


--
-- Name: COLUMN crm_partner_binding.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_partner_binding.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_partner_binding.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.action IS 'Related Customer';


--
-- Name: COLUMN crm_partner_binding.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_partner_binding.partner_id IS 'Customer';


--
-- Name: crm_partner_binding_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_partner_binding_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_partner_binding_id_seq OWNER TO odoo;

--
-- Name: crm_partner_binding_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_partner_binding_id_seq OWNED BY crm_partner_binding.id;


--
-- Name: crm_payment_mode; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_payment_mode (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    section_id integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.crm_payment_mode OWNER TO odoo;

--
-- Name: TABLE crm_payment_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_payment_mode IS 'CRM Payment Mode';


--
-- Name: COLUMN crm_payment_mode.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.create_uid IS 'Created by';


--
-- Name: COLUMN crm_payment_mode.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.create_date IS 'Created on';


--
-- Name: COLUMN crm_payment_mode.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.name IS 'Name';


--
-- Name: COLUMN crm_payment_mode.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_payment_mode.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_payment_mode.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_payment_mode.write_date IS 'Last Updated on';


--
-- Name: crm_payment_mode_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_payment_mode_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_payment_mode_id_seq OWNER TO odoo;

--
-- Name: crm_payment_mode_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_payment_mode_id_seq OWNED BY crm_payment_mode.id;


--
-- Name: crm_phonecall; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_phonecall (
    id integer NOT NULL,
    date_closed timestamp without time zone,
    create_date timestamp without time zone,
    date_action_last timestamp without time zone,
    write_uid integer,
    date timestamp without time zone,
    duration double precision,
    partner_id integer,
    date_action_next timestamp without time zone,
    create_uid integer,
    user_id integer,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    state character varying,
    description text,
    name character varying NOT NULL,
    section_id integer,
    partner_mobile character varying,
    write_date timestamp without time zone,
    active boolean,
    categ_id integer,
    opportunity_id integer,
    date_open timestamp without time zone,
    partner_phone character varying,
    email_from character varying(128)
);


ALTER TABLE public.crm_phonecall OWNER TO odoo;

--
-- Name: TABLE crm_phonecall; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_phonecall IS 'Phonecall';


--
-- Name: COLUMN crm_phonecall.date_closed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.date_closed IS 'Closed';


--
-- Name: COLUMN crm_phonecall.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.create_date IS 'Creation Date';


--
-- Name: COLUMN crm_phonecall.date_action_last; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_phonecall.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_phonecall.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.date IS 'Date';


--
-- Name: COLUMN crm_phonecall.duration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.duration IS 'Duration';


--
-- Name: COLUMN crm_phonecall.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.partner_id IS 'Contact';


--
-- Name: COLUMN crm_phonecall.date_action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_phonecall.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.create_uid IS 'Created by';


--
-- Name: COLUMN crm_phonecall.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.user_id IS 'Responsible';


--
-- Name: COLUMN crm_phonecall.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN crm_phonecall.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.company_id IS 'Company';


--
-- Name: COLUMN crm_phonecall.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.priority IS 'Priority';


--
-- Name: COLUMN crm_phonecall.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.state IS 'Status';


--
-- Name: COLUMN crm_phonecall.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.description IS 'Description';


--
-- Name: COLUMN crm_phonecall.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.name IS 'Call Summary';


--
-- Name: COLUMN crm_phonecall.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_phonecall.partner_mobile; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.partner_mobile IS 'Mobile';


--
-- Name: COLUMN crm_phonecall.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_phonecall.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.active IS 'Active';


--
-- Name: COLUMN crm_phonecall.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.categ_id IS 'Category';


--
-- Name: COLUMN crm_phonecall.opportunity_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.opportunity_id IS 'Lead/Opportunity';


--
-- Name: COLUMN crm_phonecall.date_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.date_open IS 'Opened';


--
-- Name: COLUMN crm_phonecall.partner_phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.partner_phone IS 'Phone';


--
-- Name: COLUMN crm_phonecall.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall.email_from IS 'Email';


--
-- Name: crm_phonecall2phonecall; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_phonecall2phonecall (
    id integer NOT NULL,
    create_uid integer,
    user_id integer,
    name character varying NOT NULL,
    categ_id integer,
    section_id integer,
    write_uid integer,
    note text,
    phone character varying,
    write_date timestamp without time zone,
    date timestamp without time zone,
    create_date timestamp without time zone,
    contact_name character varying,
    partner_id integer,
    action character varying NOT NULL
);


ALTER TABLE public.crm_phonecall2phonecall OWNER TO odoo;

--
-- Name: TABLE crm_phonecall2phonecall; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_phonecall2phonecall IS 'Phonecall To Phonecall';


--
-- Name: COLUMN crm_phonecall2phonecall.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.create_uid IS 'Created by';


--
-- Name: COLUMN crm_phonecall2phonecall.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.user_id IS 'Assign To';


--
-- Name: COLUMN crm_phonecall2phonecall.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.name IS 'Call summary';


--
-- Name: COLUMN crm_phonecall2phonecall.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.categ_id IS 'Category';


--
-- Name: COLUMN crm_phonecall2phonecall.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_phonecall2phonecall.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_phonecall2phonecall.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.note IS 'Note';


--
-- Name: COLUMN crm_phonecall2phonecall.phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.phone IS 'Phone';


--
-- Name: COLUMN crm_phonecall2phonecall.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_phonecall2phonecall.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.date IS 'Date';


--
-- Name: COLUMN crm_phonecall2phonecall.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.create_date IS 'Created on';


--
-- Name: COLUMN crm_phonecall2phonecall.contact_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.contact_name IS 'Contact';


--
-- Name: COLUMN crm_phonecall2phonecall.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.partner_id IS 'Partner';


--
-- Name: COLUMN crm_phonecall2phonecall.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_phonecall2phonecall.action IS 'Action';


--
-- Name: crm_phonecall2phonecall_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_phonecall2phonecall_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_phonecall2phonecall_id_seq OWNER TO odoo;

--
-- Name: crm_phonecall2phonecall_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_phonecall2phonecall_id_seq OWNED BY crm_phonecall2phonecall.id;


--
-- Name: crm_phonecall_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_phonecall_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_phonecall_id_seq OWNER TO odoo;

--
-- Name: crm_phonecall_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_phonecall_id_seq OWNED BY crm_phonecall.id;


--
-- Name: crm_phonecall_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW crm_phonecall_report AS
 SELECT c.id,
    c.date_open AS opening_date,
    c.date_closed,
    c.state,
    c.user_id,
    c.section_id,
    c.categ_id,
    c.partner_id,
    c.duration,
    c.company_id,
    c.priority,
    1 AS nbr,
    c.create_date,
    (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close,
    (date_part('epoch'::text, (c.date_open - c.create_date)) / ((3600 * 24))::double precision) AS delay_open
   FROM crm_phonecall c;


ALTER TABLE public.crm_phonecall_report OWNER TO odoo;

--
-- Name: crm_segmentation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_segmentation (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    description text,
    partner_id integer,
    write_uid integer,
    state character varying,
    sales_purchase_active boolean,
    exclusif boolean,
    write_date timestamp without time zone,
    categ_id integer NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.crm_segmentation OWNER TO odoo;

--
-- Name: TABLE crm_segmentation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_segmentation IS 'Partner Segmentation';


--
-- Name: COLUMN crm_segmentation.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.create_uid IS 'Created by';


--
-- Name: COLUMN crm_segmentation.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.create_date IS 'Created on';


--
-- Name: COLUMN crm_segmentation.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.description IS 'Description';


--
-- Name: COLUMN crm_segmentation.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.partner_id IS 'Max Partner ID processed';


--
-- Name: COLUMN crm_segmentation.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_segmentation.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.state IS 'Execution Status';


--
-- Name: COLUMN crm_segmentation.sales_purchase_active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.sales_purchase_active IS 'Use The Sales Purchase Rules';


--
-- Name: COLUMN crm_segmentation.exclusif; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.exclusif IS 'Exclusive';


--
-- Name: COLUMN crm_segmentation.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_segmentation.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.categ_id IS 'Partner Category';


--
-- Name: COLUMN crm_segmentation.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation.name IS 'Name';


--
-- Name: crm_segmentation_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_segmentation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_segmentation_id_seq OWNER TO odoo;

--
-- Name: crm_segmentation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_segmentation_id_seq OWNED BY crm_segmentation.id;


--
-- Name: crm_segmentation_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_segmentation_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    expr_operator character varying NOT NULL,
    expr_value double precision NOT NULL,
    write_uid integer,
    expr_name character varying NOT NULL,
    write_date timestamp without time zone,
    segmentation_id integer,
    operator character varying NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.crm_segmentation_line OWNER TO odoo;

--
-- Name: TABLE crm_segmentation_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_segmentation_line IS 'Segmentation line';


--
-- Name: COLUMN crm_segmentation_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.create_uid IS 'Created by';


--
-- Name: COLUMN crm_segmentation_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.create_date IS 'Created on';


--
-- Name: COLUMN crm_segmentation_line.expr_operator; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.expr_operator IS 'Operator';


--
-- Name: COLUMN crm_segmentation_line.expr_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.expr_value IS 'Value';


--
-- Name: COLUMN crm_segmentation_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_segmentation_line.expr_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.expr_name IS 'Control Variable';


--
-- Name: COLUMN crm_segmentation_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_segmentation_line.segmentation_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.segmentation_id IS 'Segmentation';


--
-- Name: COLUMN crm_segmentation_line.operator; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.operator IS 'Mandatory / Optional';


--
-- Name: COLUMN crm_segmentation_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_segmentation_line.name IS 'Rule Name';


--
-- Name: crm_segmentation_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_segmentation_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_segmentation_line_id_seq OWNER TO odoo;

--
-- Name: crm_segmentation_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_segmentation_line_id_seq OWNED BY crm_segmentation_line.id;


--
-- Name: crm_tracking_campaign; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_tracking_campaign (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    section_id integer,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.crm_tracking_campaign OWNER TO odoo;

--
-- Name: TABLE crm_tracking_campaign; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_tracking_campaign IS 'Campaign';


--
-- Name: COLUMN crm_tracking_campaign.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.create_uid IS 'Created by';


--
-- Name: COLUMN crm_tracking_campaign.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.create_date IS 'Created on';


--
-- Name: COLUMN crm_tracking_campaign.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.name IS 'Campaign Name';


--
-- Name: COLUMN crm_tracking_campaign.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_tracking_campaign.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_tracking_campaign.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_campaign.write_date IS 'Last Updated on';


--
-- Name: crm_tracking_campaign_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_tracking_campaign_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_tracking_campaign_id_seq OWNER TO odoo;

--
-- Name: crm_tracking_campaign_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_tracking_campaign_id_seq OWNED BY crm_tracking_campaign.id;


--
-- Name: crm_tracking_medium; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_tracking_medium (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.crm_tracking_medium OWNER TO odoo;

--
-- Name: TABLE crm_tracking_medium; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_tracking_medium IS 'Channels';


--
-- Name: COLUMN crm_tracking_medium.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.create_uid IS 'Created by';


--
-- Name: COLUMN crm_tracking_medium.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.create_date IS 'Created on';


--
-- Name: COLUMN crm_tracking_medium.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.name IS 'Channel Name';


--
-- Name: COLUMN crm_tracking_medium.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_tracking_medium.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.write_date IS 'Last Updated on';


--
-- Name: COLUMN crm_tracking_medium.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_medium.active IS 'Active';


--
-- Name: crm_tracking_medium_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_tracking_medium_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_tracking_medium_id_seq OWNER TO odoo;

--
-- Name: crm_tracking_medium_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_tracking_medium_id_seq OWNED BY crm_tracking_medium.id;


--
-- Name: crm_tracking_source; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE crm_tracking_source (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.crm_tracking_source OWNER TO odoo;

--
-- Name: TABLE crm_tracking_source; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE crm_tracking_source IS 'Source';


--
-- Name: COLUMN crm_tracking_source.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_source.create_uid IS 'Created by';


--
-- Name: COLUMN crm_tracking_source.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_source.create_date IS 'Created on';


--
-- Name: COLUMN crm_tracking_source.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_source.name IS 'Source Name';


--
-- Name: COLUMN crm_tracking_source.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_source.write_uid IS 'Last Updated by';


--
-- Name: COLUMN crm_tracking_source.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN crm_tracking_source.write_date IS 'Last Updated on';


--
-- Name: crm_tracking_source_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE crm_tracking_source_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.crm_tracking_source_id_seq OWNER TO odoo;

--
-- Name: crm_tracking_source_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE crm_tracking_source_id_seq OWNED BY crm_tracking_source.id;


--
-- Name: db_backup; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE db_backup (
    id integer NOT NULL,
    create_uid integer,
    autoremove boolean,
    daystokeepsftp integer,
    name character varying(100) NOT NULL,
    sftppath character varying,
    sftppassword character varying,
    port character varying(10) NOT NULL,
    sftpip character varying,
    write_uid integer,
    bkp_dir character varying(100) NOT NULL,
    sftpwrite boolean,
    host character varying(100) NOT NULL,
    daystokeep integer NOT NULL,
    emailtonotify character varying,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    sendmailsftpfail boolean,
    sftpusername character varying
);


ALTER TABLE public.db_backup OWNER TO odoo;

--
-- Name: TABLE db_backup; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE db_backup IS 'db.backup';


--
-- Name: COLUMN db_backup.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.create_uid IS 'Created by';


--
-- Name: COLUMN db_backup.autoremove; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.autoremove IS 'Auto. Remove Backups';


--
-- Name: COLUMN db_backup.daystokeepsftp; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.daystokeepsftp IS 'Remove SFTP after x days';


--
-- Name: COLUMN db_backup.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.name IS 'Database';


--
-- Name: COLUMN db_backup.sftppath; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sftppath IS 'Path external server';


--
-- Name: COLUMN db_backup.sftppassword; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sftppassword IS 'Password User SFTP Server';


--
-- Name: COLUMN db_backup.port; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.port IS 'Port';


--
-- Name: COLUMN db_backup.sftpip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sftpip IS 'IP Address SFTP Server';


--
-- Name: COLUMN db_backup.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.write_uid IS 'Last Updated by';


--
-- Name: COLUMN db_backup.bkp_dir; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.bkp_dir IS 'Backup Directory';


--
-- Name: COLUMN db_backup.sftpwrite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sftpwrite IS 'Write to external server with sftp';


--
-- Name: COLUMN db_backup.host; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.host IS 'Host';


--
-- Name: COLUMN db_backup.daystokeep; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.daystokeep IS 'Remove after x days';


--
-- Name: COLUMN db_backup.emailtonotify; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.emailtonotify IS 'E-mail to notify';


--
-- Name: COLUMN db_backup.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.write_date IS 'Last Updated on';


--
-- Name: COLUMN db_backup.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.create_date IS 'Created on';


--
-- Name: COLUMN db_backup.sendmailsftpfail; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sendmailsftpfail IS 'Auto. E-mail on backup fail';


--
-- Name: COLUMN db_backup.sftpusername; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN db_backup.sftpusername IS 'Username SFTP Server';


--
-- Name: db_backup_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE db_backup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.db_backup_id_seq OWNER TO odoo;

--
-- Name: db_backup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE db_backup_id_seq OWNED BY db_backup.id;


--
-- Name: decimal_precision; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE decimal_precision (
    id integer NOT NULL,
    digits integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.decimal_precision OWNER TO odoo;

--
-- Name: TABLE decimal_precision; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE decimal_precision IS 'decimal.precision';


--
-- Name: COLUMN decimal_precision.digits; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.digits IS 'Digits';


--
-- Name: COLUMN decimal_precision.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.create_uid IS 'Created by';


--
-- Name: COLUMN decimal_precision.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.create_date IS 'Created on';


--
-- Name: COLUMN decimal_precision.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.name IS 'Usage';


--
-- Name: COLUMN decimal_precision.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.write_uid IS 'Last Updated by';


--
-- Name: COLUMN decimal_precision.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision.write_date IS 'Last Updated on';


--
-- Name: decimal_precision_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE decimal_precision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.decimal_precision_id_seq OWNER TO odoo;

--
-- Name: decimal_precision_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE decimal_precision_id_seq OWNED BY decimal_precision.id;


--
-- Name: decimal_precision_test; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE decimal_precision_test (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    float_2 numeric,
    "float" double precision,
    float_4 numeric,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.decimal_precision_test OWNER TO odoo;

--
-- Name: TABLE decimal_precision_test; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE decimal_precision_test IS 'decimal.precision.test';


--
-- Name: COLUMN decimal_precision_test.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.create_uid IS 'Created by';


--
-- Name: COLUMN decimal_precision_test.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.create_date IS 'Created on';


--
-- Name: COLUMN decimal_precision_test.float_2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.float_2 IS 'unknown';


--
-- Name: COLUMN decimal_precision_test."float"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test."float" IS 'unknown';


--
-- Name: COLUMN decimal_precision_test.float_4; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.float_4 IS 'unknown';


--
-- Name: COLUMN decimal_precision_test.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.write_uid IS 'Last Updated by';


--
-- Name: COLUMN decimal_precision_test.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN decimal_precision_test.write_date IS 'Last Updated on';


--
-- Name: decimal_precision_test_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE decimal_precision_test_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.decimal_precision_test_id_seq OWNER TO odoo;

--
-- Name: decimal_precision_test_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE decimal_precision_test_id_seq OWNED BY decimal_precision_test.id;


--
-- Name: delivery_carrier; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE delivery_carrier (
    id integer NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    normal_price double precision,
    write_uid integer,
    active boolean,
    amount double precision,
    write_date timestamp without time zone,
    free_if_more_than boolean,
    use_detailed_pricelist boolean,
    partner_id integer NOT NULL,
    create_uid integer,
    product_id integer NOT NULL
);


ALTER TABLE public.delivery_carrier OWNER TO odoo;

--
-- Name: TABLE delivery_carrier; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE delivery_carrier IS 'Carrier';


--
-- Name: COLUMN delivery_carrier.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.create_date IS 'Created on';


--
-- Name: COLUMN delivery_carrier.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.name IS 'Delivery Method';


--
-- Name: COLUMN delivery_carrier.normal_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.normal_price IS 'Normal Price';


--
-- Name: COLUMN delivery_carrier.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.write_uid IS 'Last Updated by';


--
-- Name: COLUMN delivery_carrier.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.active IS 'Active';


--
-- Name: COLUMN delivery_carrier.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.amount IS 'Amount';


--
-- Name: COLUMN delivery_carrier.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.write_date IS 'Last Updated on';


--
-- Name: COLUMN delivery_carrier.free_if_more_than; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.free_if_more_than IS 'Free If Order Total Amount Is More Than';


--
-- Name: COLUMN delivery_carrier.use_detailed_pricelist; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.use_detailed_pricelist IS 'Advanced Pricing per Destination';


--
-- Name: COLUMN delivery_carrier.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.partner_id IS 'Transport Company';


--
-- Name: COLUMN delivery_carrier.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.create_uid IS 'Created by';


--
-- Name: COLUMN delivery_carrier.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_carrier.product_id IS 'Delivery Product';


--
-- Name: delivery_carrier_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE delivery_carrier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delivery_carrier_id_seq OWNER TO odoo;

--
-- Name: delivery_carrier_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE delivery_carrier_id_seq OWNED BY delivery_carrier.id;


--
-- Name: delivery_grid; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE delivery_grid (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer NOT NULL,
    carrier_id integer NOT NULL,
    write_uid integer,
    active boolean,
    write_date timestamp without time zone,
    zip_from character varying(12),
    zip_to character varying(12)
);


ALTER TABLE public.delivery_grid OWNER TO odoo;

--
-- Name: TABLE delivery_grid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE delivery_grid IS 'Delivery Grid';


--
-- Name: COLUMN delivery_grid.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.create_uid IS 'Created by';


--
-- Name: COLUMN delivery_grid.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.create_date IS 'Created on';


--
-- Name: COLUMN delivery_grid.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.name IS 'Grid Name';


--
-- Name: COLUMN delivery_grid.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.sequence IS 'Sequence';


--
-- Name: COLUMN delivery_grid.carrier_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.carrier_id IS 'Carrier';


--
-- Name: COLUMN delivery_grid.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.write_uid IS 'Last Updated by';


--
-- Name: COLUMN delivery_grid.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.active IS 'Active';


--
-- Name: COLUMN delivery_grid.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.write_date IS 'Last Updated on';


--
-- Name: COLUMN delivery_grid.zip_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.zip_from IS 'Start Zip';


--
-- Name: COLUMN delivery_grid.zip_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid.zip_to IS 'To Zip';


--
-- Name: delivery_grid_country_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE delivery_grid_country_rel (
    grid_id integer NOT NULL,
    country_id integer NOT NULL
);


ALTER TABLE public.delivery_grid_country_rel OWNER TO odoo;

--
-- Name: TABLE delivery_grid_country_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE delivery_grid_country_rel IS 'RELATION BETWEEN delivery_grid AND res_country';


--
-- Name: delivery_grid_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE delivery_grid_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delivery_grid_id_seq OWNER TO odoo;

--
-- Name: delivery_grid_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE delivery_grid_id_seq OWNED BY delivery_grid.id;


--
-- Name: delivery_grid_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE delivery_grid_line (
    id integer NOT NULL,
    create_uid integer,
    list_price numeric NOT NULL,
    name character varying NOT NULL,
    sequence integer NOT NULL,
    price_type character varying NOT NULL,
    max_value double precision NOT NULL,
    standard_price numeric NOT NULL,
    grid_id integer NOT NULL,
    variable_factor character varying NOT NULL,
    write_date timestamp without time zone,
    operator character varying NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    type character varying NOT NULL
);


ALTER TABLE public.delivery_grid_line OWNER TO odoo;

--
-- Name: TABLE delivery_grid_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE delivery_grid_line IS 'Delivery Grid Line';


--
-- Name: COLUMN delivery_grid_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.create_uid IS 'Created by';


--
-- Name: COLUMN delivery_grid_line.list_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.list_price IS 'Sale Price';


--
-- Name: COLUMN delivery_grid_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.name IS 'Name';


--
-- Name: COLUMN delivery_grid_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.sequence IS 'Sequence';


--
-- Name: COLUMN delivery_grid_line.price_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.price_type IS 'Price Type';


--
-- Name: COLUMN delivery_grid_line.max_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.max_value IS 'Maximum Value';


--
-- Name: COLUMN delivery_grid_line.standard_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.standard_price IS 'Cost Price';


--
-- Name: COLUMN delivery_grid_line.grid_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.grid_id IS 'Grid';


--
-- Name: COLUMN delivery_grid_line.variable_factor; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.variable_factor IS 'Variable Factor';


--
-- Name: COLUMN delivery_grid_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN delivery_grid_line.operator; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.operator IS 'Operator';


--
-- Name: COLUMN delivery_grid_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.create_date IS 'Created on';


--
-- Name: COLUMN delivery_grid_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN delivery_grid_line.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN delivery_grid_line.type IS 'Variable';


--
-- Name: delivery_grid_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE delivery_grid_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delivery_grid_line_id_seq OWNER TO odoo;

--
-- Name: delivery_grid_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE delivery_grid_line_id_seq OWNED BY delivery_grid_line.id;


--
-- Name: delivery_grid_state_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE delivery_grid_state_rel (
    grid_id integer NOT NULL,
    state_id integer NOT NULL
);


ALTER TABLE public.delivery_grid_state_rel OWNER TO odoo;

--
-- Name: TABLE delivery_grid_state_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE delivery_grid_state_rel IS 'RELATION BETWEEN delivery_grid AND res_country_state';


--
-- Name: email_template; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE email_template (
    id integer NOT NULL,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    auto_delete boolean,
    mail_server_id integer,
    write_uid integer,
    partner_to character varying,
    ref_ir_act_window integer,
    subject character varying,
    create_uid integer,
    report_template integer,
    ref_ir_value integer,
    user_signature boolean,
    null_value character varying,
    email_cc character varying,
    model_id integer,
    sub_model_object_field integer,
    body_html text,
    email_to character varying,
    sub_object integer,
    copyvalue character varying,
    lang character varying,
    name character varying,
    model_object_field integer,
    report_name character varying,
    use_default_to boolean,
    reply_to character varying,
    model character varying,
    email_from character varying
);


ALTER TABLE public.email_template OWNER TO odoo;

--
-- Name: TABLE email_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE email_template IS 'Email Templates';


--
-- Name: COLUMN email_template.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.create_date IS 'Created on';


--
-- Name: COLUMN email_template.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.write_date IS 'Last Updated on';


--
-- Name: COLUMN email_template.auto_delete; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.auto_delete IS 'Auto Delete';


--
-- Name: COLUMN email_template.mail_server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.mail_server_id IS 'Outgoing Mail Server';


--
-- Name: COLUMN email_template.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.write_uid IS 'Last Updated by';


--
-- Name: COLUMN email_template.partner_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.partner_to IS 'To (Partners)';


--
-- Name: COLUMN email_template.ref_ir_act_window; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.ref_ir_act_window IS 'Sidebar action';


--
-- Name: COLUMN email_template.subject; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.subject IS 'Subject';


--
-- Name: COLUMN email_template.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.create_uid IS 'Created by';


--
-- Name: COLUMN email_template.report_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.report_template IS 'Optional report to print and attach';


--
-- Name: COLUMN email_template.ref_ir_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.ref_ir_value IS 'Sidebar Button';


--
-- Name: COLUMN email_template.user_signature; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.user_signature IS 'Add Signature';


--
-- Name: COLUMN email_template.null_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.null_value IS 'Default Value';


--
-- Name: COLUMN email_template.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.email_cc IS 'Cc';


--
-- Name: COLUMN email_template.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.model_id IS 'Applies to';


--
-- Name: COLUMN email_template.sub_model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.sub_model_object_field IS 'Sub-field';


--
-- Name: COLUMN email_template.body_html; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.body_html IS 'Body';


--
-- Name: COLUMN email_template.email_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.email_to IS 'To (Emails)';


--
-- Name: COLUMN email_template.sub_object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.sub_object IS 'Sub-model';


--
-- Name: COLUMN email_template.copyvalue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.copyvalue IS 'Placeholder Expression';


--
-- Name: COLUMN email_template.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.lang IS 'Language';


--
-- Name: COLUMN email_template.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.name IS 'Name';


--
-- Name: COLUMN email_template.model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.model_object_field IS 'Field';


--
-- Name: COLUMN email_template.report_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.report_name IS 'Report Filename';


--
-- Name: COLUMN email_template.use_default_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.use_default_to IS 'Default recipients';


--
-- Name: COLUMN email_template.reply_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.reply_to IS 'Reply-To';


--
-- Name: COLUMN email_template.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.model IS 'Related Document Model';


--
-- Name: COLUMN email_template.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template.email_from IS 'From';


--
-- Name: email_template_attachment_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE email_template_attachment_rel (
    email_template_id integer NOT NULL,
    attachment_id integer NOT NULL
);


ALTER TABLE public.email_template_attachment_rel OWNER TO odoo;

--
-- Name: TABLE email_template_attachment_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE email_template_attachment_rel IS 'RELATION BETWEEN email_template AND ir_attachment';


--
-- Name: email_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE email_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.email_template_id_seq OWNER TO odoo;

--
-- Name: email_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE email_template_id_seq OWNED BY email_template.id;


--
-- Name: email_template_preview; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE email_template_preview (
    id integer NOT NULL,
    create_date timestamp without time zone,
    sub_object integer,
    auto_delete boolean,
    mail_server_id integer,
    write_uid integer,
    partner_to character varying,
    ref_ir_act_window integer,
    subject character varying,
    create_uid integer,
    report_template integer,
    ref_ir_value integer,
    user_signature boolean,
    null_value character varying,
    email_cc character varying,
    res_id character varying,
    model_id integer,
    sub_model_object_field integer,
    body_html text,
    email_to character varying,
    write_date timestamp without time zone,
    copyvalue character varying,
    lang character varying,
    name character varying,
    model_object_field integer,
    report_name character varying,
    use_default_to boolean,
    reply_to character varying,
    model character varying,
    email_from character varying
);


ALTER TABLE public.email_template_preview OWNER TO odoo;

--
-- Name: TABLE email_template_preview; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE email_template_preview IS 'Email Template Preview';


--
-- Name: COLUMN email_template_preview.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.create_date IS 'Created on';


--
-- Name: COLUMN email_template_preview.sub_object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.sub_object IS 'Sub-model';


--
-- Name: COLUMN email_template_preview.auto_delete; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.auto_delete IS 'Auto Delete';


--
-- Name: COLUMN email_template_preview.mail_server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.mail_server_id IS 'Outgoing Mail Server';


--
-- Name: COLUMN email_template_preview.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.write_uid IS 'Last Updated by';


--
-- Name: COLUMN email_template_preview.partner_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.partner_to IS 'To (Partners)';


--
-- Name: COLUMN email_template_preview.ref_ir_act_window; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.ref_ir_act_window IS 'Sidebar action';


--
-- Name: COLUMN email_template_preview.subject; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.subject IS 'Subject';


--
-- Name: COLUMN email_template_preview.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.create_uid IS 'Created by';


--
-- Name: COLUMN email_template_preview.report_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.report_template IS 'Optional report to print and attach';


--
-- Name: COLUMN email_template_preview.ref_ir_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.ref_ir_value IS 'Sidebar Button';


--
-- Name: COLUMN email_template_preview.user_signature; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.user_signature IS 'Add Signature';


--
-- Name: COLUMN email_template_preview.null_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.null_value IS 'Default Value';


--
-- Name: COLUMN email_template_preview.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.email_cc IS 'Cc';


--
-- Name: COLUMN email_template_preview.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.res_id IS 'Sample Document';


--
-- Name: COLUMN email_template_preview.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.model_id IS 'Applies to';


--
-- Name: COLUMN email_template_preview.sub_model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.sub_model_object_field IS 'Sub-field';


--
-- Name: COLUMN email_template_preview.body_html; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.body_html IS 'Body';


--
-- Name: COLUMN email_template_preview.email_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.email_to IS 'To (Emails)';


--
-- Name: COLUMN email_template_preview.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.write_date IS 'Last Updated on';


--
-- Name: COLUMN email_template_preview.copyvalue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.copyvalue IS 'Placeholder Expression';


--
-- Name: COLUMN email_template_preview.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.lang IS 'Language';


--
-- Name: COLUMN email_template_preview.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.name IS 'Name';


--
-- Name: COLUMN email_template_preview.model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.model_object_field IS 'Field';


--
-- Name: COLUMN email_template_preview.report_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.report_name IS 'Report Filename';


--
-- Name: COLUMN email_template_preview.use_default_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.use_default_to IS 'Default recipients';


--
-- Name: COLUMN email_template_preview.reply_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.reply_to IS 'Reply-To';


--
-- Name: COLUMN email_template_preview.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.model IS 'Related Document Model';


--
-- Name: COLUMN email_template_preview.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN email_template_preview.email_from IS 'From';


--
-- Name: email_template_preview_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE email_template_preview_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.email_template_preview_id_seq OWNER TO odoo;

--
-- Name: email_template_preview_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE email_template_preview_id_seq OWNED BY email_template_preview.id;


--
-- Name: email_template_preview_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE email_template_preview_res_partner_rel (
    email_template_preview_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.email_template_preview_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE email_template_preview_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE email_template_preview_res_partner_rel IS 'RELATION BETWEEN email_template_preview AND res_partner';


--
-- Name: employee_category_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE employee_category_rel (
    category_id integer NOT NULL,
    emp_id integer NOT NULL
);


ALTER TABLE public.employee_category_rel OWNER TO odoo;

--
-- Name: TABLE employee_category_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE employee_category_rel IS 'RELATION BETWEEN hr_employee_category AND hr_employee';


--
-- Name: export_wizard_ept; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE export_wizard_ept (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    export_version character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.export_wizard_ept OWNER TO odoo;

--
-- Name: TABLE export_wizard_ept; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE export_wizard_ept IS 'export.wizard.ept';


--
-- Name: COLUMN export_wizard_ept.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN export_wizard_ept.create_uid IS 'Created by';


--
-- Name: COLUMN export_wizard_ept.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN export_wizard_ept.create_date IS 'Created on';


--
-- Name: COLUMN export_wizard_ept.export_version; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN export_wizard_ept.export_version IS 'Export Version';


--
-- Name: COLUMN export_wizard_ept.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN export_wizard_ept.write_uid IS 'Last Updated by';


--
-- Name: COLUMN export_wizard_ept.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN export_wizard_ept.write_date IS 'Last Updated on';


--
-- Name: export_wizard_ept_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE export_wizard_ept_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.export_wizard_ept_id_seq OWNER TO odoo;

--
-- Name: export_wizard_ept_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE export_wizard_ept_id_seq OWNED BY export_wizard_ept.id;


--
-- Name: fetchmail_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE fetchmail_config_settings (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.fetchmail_config_settings OWNER TO odoo;

--
-- Name: TABLE fetchmail_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE fetchmail_config_settings IS 'fetchmail.config.settings';


--
-- Name: COLUMN fetchmail_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN fetchmail_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN fetchmail_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN fetchmail_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_config_settings.write_uid IS 'Last Updated by';


--
-- Name: fetchmail_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE fetchmail_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fetchmail_config_settings_id_seq OWNER TO odoo;

--
-- Name: fetchmail_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE fetchmail_config_settings_id_seq OWNED BY fetchmail_config_settings.id;


--
-- Name: fetchmail_server; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE fetchmail_server (
    id integer NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    active boolean,
    port integer,
    create_uid integer,
    configuration text,
    script character varying,
    object_id integer,
    priority integer,
    attach boolean,
    state character varying,
    type character varying NOT NULL,
    action_id integer,
    "user" character varying,
    write_date timestamp without time zone,
    date timestamp without time zone,
    password character varying,
    name character varying NOT NULL,
    is_ssl boolean,
    server character varying,
    original boolean
);


ALTER TABLE public.fetchmail_server OWNER TO odoo;

--
-- Name: TABLE fetchmail_server; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE fetchmail_server IS 'POP/IMAP Server';


--
-- Name: COLUMN fetchmail_server.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.create_date IS 'Created on';


--
-- Name: COLUMN fetchmail_server.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.write_uid IS 'Last Updated by';


--
-- Name: COLUMN fetchmail_server.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.active IS 'Active';


--
-- Name: COLUMN fetchmail_server.port; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.port IS 'Port';


--
-- Name: COLUMN fetchmail_server.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.create_uid IS 'Created by';


--
-- Name: COLUMN fetchmail_server.configuration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.configuration IS 'Configuration';


--
-- Name: COLUMN fetchmail_server.script; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.script IS 'Script';


--
-- Name: COLUMN fetchmail_server.object_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.object_id IS 'Create a New Record';


--
-- Name: COLUMN fetchmail_server.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.priority IS 'Server Priority';


--
-- Name: COLUMN fetchmail_server.attach; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.attach IS 'Keep Attachments';


--
-- Name: COLUMN fetchmail_server.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.state IS 'Status';


--
-- Name: COLUMN fetchmail_server.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.type IS 'Server Type';


--
-- Name: COLUMN fetchmail_server.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.action_id IS 'Server Action';


--
-- Name: COLUMN fetchmail_server."user"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server."user" IS 'Username';


--
-- Name: COLUMN fetchmail_server.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.write_date IS 'Last Updated on';


--
-- Name: COLUMN fetchmail_server.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.date IS 'Last Fetch Date';


--
-- Name: COLUMN fetchmail_server.password; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.password IS 'Password';


--
-- Name: COLUMN fetchmail_server.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.name IS 'Name';


--
-- Name: COLUMN fetchmail_server.is_ssl; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.is_ssl IS 'SSL/TLS';


--
-- Name: COLUMN fetchmail_server.server; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.server IS 'Server Name';


--
-- Name: COLUMN fetchmail_server.original; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN fetchmail_server.original IS 'Keep Original';


--
-- Name: fetchmail_server_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE fetchmail_server_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fetchmail_server_id_seq OWNER TO odoo;

--
-- Name: fetchmail_server_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE fetchmail_server_id_seq OWNED BY fetchmail_server.id;


--
-- Name: hr_action_reason; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_action_reason (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    action_type character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.hr_action_reason OWNER TO odoo;

--
-- Name: TABLE hr_action_reason; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_action_reason IS 'Action Reason';


--
-- Name: COLUMN hr_action_reason.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.create_uid IS 'Created by';


--
-- Name: COLUMN hr_action_reason.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.create_date IS 'Created on';


--
-- Name: COLUMN hr_action_reason.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.name IS 'Reason';


--
-- Name: COLUMN hr_action_reason.action_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.action_type IS 'Action Type';


--
-- Name: COLUMN hr_action_reason.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_action_reason.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_action_reason.write_date IS 'Last Updated on';


--
-- Name: hr_action_reason_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_action_reason_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_action_reason_id_seq OWNER TO odoo;

--
-- Name: hr_action_reason_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_action_reason_id_seq OWNED BY hr_action_reason.id;


--
-- Name: hr_analytic_timesheet; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_analytic_timesheet (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    line_id integer NOT NULL,
    write_date timestamp without time zone,
    partner_id integer
);


ALTER TABLE public.hr_analytic_timesheet OWNER TO odoo;

--
-- Name: TABLE hr_analytic_timesheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_analytic_timesheet IS 'Timesheet Line';


--
-- Name: COLUMN hr_analytic_timesheet.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.create_uid IS 'Created by';


--
-- Name: COLUMN hr_analytic_timesheet.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.create_date IS 'Created on';


--
-- Name: COLUMN hr_analytic_timesheet.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_analytic_timesheet.line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.line_id IS 'Analytic Line';


--
-- Name: COLUMN hr_analytic_timesheet.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_analytic_timesheet.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_analytic_timesheet.partner_id IS 'Partner';


--
-- Name: hr_analytic_timesheet_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_analytic_timesheet_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_analytic_timesheet_id_seq OWNER TO odoo;

--
-- Name: hr_analytic_timesheet_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_analytic_timesheet_id_seq OWNED BY hr_analytic_timesheet.id;


--
-- Name: hr_attendance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_attendance (
    id integer NOT NULL,
    create_uid integer,
    employee_id integer NOT NULL,
    create_date timestamp without time zone,
    name timestamp without time zone NOT NULL,
    write_uid integer,
    action_desc integer,
    write_date timestamp without time zone,
    action character varying NOT NULL,
    worked_hours numeric
);


ALTER TABLE public.hr_attendance OWNER TO odoo;

--
-- Name: TABLE hr_attendance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_attendance IS 'Attendance';


--
-- Name: COLUMN hr_attendance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.create_uid IS 'Created by';


--
-- Name: COLUMN hr_attendance.employee_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.employee_id IS 'Employee';


--
-- Name: COLUMN hr_attendance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.create_date IS 'Created on';


--
-- Name: COLUMN hr_attendance.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.name IS 'Date';


--
-- Name: COLUMN hr_attendance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_attendance.action_desc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.action_desc IS 'Action Reason';


--
-- Name: COLUMN hr_attendance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_attendance.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.action IS 'Action';


--
-- Name: COLUMN hr_attendance.worked_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance.worked_hours IS 'Worked Hours';


--
-- Name: hr_attendance_error; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_attendance_error (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    end_date date NOT NULL,
    max_delay integer NOT NULL,
    write_date timestamp without time zone,
    init_date date NOT NULL,
    write_uid integer
);


ALTER TABLE public.hr_attendance_error OWNER TO odoo;

--
-- Name: TABLE hr_attendance_error; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_attendance_error IS 'Print Error Attendance Report';


--
-- Name: COLUMN hr_attendance_error.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.create_uid IS 'Created by';


--
-- Name: COLUMN hr_attendance_error.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.create_date IS 'Created on';


--
-- Name: COLUMN hr_attendance_error.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.end_date IS 'Ending Date';


--
-- Name: COLUMN hr_attendance_error.max_delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.max_delay IS 'Max. Delay (Min)';


--
-- Name: COLUMN hr_attendance_error.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_attendance_error.init_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.init_date IS 'Starting Date';


--
-- Name: COLUMN hr_attendance_error.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_attendance_error.write_uid IS 'Last Updated by';


--
-- Name: hr_attendance_error_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_attendance_error_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_attendance_error_id_seq OWNER TO odoo;

--
-- Name: hr_attendance_error_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_attendance_error_id_seq OWNED BY hr_attendance_error.id;


--
-- Name: hr_attendance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_attendance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_attendance_id_seq OWNER TO odoo;

--
-- Name: hr_attendance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_attendance_id_seq OWNED BY hr_attendance.id;


--
-- Name: hr_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_config_settings (
    id integer NOT NULL,
    create_uid integer,
    module_hr_contract boolean,
    module_hr_holidays boolean,
    module_hr_timesheet boolean,
    module_hr_payroll boolean,
    module_hr_timesheet_sheet boolean,
    module_hr_attendance boolean,
    write_uid integer,
    module_hr_evaluation boolean,
    module_hr_expense boolean,
    write_date timestamp without time zone,
    module_hr_gamification boolean,
    create_date timestamp without time zone,
    module_account_analytic_analysis boolean,
    module_hr_recruitment boolean,
    group_hr_attendance boolean
);


ALTER TABLE public.hr_config_settings OWNER TO odoo;

--
-- Name: TABLE hr_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_config_settings IS 'hr.config.settings';


--
-- Name: COLUMN hr_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN hr_config_settings.module_hr_contract; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_contract IS 'Record contracts per employee';


--
-- Name: COLUMN hr_config_settings.module_hr_holidays; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_holidays IS 'Manage holidays, leaves and allocation requests';


--
-- Name: COLUMN hr_config_settings.module_hr_timesheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_timesheet IS 'Manage timesheets';


--
-- Name: COLUMN hr_config_settings.module_hr_payroll; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_payroll IS 'Manage payroll';


--
-- Name: COLUMN hr_config_settings.module_hr_timesheet_sheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_timesheet_sheet IS 'Allow timesheets validation by managers';


--
-- Name: COLUMN hr_config_settings.module_hr_attendance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_attendance IS 'Install attendances feature';


--
-- Name: COLUMN hr_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_config_settings.module_hr_evaluation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_evaluation IS 'Organize employees periodic evaluation';


--
-- Name: COLUMN hr_config_settings.module_hr_expense; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_expense IS 'Manage employees expenses';


--
-- Name: COLUMN hr_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_config_settings.module_hr_gamification; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_gamification IS 'Drive engagement with challenges and badges';


--
-- Name: COLUMN hr_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN hr_config_settings.module_account_analytic_analysis; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_account_analytic_analysis IS 'Allow invoicing based on timesheets (the sale application will be installed)';


--
-- Name: COLUMN hr_config_settings.module_hr_recruitment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.module_hr_recruitment IS 'Manage the recruitment process';


--
-- Name: COLUMN hr_config_settings.group_hr_attendance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_config_settings.group_hr_attendance IS 'Track attendances for all employees';


--
-- Name: hr_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_config_settings_id_seq OWNER TO odoo;

--
-- Name: hr_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_config_settings_id_seq OWNED BY hr_config_settings.id;


--
-- Name: hr_department; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_department (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    note text,
    parent_id integer,
    manager_id integer,
    write_date timestamp without time zone
);


ALTER TABLE public.hr_department OWNER TO odoo;

--
-- Name: TABLE hr_department; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_department IS 'hr.department';


--
-- Name: COLUMN hr_department.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.create_uid IS 'Created by';


--
-- Name: COLUMN hr_department.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.create_date IS 'Created on';


--
-- Name: COLUMN hr_department.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.name IS 'Department Name';


--
-- Name: COLUMN hr_department.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.company_id IS 'Company';


--
-- Name: COLUMN hr_department.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_department.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.note IS 'Note';


--
-- Name: COLUMN hr_department.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.parent_id IS 'Parent Department';


--
-- Name: COLUMN hr_department.manager_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.manager_id IS 'Manager';


--
-- Name: COLUMN hr_department.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_department.write_date IS 'Last Updated on';


--
-- Name: hr_department_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_department_id_seq OWNER TO odoo;

--
-- Name: hr_department_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_department_id_seq OWNED BY hr_department.id;


--
-- Name: hr_employee; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_employee (
    id integer NOT NULL,
    address_id integer,
    create_date timestamp without time zone,
    coach_id integer,
    resource_id integer NOT NULL,
    color integer,
    message_last_post timestamp without time zone,
    image bytea,
    marital character varying,
    identification_id character varying,
    bank_account_id integer,
    job_id integer,
    work_phone character varying,
    country_id integer,
    parent_id integer,
    department_id integer,
    otherid character varying,
    mobile_phone character varying,
    create_uid integer,
    birthday date,
    write_date timestamp without time zone,
    sinid character varying,
    write_uid integer,
    work_email character varying(240),
    work_location character varying,
    image_medium bytea,
    gender character varying,
    ssnid character varying,
    image_small bytea,
    address_home_id integer,
    passport_id character varying,
    name_related character varying,
    notes text,
    uom_id integer,
    journal_id integer,
    product_id integer
);


ALTER TABLE public.hr_employee OWNER TO odoo;

--
-- Name: TABLE hr_employee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_employee IS 'Employee';


--
-- Name: COLUMN hr_employee.address_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.address_id IS 'Working Address';


--
-- Name: COLUMN hr_employee.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.create_date IS 'Created on';


--
-- Name: COLUMN hr_employee.coach_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.coach_id IS 'Coach';


--
-- Name: COLUMN hr_employee.resource_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.resource_id IS 'Resource';


--
-- Name: COLUMN hr_employee.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.color IS 'Color Index';


--
-- Name: COLUMN hr_employee.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN hr_employee.image; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.image IS 'Photo';


--
-- Name: COLUMN hr_employee.marital; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.marital IS 'Marital Status';


--
-- Name: COLUMN hr_employee.identification_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.identification_id IS 'Identification No';


--
-- Name: COLUMN hr_employee.bank_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.bank_account_id IS 'Bank Account Number';


--
-- Name: COLUMN hr_employee.job_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.job_id IS 'Job Title';


--
-- Name: COLUMN hr_employee.work_phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.work_phone IS 'Work Phone';


--
-- Name: COLUMN hr_employee.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.country_id IS 'Nationality';


--
-- Name: COLUMN hr_employee.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.parent_id IS 'Manager';


--
-- Name: COLUMN hr_employee.department_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.department_id IS 'Department';


--
-- Name: COLUMN hr_employee.otherid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.otherid IS 'Other Id';


--
-- Name: COLUMN hr_employee.mobile_phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.mobile_phone IS 'Work Mobile';


--
-- Name: COLUMN hr_employee.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.create_uid IS 'Created by';


--
-- Name: COLUMN hr_employee.birthday; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.birthday IS 'Date of Birth';


--
-- Name: COLUMN hr_employee.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_employee.sinid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.sinid IS 'SIN No';


--
-- Name: COLUMN hr_employee.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_employee.work_email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.work_email IS 'Work Email';


--
-- Name: COLUMN hr_employee.work_location; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.work_location IS 'Office Location';


--
-- Name: COLUMN hr_employee.image_medium; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.image_medium IS 'Medium-sized photo';


--
-- Name: COLUMN hr_employee.gender; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.gender IS 'Gender';


--
-- Name: COLUMN hr_employee.ssnid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.ssnid IS 'SSN No';


--
-- Name: COLUMN hr_employee.image_small; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.image_small IS 'Small-sized photo';


--
-- Name: COLUMN hr_employee.address_home_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.address_home_id IS 'Home Address';


--
-- Name: COLUMN hr_employee.passport_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.passport_id IS 'Passport No';


--
-- Name: COLUMN hr_employee.name_related; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.name_related IS 'Name';


--
-- Name: COLUMN hr_employee.notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.notes IS 'Notes';


--
-- Name: COLUMN hr_employee.uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.uom_id IS 'Unit of Measure';


--
-- Name: COLUMN hr_employee.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.journal_id IS 'Analytic Journal';


--
-- Name: COLUMN hr_employee.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee.product_id IS 'Product';


--
-- Name: hr_employee_category; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_employee_category (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone
);


ALTER TABLE public.hr_employee_category OWNER TO odoo;

--
-- Name: TABLE hr_employee_category; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_employee_category IS 'Employee Category';


--
-- Name: COLUMN hr_employee_category.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.create_uid IS 'Created by';


--
-- Name: COLUMN hr_employee_category.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.create_date IS 'Created on';


--
-- Name: COLUMN hr_employee_category.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.name IS 'Employee Tag';


--
-- Name: COLUMN hr_employee_category.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_employee_category.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.parent_id IS 'Parent Employee Tag';


--
-- Name: COLUMN hr_employee_category.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_employee_category.write_date IS 'Last Updated on';


--
-- Name: hr_employee_category_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_employee_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_employee_category_id_seq OWNER TO odoo;

--
-- Name: hr_employee_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_employee_category_id_seq OWNED BY hr_employee_category.id;


--
-- Name: hr_employee_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_employee_id_seq OWNER TO odoo;

--
-- Name: hr_employee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_employee_id_seq OWNED BY hr_employee.id;


--
-- Name: hr_job; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_job (
    id integer NOT NULL,
    create_date timestamp without time zone,
    write_uid integer,
    create_uid integer,
    requirements text,
    message_last_post timestamp without time zone,
    company_id integer,
    state character varying NOT NULL,
    expected_employees integer,
    department_id integer,
    description text,
    write_date timestamp without time zone,
    name character varying NOT NULL,
    no_of_recruitment integer,
    no_of_hired_employee integer,
    no_of_employee integer,
    CONSTRAINT hr_job_hired_employee_check CHECK ((no_of_hired_employee <= no_of_recruitment))
);


ALTER TABLE public.hr_job OWNER TO odoo;

--
-- Name: TABLE hr_job; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_job IS 'Job Position';


--
-- Name: COLUMN hr_job.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.create_date IS 'Created on';


--
-- Name: COLUMN hr_job.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_job.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.create_uid IS 'Created by';


--
-- Name: COLUMN hr_job.requirements; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.requirements IS 'Requirements';


--
-- Name: COLUMN hr_job.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN hr_job.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.company_id IS 'Company';


--
-- Name: COLUMN hr_job.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.state IS 'Status';


--
-- Name: COLUMN hr_job.expected_employees; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.expected_employees IS 'Total Forecasted Employees';


--
-- Name: COLUMN hr_job.department_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.department_id IS 'Department';


--
-- Name: COLUMN hr_job.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.description IS 'Job Description';


--
-- Name: COLUMN hr_job.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.write_date IS 'Update Date';


--
-- Name: COLUMN hr_job.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.name IS 'Job Name';


--
-- Name: COLUMN hr_job.no_of_recruitment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.no_of_recruitment IS 'Expected New Employees';


--
-- Name: COLUMN hr_job.no_of_hired_employee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.no_of_hired_employee IS 'Hired Employees';


--
-- Name: COLUMN hr_job.no_of_employee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_job.no_of_employee IS 'Current Number of Employees';


--
-- Name: hr_job_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_job_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_job_id_seq OWNER TO odoo;

--
-- Name: hr_job_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_job_id_seq OWNED BY hr_job.id;


--
-- Name: hr_sign_in_project; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_sign_in_project (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    write_uid integer,
    date timestamp without time zone,
    server_date timestamp without time zone,
    write_date timestamp without time zone,
    emp_id integer
);


ALTER TABLE public.hr_sign_in_project OWNER TO odoo;

--
-- Name: TABLE hr_sign_in_project; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_sign_in_project IS 'Sign In By Project';


--
-- Name: COLUMN hr_sign_in_project.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.create_uid IS 'Created by';


--
-- Name: COLUMN hr_sign_in_project.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.create_date IS 'Created on';


--
-- Name: COLUMN hr_sign_in_project.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.name IS 'Employee''s Name';


--
-- Name: COLUMN hr_sign_in_project.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_sign_in_project.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.date IS 'Starting Date';


--
-- Name: COLUMN hr_sign_in_project.server_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.server_date IS 'Current Date';


--
-- Name: COLUMN hr_sign_in_project.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_sign_in_project.emp_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_in_project.emp_id IS 'Employee ID';


--
-- Name: hr_sign_in_project_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_sign_in_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_sign_in_project_id_seq OWNER TO odoo;

--
-- Name: hr_sign_in_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_sign_in_project_id_seq OWNED BY hr_sign_in_project.id;


--
-- Name: hr_sign_out_project; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_sign_out_project (
    id integer NOT NULL,
    info character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    account_id integer,
    date_start timestamp without time zone,
    write_uid integer,
    date timestamp without time zone,
    server_date timestamp without time zone NOT NULL,
    write_date timestamp without time zone,
    emp_id integer,
    analytic_amount double precision,
    name character varying NOT NULL
);


ALTER TABLE public.hr_sign_out_project OWNER TO odoo;

--
-- Name: TABLE hr_sign_out_project; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_sign_out_project IS 'Sign Out By Project';


--
-- Name: COLUMN hr_sign_out_project.info; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.info IS 'Work Description';


--
-- Name: COLUMN hr_sign_out_project.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.create_uid IS 'Created by';


--
-- Name: COLUMN hr_sign_out_project.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.create_date IS 'Created on';


--
-- Name: COLUMN hr_sign_out_project.account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.account_id IS 'Project / Analytic Account';


--
-- Name: COLUMN hr_sign_out_project.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.date_start IS 'Starting Date';


--
-- Name: COLUMN hr_sign_out_project.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_sign_out_project.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.date IS 'Closing Date';


--
-- Name: COLUMN hr_sign_out_project.server_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.server_date IS 'Current Date';


--
-- Name: COLUMN hr_sign_out_project.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_sign_out_project.emp_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.emp_id IS 'Employee ID';


--
-- Name: COLUMN hr_sign_out_project.analytic_amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.analytic_amount IS 'Minimum Analytic Amount';


--
-- Name: COLUMN hr_sign_out_project.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_sign_out_project.name IS 'Employee''s Name';


--
-- Name: hr_sign_out_project_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_sign_out_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_sign_out_project_id_seq OWNER TO odoo;

--
-- Name: hr_sign_out_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_sign_out_project_id_seq OWNED BY hr_sign_out_project.id;


--
-- Name: hr_timesheet_analytic_profit; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_timesheet_analytic_profit (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    date_from date NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    date_to date NOT NULL
);


ALTER TABLE public.hr_timesheet_analytic_profit OWNER TO odoo;

--
-- Name: TABLE hr_timesheet_analytic_profit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_timesheet_analytic_profit IS 'Print Timesheet Profit';


--
-- Name: COLUMN hr_timesheet_analytic_profit.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.create_uid IS 'Created by';


--
-- Name: COLUMN hr_timesheet_analytic_profit.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.create_date IS 'Created on';


--
-- Name: COLUMN hr_timesheet_analytic_profit.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.date_from IS 'From';


--
-- Name: COLUMN hr_timesheet_analytic_profit.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_timesheet_analytic_profit.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_timesheet_analytic_profit.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_analytic_profit.date_to IS 'To';


--
-- Name: hr_timesheet_analytic_profit_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_timesheet_analytic_profit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_timesheet_analytic_profit_id_seq OWNER TO odoo;

--
-- Name: hr_timesheet_analytic_profit_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_timesheet_analytic_profit_id_seq OWNED BY hr_timesheet_analytic_profit.id;


--
-- Name: hr_timesheet_invoice_create; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_timesheet_invoice_create (
    id integer NOT NULL,
    create_uid integer,
    product integer,
    create_date timestamp without time zone,
    name boolean,
    price boolean,
    write_uid integer,
    write_date timestamp without time zone,
    "time" boolean,
    date boolean
);


ALTER TABLE public.hr_timesheet_invoice_create OWNER TO odoo;

--
-- Name: TABLE hr_timesheet_invoice_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_timesheet_invoice_create IS 'Create invoice from timesheet';


--
-- Name: COLUMN hr_timesheet_invoice_create.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.create_uid IS 'Created by';


--
-- Name: COLUMN hr_timesheet_invoice_create.product; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.product IS 'Force Product';


--
-- Name: COLUMN hr_timesheet_invoice_create.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.create_date IS 'Created on';


--
-- Name: COLUMN hr_timesheet_invoice_create.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.name IS 'Description';


--
-- Name: COLUMN hr_timesheet_invoice_create.price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.price IS 'Cost';


--
-- Name: COLUMN hr_timesheet_invoice_create.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_timesheet_invoice_create.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_timesheet_invoice_create."time"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create."time" IS 'Time spent';


--
-- Name: COLUMN hr_timesheet_invoice_create.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create.date IS 'Date';


--
-- Name: hr_timesheet_invoice_create_final; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_timesheet_invoice_create_final (
    id integer NOT NULL,
    create_uid integer,
    product integer,
    create_date timestamp without time zone,
    name boolean,
    price boolean,
    write_uid integer,
    write_date timestamp without time zone,
    "time" boolean,
    date boolean
);


ALTER TABLE public.hr_timesheet_invoice_create_final OWNER TO odoo;

--
-- Name: TABLE hr_timesheet_invoice_create_final; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_timesheet_invoice_create_final IS 'Create invoice from timesheet final';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.create_uid IS 'Created by';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.product; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.product IS 'Product';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.create_date IS 'Created on';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.name IS 'Log of Activity';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.price IS 'Cost';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_timesheet_invoice_create_final."time"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final."time" IS 'Time Spent';


--
-- Name: COLUMN hr_timesheet_invoice_create_final.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_create_final.date IS 'Date';


--
-- Name: hr_timesheet_invoice_create_final_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_timesheet_invoice_create_final_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_timesheet_invoice_create_final_id_seq OWNER TO odoo;

--
-- Name: hr_timesheet_invoice_create_final_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_timesheet_invoice_create_final_id_seq OWNED BY hr_timesheet_invoice_create_final.id;


--
-- Name: hr_timesheet_invoice_create_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_timesheet_invoice_create_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_timesheet_invoice_create_id_seq OWNER TO odoo;

--
-- Name: hr_timesheet_invoice_create_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_timesheet_invoice_create_id_seq OWNED BY hr_timesheet_invoice_create.id;


--
-- Name: hr_timesheet_invoice_factor; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE hr_timesheet_invoice_factor (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    factor double precision NOT NULL,
    customer_name character varying
);


ALTER TABLE public.hr_timesheet_invoice_factor OWNER TO odoo;

--
-- Name: TABLE hr_timesheet_invoice_factor; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE hr_timesheet_invoice_factor IS 'Invoice Rate';


--
-- Name: COLUMN hr_timesheet_invoice_factor.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.create_uid IS 'Created by';


--
-- Name: COLUMN hr_timesheet_invoice_factor.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.create_date IS 'Created on';


--
-- Name: COLUMN hr_timesheet_invoice_factor.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.name IS 'Internal Name';


--
-- Name: COLUMN hr_timesheet_invoice_factor.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.write_uid IS 'Last Updated by';


--
-- Name: COLUMN hr_timesheet_invoice_factor.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.write_date IS 'Last Updated on';


--
-- Name: COLUMN hr_timesheet_invoice_factor.factor; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.factor IS 'Discount (%)';


--
-- Name: COLUMN hr_timesheet_invoice_factor.customer_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN hr_timesheet_invoice_factor.customer_name IS 'Name';


--
-- Name: hr_timesheet_invoice_factor_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE hr_timesheet_invoice_factor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hr_timesheet_invoice_factor_id_seq OWNER TO odoo;

--
-- Name: hr_timesheet_invoice_factor_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE hr_timesheet_invoice_factor_id_seq OWNED BY hr_timesheet_invoice_factor.id;


--
-- Name: hr_timesheet_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW hr_timesheet_report AS
 SELECT min(hat.id) AS id,
    aal.date,
    sum(aal.amount) AS cost,
    sum(aal.unit_amount) AS quantity,
    aal.account_id,
    aal.journal_id,
    aal.product_id,
    aal.general_account_id,
    aal.user_id,
    aal.company_id,
    aal.currency_id
   FROM (account_analytic_line aal
     JOIN hr_analytic_timesheet hat ON ((hat.line_id = aal.id)))
  GROUP BY aal.date, aal.account_id, aal.product_id, aal.general_account_id, aal.journal_id, aal.user_id, aal.company_id, aal.currency_id;


ALTER TABLE public.hr_timesheet_report OWNER TO odoo;

--
-- Name: im_chat_message; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE im_chat_message (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone NOT NULL,
    write_uid integer,
    to_id integer NOT NULL,
    write_date timestamp without time zone,
    message character varying,
    type character varying,
    from_id integer
);


ALTER TABLE public.im_chat_message OWNER TO odoo;

--
-- Name: TABLE im_chat_message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE im_chat_message IS 'im_chat.message';


--
-- Name: COLUMN im_chat_message.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.create_uid IS 'Created by';


--
-- Name: COLUMN im_chat_message.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.create_date IS 'Create Date';


--
-- Name: COLUMN im_chat_message.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.write_uid IS 'Last Updated by';


--
-- Name: COLUMN im_chat_message.to_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.to_id IS 'Session To';


--
-- Name: COLUMN im_chat_message.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.write_date IS 'Last Updated on';


--
-- Name: COLUMN im_chat_message.message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.message IS 'Message';


--
-- Name: COLUMN im_chat_message.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.type IS 'Type';


--
-- Name: COLUMN im_chat_message.from_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_message.from_id IS 'Author';


--
-- Name: im_chat_message_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE im_chat_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.im_chat_message_id_seq OWNER TO odoo;

--
-- Name: im_chat_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE im_chat_message_id_seq OWNED BY im_chat_message.id;


--
-- Name: im_chat_presence; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE im_chat_presence (
    id integer NOT NULL,
    status character varying,
    create_uid integer,
    create_date timestamp without time zone,
    last_presence timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    last_poll timestamp without time zone,
    user_id integer NOT NULL
);


ALTER TABLE public.im_chat_presence OWNER TO odoo;

--
-- Name: TABLE im_chat_presence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE im_chat_presence IS 'im_chat.presence';


--
-- Name: COLUMN im_chat_presence.status; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.status IS 'IM Status';


--
-- Name: COLUMN im_chat_presence.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.create_uid IS 'Created by';


--
-- Name: COLUMN im_chat_presence.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.create_date IS 'Created on';


--
-- Name: COLUMN im_chat_presence.last_presence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.last_presence IS 'Last Presence';


--
-- Name: COLUMN im_chat_presence.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.write_uid IS 'Last Updated by';


--
-- Name: COLUMN im_chat_presence.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.write_date IS 'Last Updated on';


--
-- Name: COLUMN im_chat_presence.last_poll; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.last_poll IS 'Last Poll';


--
-- Name: COLUMN im_chat_presence.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_presence.user_id IS 'Users';


--
-- Name: im_chat_presence_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE im_chat_presence_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.im_chat_presence_id_seq OWNER TO odoo;

--
-- Name: im_chat_presence_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE im_chat_presence_id_seq OWNED BY im_chat_presence.id;


--
-- Name: im_chat_session; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE im_chat_session (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    uuid character varying(50),
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.im_chat_session OWNER TO odoo;

--
-- Name: TABLE im_chat_session; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE im_chat_session IS 'im_chat.session';


--
-- Name: COLUMN im_chat_session.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session.create_uid IS 'Created by';


--
-- Name: COLUMN im_chat_session.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session.create_date IS 'Created on';


--
-- Name: COLUMN im_chat_session.uuid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session.uuid IS 'UUID';


--
-- Name: COLUMN im_chat_session.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session.write_uid IS 'Last Updated by';


--
-- Name: COLUMN im_chat_session.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session.write_date IS 'Last Updated on';


--
-- Name: im_chat_session_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE im_chat_session_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.im_chat_session_id_seq OWNER TO odoo;

--
-- Name: im_chat_session_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE im_chat_session_id_seq OWNED BY im_chat_session.id;


--
-- Name: im_chat_session_res_users_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE im_chat_session_res_users_rel (
    id integer NOT NULL,
    create_uid integer,
    user_id integer NOT NULL,
    session_id integer NOT NULL,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    create_date timestamp without time zone
);


ALTER TABLE public.im_chat_session_res_users_rel OWNER TO odoo;

--
-- Name: TABLE im_chat_session_res_users_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE im_chat_session_res_users_rel IS 'im_chat.conversation_state';


--
-- Name: COLUMN im_chat_session_res_users_rel.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.create_uid IS 'Created by';


--
-- Name: COLUMN im_chat_session_res_users_rel.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.user_id IS 'Users';


--
-- Name: COLUMN im_chat_session_res_users_rel.session_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.session_id IS 'Session';


--
-- Name: COLUMN im_chat_session_res_users_rel.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.write_uid IS 'Last Updated by';


--
-- Name: COLUMN im_chat_session_res_users_rel.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.state IS 'unknown';


--
-- Name: COLUMN im_chat_session_res_users_rel.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.write_date IS 'Last Updated on';


--
-- Name: COLUMN im_chat_session_res_users_rel.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN im_chat_session_res_users_rel.create_date IS 'Created on';


--
-- Name: im_chat_session_res_users_rel_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE im_chat_session_res_users_rel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.im_chat_session_res_users_rel_id_seq OWNER TO odoo;

--
-- Name: im_chat_session_res_users_rel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE im_chat_session_res_users_rel_id_seq OWNED BY im_chat_session_res_users_rel.id;


--
-- Name: invoice_merge; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE invoice_merge (
    id integer NOT NULL,
    create_uid integer,
    keep_references boolean,
    create_date timestamp without time zone,
    write_uid integer,
    date_invoice date,
    write_date timestamp without time zone
);


ALTER TABLE public.invoice_merge OWNER TO odoo;

--
-- Name: TABLE invoice_merge; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE invoice_merge IS 'Merge Partner Invoice';


--
-- Name: COLUMN invoice_merge.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.create_uid IS 'Created by';


--
-- Name: COLUMN invoice_merge.keep_references; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.keep_references IS 'Keep references from original invoices';


--
-- Name: COLUMN invoice_merge.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.create_date IS 'Created on';


--
-- Name: COLUMN invoice_merge.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.write_uid IS 'Last Updated by';


--
-- Name: COLUMN invoice_merge.date_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.date_invoice IS 'Invoice Date';


--
-- Name: COLUMN invoice_merge.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN invoice_merge.write_date IS 'Last Updated on';


--
-- Name: invoice_merge_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE invoice_merge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.invoice_merge_id_seq OWNER TO odoo;

--
-- Name: invoice_merge_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE invoice_merge_id_seq OWNED BY invoice_merge.id;


--
-- Name: ir_actions; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_actions (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    help text,
    write_uid integer,
    write_date timestamp without time zone,
    usage character varying,
    type character varying NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.ir_actions OWNER TO odoo;

--
-- Name: COLUMN ir_actions.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.create_uid IS 'Created by';


--
-- Name: COLUMN ir_actions.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.create_date IS 'Created on';


--
-- Name: COLUMN ir_actions.help; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.help IS 'Action description';


--
-- Name: COLUMN ir_actions.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_actions.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_actions.usage; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.usage IS 'Action Usage';


--
-- Name: COLUMN ir_actions.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.type IS 'Action Type';


--
-- Name: COLUMN ir_actions.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions.name IS 'Name';


--
-- Name: ir_act_client; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_client (
    res_model character varying,
    params_store bytea,
    tag character varying NOT NULL,
    context character varying NOT NULL
)
INHERITS (ir_actions);


ALTER TABLE public.ir_act_client OWNER TO odoo;

--
-- Name: COLUMN ir_act_client.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_client.res_model IS 'Destination Model';


--
-- Name: COLUMN ir_act_client.params_store; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_client.params_store IS 'Params storage';


--
-- Name: COLUMN ir_act_client.tag; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_client.tag IS 'Client action tag';


--
-- Name: COLUMN ir_act_client.context; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_client.context IS 'Context Value';


--
-- Name: ir_act_report_xml; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_report_xml (
    parser character varying,
    header boolean,
    report_type character varying NOT NULL,
    attachment character varying,
    report_sxw_content_data bytea,
    report_xml character varying,
    report_rml_content_data bytea,
    auto boolean,
    report_file character varying,
    multi boolean,
    report_xsl character varying,
    report_rml character varying,
    report_name character varying NOT NULL,
    attachment_use boolean,
    model character varying NOT NULL,
    paperformat_id integer,
    download_filename character varying
)
INHERITS (ir_actions);


ALTER TABLE public.ir_act_report_xml OWNER TO odoo;

--
-- Name: COLUMN ir_act_report_xml.parser; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.parser IS 'Parser Class';


--
-- Name: COLUMN ir_act_report_xml.header; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.header IS 'Add RML Header';


--
-- Name: COLUMN ir_act_report_xml.report_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_type IS 'Report Type';


--
-- Name: COLUMN ir_act_report_xml.attachment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.attachment IS 'Save as Attachment Prefix';


--
-- Name: COLUMN ir_act_report_xml.report_sxw_content_data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_sxw_content_data IS 'SXW Content';


--
-- Name: COLUMN ir_act_report_xml.report_xml; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_xml IS 'XML Path';


--
-- Name: COLUMN ir_act_report_xml.report_rml_content_data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_rml_content_data IS 'RML Content';


--
-- Name: COLUMN ir_act_report_xml.auto; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.auto IS 'Custom Python Parser';


--
-- Name: COLUMN ir_act_report_xml.report_file; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_file IS 'Report File';


--
-- Name: COLUMN ir_act_report_xml.multi; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.multi IS 'On Multiple Doc.';


--
-- Name: COLUMN ir_act_report_xml.report_xsl; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_xsl IS 'XSL Path';


--
-- Name: COLUMN ir_act_report_xml.report_rml; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_rml IS 'Main Report File Path/controller';


--
-- Name: COLUMN ir_act_report_xml.report_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.report_name IS 'Template Name';


--
-- Name: COLUMN ir_act_report_xml.attachment_use; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.attachment_use IS 'Reload from Attachment';


--
-- Name: COLUMN ir_act_report_xml.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.model IS 'Model';


--
-- Name: COLUMN ir_act_report_xml.paperformat_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.paperformat_id IS 'Paper format';


--
-- Name: COLUMN ir_act_report_xml.download_filename; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_report_xml.download_filename IS 'Download filename';


--
-- Name: ir_act_server; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_server (
    code text,
    sequence integer,
    crud_model_id integer,
    condition character varying,
    ref_object character varying(128),
    id_object character varying(128),
    crud_model_name character varying,
    use_relational_model character varying NOT NULL,
    use_create character varying NOT NULL,
    wkf_field_id integer,
    wkf_model_id integer,
    state character varying NOT NULL,
    id_value character varying,
    action_id integer,
    model_id integer NOT NULL,
    sub_model_object_field integer,
    link_new_record boolean,
    wkf_transition_id integer,
    sub_object integer,
    use_write character varying NOT NULL,
    wkf_model_name character varying,
    copyvalue character varying,
    write_expression character varying,
    menu_ir_values_id integer,
    model_object_field integer,
    link_field_id integer,
    template_id integer
)
INHERITS (ir_actions);


ALTER TABLE public.ir_act_server OWNER TO odoo;

--
-- Name: COLUMN ir_act_server.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.code IS 'Python Code';


--
-- Name: COLUMN ir_act_server.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.sequence IS 'Sequence';


--
-- Name: COLUMN ir_act_server.crud_model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.crud_model_id IS 'Target Model';


--
-- Name: COLUMN ir_act_server.condition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.condition IS 'Condition';


--
-- Name: COLUMN ir_act_server.ref_object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.ref_object IS 'Reference record';


--
-- Name: COLUMN ir_act_server.id_object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.id_object IS 'Record';


--
-- Name: COLUMN ir_act_server.crud_model_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.crud_model_name IS 'Create/Write Target Model Name';


--
-- Name: COLUMN ir_act_server.use_relational_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.use_relational_model IS 'Target Model';


--
-- Name: COLUMN ir_act_server.use_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.use_create IS 'Creation Policy';


--
-- Name: COLUMN ir_act_server.wkf_field_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.wkf_field_id IS 'Relation Field';


--
-- Name: COLUMN ir_act_server.wkf_model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.wkf_model_id IS 'Target Model';


--
-- Name: COLUMN ir_act_server.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.state IS 'Action To Do';


--
-- Name: COLUMN ir_act_server.id_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.id_value IS 'Record ID';


--
-- Name: COLUMN ir_act_server.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.action_id IS 'Client Action';


--
-- Name: COLUMN ir_act_server.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.model_id IS 'Base Model';


--
-- Name: COLUMN ir_act_server.sub_model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.sub_model_object_field IS 'Sub-field';


--
-- Name: COLUMN ir_act_server.link_new_record; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.link_new_record IS 'Attach the new record';


--
-- Name: COLUMN ir_act_server.wkf_transition_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.wkf_transition_id IS 'Signal to Trigger';


--
-- Name: COLUMN ir_act_server.sub_object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.sub_object IS 'Sub-model';


--
-- Name: COLUMN ir_act_server.use_write; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.use_write IS 'Update Policy';


--
-- Name: COLUMN ir_act_server.wkf_model_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.wkf_model_name IS 'Target Model Name';


--
-- Name: COLUMN ir_act_server.copyvalue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.copyvalue IS 'Placeholder Expression';


--
-- Name: COLUMN ir_act_server.write_expression; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.write_expression IS 'Expression';


--
-- Name: COLUMN ir_act_server.menu_ir_values_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.menu_ir_values_id IS 'More Menu entry';


--
-- Name: COLUMN ir_act_server.model_object_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.model_object_field IS 'Field';


--
-- Name: COLUMN ir_act_server.link_field_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.link_field_id IS 'Link using field';


--
-- Name: COLUMN ir_act_server.template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_server.template_id IS 'Email Template';


--
-- Name: ir_act_url; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_url (
    target character varying NOT NULL,
    url text NOT NULL
)
INHERITS (ir_actions);


ALTER TABLE public.ir_act_url OWNER TO odoo;

--
-- Name: COLUMN ir_act_url.target; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_url.target IS 'Action Target';


--
-- Name: COLUMN ir_act_url.url; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_url.url IS 'Action URL';


--
-- Name: ir_act_window; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_window (
    domain character varying,
    res_model character varying NOT NULL,
    search_view_id integer,
    view_type character varying NOT NULL,
    src_model character varying,
    view_id integer,
    auto_refresh integer,
    view_mode character varying NOT NULL,
    multi boolean,
    target character varying,
    auto_search boolean,
    res_id integer,
    filter boolean,
    "limit" integer,
    context character varying NOT NULL
)
INHERITS (ir_actions);


ALTER TABLE public.ir_act_window OWNER TO odoo;

--
-- Name: COLUMN ir_act_window.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.domain IS 'Domain Value';


--
-- Name: COLUMN ir_act_window.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.res_model IS 'Destination Model';


--
-- Name: COLUMN ir_act_window.search_view_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.search_view_id IS 'Search View Ref.';


--
-- Name: COLUMN ir_act_window.view_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.view_type IS 'View Type';


--
-- Name: COLUMN ir_act_window.src_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.src_model IS 'Source Model';


--
-- Name: COLUMN ir_act_window.view_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.view_id IS 'View Ref.';


--
-- Name: COLUMN ir_act_window.auto_refresh; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.auto_refresh IS 'Auto-Refresh';


--
-- Name: COLUMN ir_act_window.view_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.view_mode IS 'View Mode';


--
-- Name: COLUMN ir_act_window.multi; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.multi IS 'Restrict to lists';


--
-- Name: COLUMN ir_act_window.target; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.target IS 'Target Window';


--
-- Name: COLUMN ir_act_window.auto_search; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.auto_search IS 'Auto Search';


--
-- Name: COLUMN ir_act_window.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.res_id IS 'Record ID';


--
-- Name: COLUMN ir_act_window.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.filter IS 'Filter';


--
-- Name: COLUMN ir_act_window."limit"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window."limit" IS 'Limit';


--
-- Name: COLUMN ir_act_window.context; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window.context IS 'Context Value';


--
-- Name: ir_act_window_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_window_group_rel (
    act_id integer NOT NULL,
    gid integer NOT NULL
);


ALTER TABLE public.ir_act_window_group_rel OWNER TO odoo;

--
-- Name: TABLE ir_act_window_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_act_window_group_rel IS 'RELATION BETWEEN ir_act_window AND res_groups';


--
-- Name: ir_act_window_view; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_act_window_view (
    id integer NOT NULL,
    create_uid integer,
    multi boolean,
    create_date timestamp without time zone,
    sequence integer,
    view_id integer,
    write_uid integer,
    view_mode character varying NOT NULL,
    write_date timestamp without time zone,
    act_window_id integer
);


ALTER TABLE public.ir_act_window_view OWNER TO odoo;

--
-- Name: TABLE ir_act_window_view; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_act_window_view IS 'ir.actions.act_window.view';


--
-- Name: COLUMN ir_act_window_view.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.create_uid IS 'Created by';


--
-- Name: COLUMN ir_act_window_view.multi; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.multi IS 'On Multiple Doc.';


--
-- Name: COLUMN ir_act_window_view.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.create_date IS 'Created on';


--
-- Name: COLUMN ir_act_window_view.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.sequence IS 'Sequence';


--
-- Name: COLUMN ir_act_window_view.view_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.view_id IS 'View';


--
-- Name: COLUMN ir_act_window_view.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_act_window_view.view_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.view_mode IS 'View Type';


--
-- Name: COLUMN ir_act_window_view.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_act_window_view.act_window_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_act_window_view.act_window_id IS 'Action';


--
-- Name: ir_act_window_view_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_act_window_view_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_act_window_view_id_seq OWNER TO odoo;

--
-- Name: ir_act_window_view_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_act_window_view_id_seq OWNED BY ir_act_window_view.id;


--
-- Name: ir_actions_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_actions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_actions_id_seq OWNER TO odoo;

--
-- Name: ir_actions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_actions_id_seq OWNED BY ir_actions.id;


--
-- Name: ir_actions_todo; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_actions_todo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    sequence integer,
    write_uid integer,
    note text,
    state character varying NOT NULL,
    write_date timestamp without time zone,
    type character varying NOT NULL,
    action_id integer NOT NULL
);


ALTER TABLE public.ir_actions_todo OWNER TO odoo;

--
-- Name: TABLE ir_actions_todo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_actions_todo IS 'Configuration Wizards';


--
-- Name: COLUMN ir_actions_todo.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.create_uid IS 'Created by';


--
-- Name: COLUMN ir_actions_todo.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.create_date IS 'Created on';


--
-- Name: COLUMN ir_actions_todo.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.name IS 'Name';


--
-- Name: COLUMN ir_actions_todo.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.sequence IS 'Sequence';


--
-- Name: COLUMN ir_actions_todo.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_actions_todo.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.note IS 'Text';


--
-- Name: COLUMN ir_actions_todo.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.state IS 'Status';


--
-- Name: COLUMN ir_actions_todo.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_actions_todo.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.type IS 'Type';


--
-- Name: COLUMN ir_actions_todo.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_actions_todo.action_id IS 'Action';


--
-- Name: ir_actions_todo_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_actions_todo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_actions_todo_id_seq OWNER TO odoo;

--
-- Name: ir_actions_todo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_actions_todo_id_seq OWNED BY ir_actions_todo.id;


--
-- Name: ir_attachment; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_attachment (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    description text,
    url character varying(1024),
    res_model character varying,
    file_size integer,
    company_id integer,
    write_uid integer,
    res_name character varying,
    db_datas bytea,
    datas_fname character varying,
    write_date timestamp without time zone,
    type character varying NOT NULL,
    res_id integer,
    store_fname character varying,
    name character varying NOT NULL
);


ALTER TABLE public.ir_attachment OWNER TO odoo;

--
-- Name: TABLE ir_attachment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_attachment IS 'ir.attachment';


--
-- Name: COLUMN ir_attachment.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.create_uid IS 'Owner';


--
-- Name: COLUMN ir_attachment.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.create_date IS 'Date Created';


--
-- Name: COLUMN ir_attachment.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.description IS 'Description';


--
-- Name: COLUMN ir_attachment.url; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.url IS 'Url';


--
-- Name: COLUMN ir_attachment.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.res_model IS 'Resource Model';


--
-- Name: COLUMN ir_attachment.file_size; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.file_size IS 'File Size';


--
-- Name: COLUMN ir_attachment.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.company_id IS 'Company';


--
-- Name: COLUMN ir_attachment.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_attachment.res_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.res_name IS 'Resource Name';


--
-- Name: COLUMN ir_attachment.db_datas; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.db_datas IS 'Database Data';


--
-- Name: COLUMN ir_attachment.datas_fname; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.datas_fname IS 'File Name';


--
-- Name: COLUMN ir_attachment.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_attachment.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.type IS 'Type';


--
-- Name: COLUMN ir_attachment.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.res_id IS 'Resource ID';


--
-- Name: COLUMN ir_attachment.store_fname; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.store_fname IS 'Stored Filename';


--
-- Name: COLUMN ir_attachment.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_attachment.name IS 'Attachment Name';


--
-- Name: ir_attachment_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_attachment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_attachment_id_seq OWNER TO odoo;

--
-- Name: ir_attachment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_attachment_id_seq OWNED BY ir_attachment.id;


--
-- Name: ir_config_parameter; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_config_parameter (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    value text NOT NULL,
    write_uid integer,
    key character varying NOT NULL
);


ALTER TABLE public.ir_config_parameter OWNER TO odoo;

--
-- Name: TABLE ir_config_parameter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_config_parameter IS 'ir.config_parameter';


--
-- Name: COLUMN ir_config_parameter.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.create_uid IS 'Created by';


--
-- Name: COLUMN ir_config_parameter.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.create_date IS 'Created on';


--
-- Name: COLUMN ir_config_parameter.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_config_parameter.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.value IS 'Value';


--
-- Name: COLUMN ir_config_parameter.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_config_parameter.key; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_config_parameter.key IS 'Key';


--
-- Name: ir_config_parameter_groups_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_config_parameter_groups_rel (
    icp_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.ir_config_parameter_groups_rel OWNER TO odoo;

--
-- Name: TABLE ir_config_parameter_groups_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_config_parameter_groups_rel IS 'RELATION BETWEEN ir_config_parameter AND res_groups';


--
-- Name: ir_config_parameter_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_config_parameter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_config_parameter_id_seq OWNER TO odoo;

--
-- Name: ir_config_parameter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_config_parameter_id_seq OWNED BY ir_config_parameter.id;


--
-- Name: ir_cron; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_cron (
    id integer NOT NULL,
    function character varying,
    create_uid integer,
    args text,
    user_id integer NOT NULL,
    name character varying NOT NULL,
    interval_type character varying,
    numbercall integer,
    nextcall timestamp without time zone NOT NULL,
    priority integer,
    model character varying,
    doall boolean,
    write_date timestamp without time zone,
    active boolean,
    create_date timestamp without time zone,
    interval_number integer,
    write_uid integer
);


ALTER TABLE public.ir_cron OWNER TO odoo;

--
-- Name: TABLE ir_cron; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_cron IS 'ir.cron';


--
-- Name: COLUMN ir_cron.function; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.function IS 'Method';


--
-- Name: COLUMN ir_cron.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.create_uid IS 'Created by';


--
-- Name: COLUMN ir_cron.args; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.args IS 'Arguments';


--
-- Name: COLUMN ir_cron.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.user_id IS 'User';


--
-- Name: COLUMN ir_cron.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.name IS 'Name';


--
-- Name: COLUMN ir_cron.interval_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.interval_type IS 'Interval Unit';


--
-- Name: COLUMN ir_cron.numbercall; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.numbercall IS 'Number of Calls';


--
-- Name: COLUMN ir_cron.nextcall; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.nextcall IS 'Next Execution Date';


--
-- Name: COLUMN ir_cron.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.priority IS 'Priority';


--
-- Name: COLUMN ir_cron.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.model IS 'Object';


--
-- Name: COLUMN ir_cron.doall; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.doall IS 'Repeat Missed';


--
-- Name: COLUMN ir_cron.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_cron.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.active IS 'Active';


--
-- Name: COLUMN ir_cron.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.create_date IS 'Created on';


--
-- Name: COLUMN ir_cron.interval_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.interval_number IS 'Interval Number';


--
-- Name: COLUMN ir_cron.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_cron.write_uid IS 'Last Updated by';


--
-- Name: ir_cron_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_cron_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_cron_id_seq OWNER TO odoo;

--
-- Name: ir_cron_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_cron_id_seq OWNED BY ir_cron.id;


--
-- Name: ir_default; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_default (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    uid integer,
    ref_table character varying,
    company_id integer,
    value character varying,
    ref_id integer,
    write_date timestamp without time zone,
    field_tbl character varying,
    write_uid integer,
    field_name character varying,
    page character varying
);


ALTER TABLE public.ir_default OWNER TO odoo;

--
-- Name: TABLE ir_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_default IS 'ir.default';


--
-- Name: COLUMN ir_default.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.create_uid IS 'Created by';


--
-- Name: COLUMN ir_default.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.create_date IS 'Created on';


--
-- Name: COLUMN ir_default.uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.uid IS 'Users';


--
-- Name: COLUMN ir_default.ref_table; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.ref_table IS 'Table Ref.';


--
-- Name: COLUMN ir_default.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.company_id IS 'Company';


--
-- Name: COLUMN ir_default.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.value IS 'Default Value';


--
-- Name: COLUMN ir_default.ref_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.ref_id IS 'ID Ref.';


--
-- Name: COLUMN ir_default.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_default.field_tbl; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.field_tbl IS 'Object';


--
-- Name: COLUMN ir_default.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_default.field_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.field_name IS 'Object Field';


--
-- Name: COLUMN ir_default.page; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_default.page IS 'View';


--
-- Name: ir_default_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_default_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_default_id_seq OWNER TO odoo;

--
-- Name: ir_default_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_default_id_seq OWNED BY ir_default.id;


--
-- Name: ir_exports; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_exports (
    id integer NOT NULL,
    create_uid integer,
    resource character varying,
    name character varying,
    write_uid integer,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    domain character varying,
    attachment_id integer,
    color integer,
    file_name character varying(255),
    notes text,
    message_last_post timestamp without time zone,
    model_name character varying
);


ALTER TABLE public.ir_exports OWNER TO odoo;

--
-- Name: TABLE ir_exports; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_exports IS 'ir.exports';


--
-- Name: COLUMN ir_exports.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.create_uid IS 'Created by';


--
-- Name: COLUMN ir_exports.resource; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.resource IS 'Resource';


--
-- Name: COLUMN ir_exports.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.name IS 'Export Name';


--
-- Name: COLUMN ir_exports.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_exports.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_exports.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.create_date IS 'Created on';


--
-- Name: COLUMN ir_exports.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.domain IS 'Domain';


--
-- Name: COLUMN ir_exports.attachment_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.attachment_id IS 'Attachments';


--
-- Name: COLUMN ir_exports.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.color IS 'Color Index';


--
-- Name: COLUMN ir_exports.file_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.file_name IS 'Filename';


--
-- Name: COLUMN ir_exports.notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.notes IS 'Notes';


--
-- Name: COLUMN ir_exports.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN ir_exports.model_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports.model_name IS 'Model';


--
-- Name: ir_exports_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_exports_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_exports_id_seq OWNER TO odoo;

--
-- Name: ir_exports_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_exports_id_seq OWNED BY ir_exports.id;


--
-- Name: ir_exports_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_exports_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    write_uid integer,
    write_date timestamp without time zone,
    export_id integer,
    sequence integer,
    heading character varying(512)
);


ALTER TABLE public.ir_exports_line OWNER TO odoo;

--
-- Name: TABLE ir_exports_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_exports_line IS 'ir.exports.line';


--
-- Name: COLUMN ir_exports_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.create_uid IS 'Created by';


--
-- Name: COLUMN ir_exports_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.create_date IS 'Created on';


--
-- Name: COLUMN ir_exports_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.name IS 'Field Name';


--
-- Name: COLUMN ir_exports_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_exports_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_exports_line.export_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.export_id IS 'Export';


--
-- Name: COLUMN ir_exports_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.sequence IS 'Sequence';


--
-- Name: COLUMN ir_exports_line.heading; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_exports_line.heading IS 'Label';


--
-- Name: ir_exports_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_exports_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_exports_line_id_seq OWNER TO odoo;

--
-- Name: ir_exports_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_exports_line_id_seq OWNED BY ir_exports_line.id;


--
-- Name: ir_fields_converter; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_fields_converter (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.ir_fields_converter OWNER TO odoo;

--
-- Name: TABLE ir_fields_converter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_fields_converter IS 'ir.fields.converter';


--
-- Name: COLUMN ir_fields_converter.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_fields_converter.create_uid IS 'Created by';


--
-- Name: COLUMN ir_fields_converter.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_fields_converter.create_date IS 'Created on';


--
-- Name: COLUMN ir_fields_converter.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_fields_converter.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_fields_converter.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_fields_converter.write_uid IS 'Last Updated by';


--
-- Name: ir_fields_converter_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_fields_converter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_fields_converter_id_seq OWNER TO odoo;

--
-- Name: ir_fields_converter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_fields_converter_id_seq OWNED BY ir_fields_converter.id;


--
-- Name: ir_filters; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_filters (
    id integer NOT NULL,
    model_id character varying NOT NULL,
    domain text NOT NULL,
    user_id integer,
    name character varying NOT NULL,
    create_uid integer,
    write_uid integer,
    is_default boolean,
    context text NOT NULL,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    action_id integer
);


ALTER TABLE public.ir_filters OWNER TO odoo;

--
-- Name: TABLE ir_filters; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_filters IS 'Filters';


--
-- Name: COLUMN ir_filters.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.model_id IS 'Model';


--
-- Name: COLUMN ir_filters.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.domain IS 'Domain';


--
-- Name: COLUMN ir_filters.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.user_id IS 'User';


--
-- Name: COLUMN ir_filters.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.name IS 'Filter Name';


--
-- Name: COLUMN ir_filters.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.create_uid IS 'Created by';


--
-- Name: COLUMN ir_filters.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_filters.is_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.is_default IS 'Default filter';


--
-- Name: COLUMN ir_filters.context; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.context IS 'Context';


--
-- Name: COLUMN ir_filters.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_filters.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.create_date IS 'Created on';


--
-- Name: COLUMN ir_filters.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_filters.action_id IS 'Action';


--
-- Name: ir_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_filters_id_seq OWNER TO odoo;

--
-- Name: ir_filters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_filters_id_seq OWNED BY ir_filters.id;


--
-- Name: ir_logging; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_logging (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    level character varying,
    line character varying NOT NULL,
    dbname character varying,
    write_uid integer,
    func character varying NOT NULL,
    write_date timestamp without time zone,
    path character varying NOT NULL,
    message text NOT NULL,
    type character varying NOT NULL
);


ALTER TABLE public.ir_logging OWNER TO odoo;

--
-- Name: TABLE ir_logging; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_logging IS 'ir.logging';


--
-- Name: COLUMN ir_logging.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.create_uid IS 'Uid';


--
-- Name: COLUMN ir_logging.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.create_date IS 'Create Date';


--
-- Name: COLUMN ir_logging.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.name IS 'Name';


--
-- Name: COLUMN ir_logging.level; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.level IS 'Level';


--
-- Name: COLUMN ir_logging.line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.line IS 'Line';


--
-- Name: COLUMN ir_logging.dbname; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.dbname IS 'Database Name';


--
-- Name: COLUMN ir_logging.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_logging.func; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.func IS 'Function';


--
-- Name: COLUMN ir_logging.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_logging.path; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.path IS 'Path';


--
-- Name: COLUMN ir_logging.message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.message IS 'Message';


--
-- Name: COLUMN ir_logging.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_logging.type IS 'Type';


--
-- Name: ir_logging_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_logging_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_logging_id_seq OWNER TO odoo;

--
-- Name: ir_logging_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_logging_id_seq OWNED BY ir_logging.id;


--
-- Name: ir_mail_server; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_mail_server (
    id integer NOT NULL,
    create_uid integer,
    smtp_encryption character varying NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    smtp_port integer NOT NULL,
    smtp_host character varying NOT NULL,
    write_uid integer,
    smtp_pass character varying(64),
    smtp_debug boolean,
    write_date timestamp without time zone,
    active boolean,
    smtp_user character varying(64)
);


ALTER TABLE public.ir_mail_server OWNER TO odoo;

--
-- Name: TABLE ir_mail_server; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_mail_server IS 'ir.mail_server';


--
-- Name: COLUMN ir_mail_server.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.create_uid IS 'Created by';


--
-- Name: COLUMN ir_mail_server.smtp_encryption; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_encryption IS 'Connection Security';


--
-- Name: COLUMN ir_mail_server.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.create_date IS 'Created on';


--
-- Name: COLUMN ir_mail_server.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.name IS 'Description';


--
-- Name: COLUMN ir_mail_server.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.sequence IS 'Priority';


--
-- Name: COLUMN ir_mail_server.smtp_port; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_port IS 'SMTP Port';


--
-- Name: COLUMN ir_mail_server.smtp_host; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_host IS 'SMTP Server';


--
-- Name: COLUMN ir_mail_server.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_mail_server.smtp_pass; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_pass IS 'Password';


--
-- Name: COLUMN ir_mail_server.smtp_debug; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_debug IS 'Debugging';


--
-- Name: COLUMN ir_mail_server.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_mail_server.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.active IS 'Active';


--
-- Name: COLUMN ir_mail_server.smtp_user; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_mail_server.smtp_user IS 'Username';


--
-- Name: ir_mail_server_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_mail_server_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_mail_server_id_seq OWNER TO odoo;

--
-- Name: ir_mail_server_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_mail_server_id_seq OWNED BY ir_mail_server.id;


--
-- Name: ir_model; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model (
    id integer NOT NULL,
    model character varying NOT NULL,
    name character varying NOT NULL,
    state character varying,
    info text,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.ir_model OWNER TO odoo;

--
-- Name: COLUMN ir_model.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model.create_uid IS 'Created by';


--
-- Name: COLUMN ir_model.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model.create_date IS 'Created on';


--
-- Name: COLUMN ir_model.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_model.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model.write_date IS 'Last Updated on';


--
-- Name: ir_model_access; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_access (
    id integer NOT NULL,
    model_id integer NOT NULL,
    perm_read boolean,
    name character varying NOT NULL,
    create_uid integer,
    write_uid integer,
    active boolean,
    write_date timestamp without time zone,
    perm_unlink boolean,
    perm_write boolean,
    create_date timestamp without time zone,
    perm_create boolean,
    group_id integer
);


ALTER TABLE public.ir_model_access OWNER TO odoo;

--
-- Name: TABLE ir_model_access; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_model_access IS 'ir.model.access';


--
-- Name: COLUMN ir_model_access.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.model_id IS 'Object';


--
-- Name: COLUMN ir_model_access.perm_read; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.perm_read IS 'Read Access';


--
-- Name: COLUMN ir_model_access.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.name IS 'Name';


--
-- Name: COLUMN ir_model_access.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.create_uid IS 'Created by';


--
-- Name: COLUMN ir_model_access.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_model_access.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.active IS 'Active';


--
-- Name: COLUMN ir_model_access.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_model_access.perm_unlink; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.perm_unlink IS 'Delete Access';


--
-- Name: COLUMN ir_model_access.perm_write; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.perm_write IS 'Write Access';


--
-- Name: COLUMN ir_model_access.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.create_date IS 'Created on';


--
-- Name: COLUMN ir_model_access.perm_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.perm_create IS 'Create Access';


--
-- Name: COLUMN ir_model_access.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_access.group_id IS 'Group';


--
-- Name: ir_model_access_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_access_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_access_id_seq OWNER TO odoo;

--
-- Name: ir_model_access_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_access_id_seq OWNED BY ir_model_access.id;


--
-- Name: ir_model_constraint; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_constraint (
    id integer NOT NULL,
    date_init timestamp without time zone,
    date_update timestamp without time zone,
    module integer NOT NULL,
    model integer NOT NULL,
    type character varying(1) NOT NULL,
    name character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.ir_model_constraint OWNER TO odoo;

--
-- Name: COLUMN ir_model_constraint.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_constraint.create_uid IS 'Created by';


--
-- Name: COLUMN ir_model_constraint.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_constraint.create_date IS 'Created on';


--
-- Name: COLUMN ir_model_constraint.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_constraint.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_model_constraint.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_constraint.write_date IS 'Last Updated on';


--
-- Name: ir_model_constraint_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_constraint_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_constraint_id_seq OWNER TO odoo;

--
-- Name: ir_model_constraint_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_constraint_id_seq OWNED BY ir_model_constraint.id;


--
-- Name: ir_model_data; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_data (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    noupdate boolean,
    name character varying NOT NULL,
    date_init timestamp without time zone,
    date_update timestamp without time zone,
    module character varying NOT NULL,
    model character varying NOT NULL,
    res_id integer
);


ALTER TABLE public.ir_model_data OWNER TO odoo;

--
-- Name: ir_model_data_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_data_id_seq OWNER TO odoo;

--
-- Name: ir_model_data_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_data_id_seq OWNED BY ir_model_data.id;


--
-- Name: ir_model_fields; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_fields (
    id integer NOT NULL,
    model character varying NOT NULL,
    model_id integer NOT NULL,
    name character varying NOT NULL,
    relation character varying,
    select_level character varying NOT NULL,
    field_description character varying NOT NULL,
    ttype character varying NOT NULL,
    state character varying DEFAULT 'base'::character varying NOT NULL,
    relation_field character varying,
    translate boolean DEFAULT false,
    serialization_field_id integer,
    domain character varying,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    on_delete character varying,
    write_uid integer,
    selection character varying,
    size integer,
    create_uid integer,
    readonly boolean,
    complete_name character varying,
    selectable boolean,
    required boolean,
    CONSTRAINT ir_model_fields_size_gt_zero CHECK ((size >= 0))
);


ALTER TABLE public.ir_model_fields OWNER TO odoo;

--
-- Name: COLUMN ir_model_fields.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.domain IS 'Domain';


--
-- Name: COLUMN ir_model_fields.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.create_date IS 'Created on';


--
-- Name: COLUMN ir_model_fields.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_model_fields.on_delete; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.on_delete IS 'On Delete';


--
-- Name: COLUMN ir_model_fields.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_model_fields.selection; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.selection IS 'Selection Options';


--
-- Name: COLUMN ir_model_fields.size; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.size IS 'Size';


--
-- Name: COLUMN ir_model_fields.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.create_uid IS 'Created by';


--
-- Name: COLUMN ir_model_fields.readonly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.readonly IS 'Readonly';


--
-- Name: COLUMN ir_model_fields.complete_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.complete_name IS 'Complete Name';


--
-- Name: COLUMN ir_model_fields.selectable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.selectable IS 'Selectable';


--
-- Name: COLUMN ir_model_fields.required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_fields.required IS 'Required';


--
-- Name: ir_model_fields_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_fields_group_rel (
    field_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.ir_model_fields_group_rel OWNER TO odoo;

--
-- Name: TABLE ir_model_fields_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_model_fields_group_rel IS 'RELATION BETWEEN ir_model_fields AND res_groups';


--
-- Name: ir_model_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_fields_id_seq OWNER TO odoo;

--
-- Name: ir_model_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_fields_id_seq OWNED BY ir_model_fields.id;


--
-- Name: ir_model_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_id_seq OWNER TO odoo;

--
-- Name: ir_model_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_id_seq OWNED BY ir_model.id;


--
-- Name: ir_model_relation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_model_relation (
    id integer NOT NULL,
    date_init timestamp without time zone,
    date_update timestamp without time zone,
    module integer NOT NULL,
    model integer NOT NULL,
    name character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.ir_model_relation OWNER TO odoo;

--
-- Name: COLUMN ir_model_relation.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_relation.create_uid IS 'Created by';


--
-- Name: COLUMN ir_model_relation.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_relation.create_date IS 'Created on';


--
-- Name: COLUMN ir_model_relation.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_relation.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_model_relation.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_model_relation.write_date IS 'Last Updated on';


--
-- Name: ir_model_relation_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_model_relation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_model_relation_id_seq OWNER TO odoo;

--
-- Name: ir_model_relation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_model_relation_id_seq OWNED BY ir_model_relation.id;


--
-- Name: ir_module_category; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_module_category (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    parent_id integer,
    name character varying NOT NULL,
    description text,
    sequence integer,
    visible boolean
);


ALTER TABLE public.ir_module_category OWNER TO odoo;

--
-- Name: COLUMN ir_module_category.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_category.description IS 'Description';


--
-- Name: COLUMN ir_module_category.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_category.sequence IS 'Sequence';


--
-- Name: COLUMN ir_module_category.visible; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_category.visible IS 'Visible';


--
-- Name: ir_module_category_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_module_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_module_category_id_seq OWNER TO odoo;

--
-- Name: ir_module_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_module_category_id_seq OWNED BY ir_module_category.id;


--
-- Name: ir_module_module; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_module_module (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    website character varying,
    summary character varying,
    name character varying NOT NULL,
    author character varying,
    icon character varying,
    state character varying,
    latest_version character varying,
    shortdesc character varying,
    category_id integer,
    description text,
    application boolean DEFAULT false,
    demo boolean DEFAULT false,
    license character varying,
    sequence integer DEFAULT 100,
    auto_install boolean DEFAULT false,
    menus_by_module text,
    reports_by_module text,
    maintainer character varying,
    contributors text,
    views_by_module text,
    published_version character varying,
    url character varying
);


ALTER TABLE public.ir_module_module OWNER TO odoo;

--
-- Name: COLUMN ir_module_module.menus_by_module; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.menus_by_module IS 'Menus';


--
-- Name: COLUMN ir_module_module.reports_by_module; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.reports_by_module IS 'Reports';


--
-- Name: COLUMN ir_module_module.maintainer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.maintainer IS 'Maintainer';


--
-- Name: COLUMN ir_module_module.contributors; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.contributors IS 'Contributors';


--
-- Name: COLUMN ir_module_module.views_by_module; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.views_by_module IS 'Views';


--
-- Name: COLUMN ir_module_module.published_version; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.published_version IS 'Published Version';


--
-- Name: COLUMN ir_module_module.url; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_module_module.url IS 'URL';


--
-- Name: ir_module_module_dependency; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_module_module_dependency (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying,
    module_id integer
);


ALTER TABLE public.ir_module_module_dependency OWNER TO odoo;

--
-- Name: ir_module_module_dependency_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_module_module_dependency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_module_module_dependency_id_seq OWNER TO odoo;

--
-- Name: ir_module_module_dependency_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_module_module_dependency_id_seq OWNED BY ir_module_module_dependency.id;


--
-- Name: ir_module_module_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_module_module_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_module_module_id_seq OWNER TO odoo;

--
-- Name: ir_module_module_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_module_module_id_seq OWNED BY ir_module_module.id;


--
-- Name: ir_property; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_property (
    id integer NOT NULL,
    value_text text,
    value_float double precision,
    create_date timestamp without time zone,
    name character varying,
    create_uid integer,
    type character varying NOT NULL,
    company_id integer,
    write_uid integer,
    fields_id integer NOT NULL,
    value_datetime timestamp without time zone,
    value_binary bytea,
    write_date timestamp without time zone,
    value_reference character varying,
    value_integer integer,
    res_id character varying
);


ALTER TABLE public.ir_property OWNER TO odoo;

--
-- Name: TABLE ir_property; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_property IS 'ir.property';


--
-- Name: COLUMN ir_property.value_text; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_text IS 'Value';


--
-- Name: COLUMN ir_property.value_float; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_float IS 'Value';


--
-- Name: COLUMN ir_property.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.create_date IS 'Created on';


--
-- Name: COLUMN ir_property.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.name IS 'Name';


--
-- Name: COLUMN ir_property.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.create_uid IS 'Created by';


--
-- Name: COLUMN ir_property.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.type IS 'Type';


--
-- Name: COLUMN ir_property.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.company_id IS 'Company';


--
-- Name: COLUMN ir_property.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_property.fields_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.fields_id IS 'Field';


--
-- Name: COLUMN ir_property.value_datetime; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_datetime IS 'Value';


--
-- Name: COLUMN ir_property.value_binary; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_binary IS 'Value';


--
-- Name: COLUMN ir_property.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_property.value_reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_reference IS 'Value';


--
-- Name: COLUMN ir_property.value_integer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.value_integer IS 'Value';


--
-- Name: COLUMN ir_property.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_property.res_id IS 'Resource';


--
-- Name: ir_property_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_property_id_seq OWNER TO odoo;

--
-- Name: ir_property_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_property_id_seq OWNED BY ir_property.id;


--
-- Name: ir_rule; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_rule (
    id integer NOT NULL,
    model_id integer NOT NULL,
    domain_force text,
    name character varying,
    create_uid integer,
    global boolean,
    write_uid integer,
    active boolean,
    perm_read boolean,
    perm_unlink boolean,
    perm_write boolean,
    create_date timestamp without time zone,
    perm_create boolean,
    write_date timestamp without time zone,
    CONSTRAINT ir_rule_no_access_rights CHECK (((((perm_read <> false) OR (perm_write <> false)) OR (perm_create <> false)) OR (perm_unlink <> false)))
);


ALTER TABLE public.ir_rule OWNER TO odoo;

--
-- Name: TABLE ir_rule; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_rule IS 'ir.rule';


--
-- Name: COLUMN ir_rule.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.model_id IS 'Object';


--
-- Name: COLUMN ir_rule.domain_force; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.domain_force IS 'Domain';


--
-- Name: COLUMN ir_rule.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.name IS 'Name';


--
-- Name: COLUMN ir_rule.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.create_uid IS 'Created by';


--
-- Name: COLUMN ir_rule.global; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.global IS 'Global';


--
-- Name: COLUMN ir_rule.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_rule.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.active IS 'Active';


--
-- Name: COLUMN ir_rule.perm_read; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.perm_read IS 'Apply for Read';


--
-- Name: COLUMN ir_rule.perm_unlink; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.perm_unlink IS 'Apply for Delete';


--
-- Name: COLUMN ir_rule.perm_write; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.perm_write IS 'Apply for Write';


--
-- Name: COLUMN ir_rule.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.create_date IS 'Created on';


--
-- Name: COLUMN ir_rule.perm_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.perm_create IS 'Apply for Create';


--
-- Name: COLUMN ir_rule.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_rule.write_date IS 'Last Updated on';


--
-- Name: ir_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_rule_id_seq OWNER TO odoo;

--
-- Name: ir_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_rule_id_seq OWNED BY ir_rule.id;


--
-- Name: ir_sequence; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_sequence (
    id integer NOT NULL,
    create_uid integer,
    code character varying(64),
    create_date timestamp without time zone,
    name character varying(64) NOT NULL,
    number_next integer NOT NULL,
    implementation character varying NOT NULL,
    company_id integer,
    write_uid integer,
    padding integer NOT NULL,
    number_increment integer NOT NULL,
    prefix character varying,
    write_date timestamp without time zone,
    active boolean,
    suffix character varying
);


ALTER TABLE public.ir_sequence OWNER TO odoo;

--
-- Name: TABLE ir_sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_sequence IS 'ir.sequence';


--
-- Name: COLUMN ir_sequence.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.create_uid IS 'Created by';


--
-- Name: COLUMN ir_sequence.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.code IS 'Sequence Type';


--
-- Name: COLUMN ir_sequence.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.create_date IS 'Created on';


--
-- Name: COLUMN ir_sequence.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.name IS 'Name';


--
-- Name: COLUMN ir_sequence.number_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.number_next IS 'Next Number';


--
-- Name: COLUMN ir_sequence.implementation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.implementation IS 'Implementation';


--
-- Name: COLUMN ir_sequence.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.company_id IS 'Company';


--
-- Name: COLUMN ir_sequence.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_sequence.padding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.padding IS 'Number Padding';


--
-- Name: COLUMN ir_sequence.number_increment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.number_increment IS 'Increment Number';


--
-- Name: COLUMN ir_sequence.prefix; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.prefix IS 'Prefix';


--
-- Name: COLUMN ir_sequence.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_sequence.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.active IS 'Active';


--
-- Name: COLUMN ir_sequence.suffix; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence.suffix IS 'Suffix';


--
-- Name: ir_sequence_001; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_001
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_001 OWNER TO odoo;

--
-- Name: ir_sequence_002; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_002
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_002 OWNER TO odoo;

--
-- Name: ir_sequence_003; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_003
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_003 OWNER TO odoo;

--
-- Name: ir_sequence_004; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_004
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_004 OWNER TO odoo;

--
-- Name: ir_sequence_005; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_005
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_005 OWNER TO odoo;

--
-- Name: ir_sequence_006; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_006
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_006 OWNER TO odoo;

--
-- Name: ir_sequence_007; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_007
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_007 OWNER TO odoo;

--
-- Name: ir_sequence_008; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_008
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_008 OWNER TO odoo;

--
-- Name: ir_sequence_009; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_009
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_009 OWNER TO odoo;

--
-- Name: ir_sequence_010; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_010
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_010 OWNER TO odoo;

--
-- Name: ir_sequence_011; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_011
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_011 OWNER TO odoo;

--
-- Name: ir_sequence_012; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_012
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_012 OWNER TO odoo;

--
-- Name: ir_sequence_013; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_013
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_013 OWNER TO odoo;

--
-- Name: ir_sequence_014; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_014
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_014 OWNER TO odoo;

--
-- Name: ir_sequence_015; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_015
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_015 OWNER TO odoo;

--
-- Name: ir_sequence_016; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_016
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_016 OWNER TO odoo;

--
-- Name: ir_sequence_017; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_017
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_017 OWNER TO odoo;

--
-- Name: ir_sequence_018; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_018
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_018 OWNER TO odoo;

--
-- Name: ir_sequence_019; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_019
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_019 OWNER TO odoo;

--
-- Name: ir_sequence_020; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_020
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_020 OWNER TO odoo;

--
-- Name: ir_sequence_021; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_021
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_021 OWNER TO odoo;

--
-- Name: ir_sequence_022; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_022
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_022 OWNER TO odoo;

--
-- Name: ir_sequence_031; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_031
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_031 OWNER TO odoo;

--
-- Name: ir_sequence_032; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_032
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_032 OWNER TO odoo;

--
-- Name: ir_sequence_033; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_033
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_033 OWNER TO odoo;

--
-- Name: ir_sequence_034; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_034
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_034 OWNER TO odoo;

--
-- Name: ir_sequence_035; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_035
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_035 OWNER TO odoo;

--
-- Name: ir_sequence_036; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_036
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_036 OWNER TO odoo;

--
-- Name: ir_sequence_037; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_037
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_037 OWNER TO odoo;

--
-- Name: ir_sequence_038; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_038
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_038 OWNER TO odoo;

--
-- Name: ir_sequence_039; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_039
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_039 OWNER TO odoo;

--
-- Name: ir_sequence_040; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_040
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_040 OWNER TO odoo;

--
-- Name: ir_sequence_041; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_041
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_041 OWNER TO odoo;

--
-- Name: ir_sequence_042; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_042
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_042 OWNER TO odoo;

--
-- Name: ir_sequence_062; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_062
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_062 OWNER TO odoo;

--
-- Name: ir_sequence_063; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_063
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_063 OWNER TO odoo;

--
-- Name: ir_sequence_064; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_064
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_064 OWNER TO odoo;

--
-- Name: ir_sequence_065; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_065
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_065 OWNER TO odoo;

--
-- Name: ir_sequence_066; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_066
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_066 OWNER TO odoo;

--
-- Name: ir_sequence_067; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_067
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_067 OWNER TO odoo;

--
-- Name: ir_sequence_068; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_068
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_068 OWNER TO odoo;

--
-- Name: ir_sequence_069; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_069
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_069 OWNER TO odoo;

--
-- Name: ir_sequence_070; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_070
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_070 OWNER TO odoo;

--
-- Name: ir_sequence_071; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_071
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_071 OWNER TO odoo;

--
-- Name: ir_sequence_078; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_078
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_078 OWNER TO odoo;

--
-- Name: ir_sequence_079; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_079
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_079 OWNER TO odoo;

--
-- Name: ir_sequence_080; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_080
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_080 OWNER TO odoo;

--
-- Name: ir_sequence_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_id_seq OWNER TO odoo;

--
-- Name: ir_sequence_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_sequence_id_seq OWNED BY ir_sequence.id;


--
-- Name: ir_sequence_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_sequence_type (
    id integer NOT NULL,
    create_uid integer,
    code character varying(32) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.ir_sequence_type OWNER TO odoo;

--
-- Name: TABLE ir_sequence_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_sequence_type IS 'ir.sequence.type';


--
-- Name: COLUMN ir_sequence_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.create_uid IS 'Created by';


--
-- Name: COLUMN ir_sequence_type.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.code IS 'Code';


--
-- Name: COLUMN ir_sequence_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.create_date IS 'Created on';


--
-- Name: COLUMN ir_sequence_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.name IS 'Name';


--
-- Name: COLUMN ir_sequence_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_sequence_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_sequence_type.write_date IS 'Last Updated on';


--
-- Name: ir_sequence_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_sequence_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_sequence_type_id_seq OWNER TO odoo;

--
-- Name: ir_sequence_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_sequence_type_id_seq OWNED BY ir_sequence_type.id;


--
-- Name: ir_server_object_lines; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_server_object_lines (
    id integer NOT NULL,
    create_uid integer,
    server_id integer,
    create_date timestamp without time zone,
    value text NOT NULL,
    col1 integer NOT NULL,
    write_date timestamp without time zone,
    write_uid integer,
    type character varying NOT NULL
);


ALTER TABLE public.ir_server_object_lines OWNER TO odoo;

--
-- Name: TABLE ir_server_object_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_server_object_lines IS 'Server Action value mapping';


--
-- Name: COLUMN ir_server_object_lines.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.create_uid IS 'Created by';


--
-- Name: COLUMN ir_server_object_lines.server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.server_id IS 'Related Server Action';


--
-- Name: COLUMN ir_server_object_lines.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.create_date IS 'Created on';


--
-- Name: COLUMN ir_server_object_lines.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.value IS 'Value';


--
-- Name: COLUMN ir_server_object_lines.col1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.col1 IS 'Field';


--
-- Name: COLUMN ir_server_object_lines.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_server_object_lines.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_server_object_lines.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_server_object_lines.type IS 'Evaluation Type';


--
-- Name: ir_server_object_lines_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_server_object_lines_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_server_object_lines_id_seq OWNER TO odoo;

--
-- Name: ir_server_object_lines_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_server_object_lines_id_seq OWNED BY ir_server_object_lines.id;


--
-- Name: ir_translation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_translation (
    id integer NOT NULL,
    lang character varying,
    src text,
    name character varying NOT NULL,
    res_id integer,
    module character varying,
    state character varying,
    comments text,
    value text,
    type character varying
);


ALTER TABLE public.ir_translation OWNER TO odoo;

--
-- Name: TABLE ir_translation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_translation IS 'ir.translation';


--
-- Name: COLUMN ir_translation.lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.lang IS 'Language';


--
-- Name: COLUMN ir_translation.src; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.src IS 'Old source';


--
-- Name: COLUMN ir_translation.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.name IS 'Translated field';


--
-- Name: COLUMN ir_translation.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.res_id IS 'Record ID';


--
-- Name: COLUMN ir_translation.module; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.module IS 'Module';


--
-- Name: COLUMN ir_translation.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.state IS 'Status';


--
-- Name: COLUMN ir_translation.comments; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.comments IS 'Translation comments';


--
-- Name: COLUMN ir_translation.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.value IS 'Translation Value';


--
-- Name: COLUMN ir_translation.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_translation.type IS 'Type';


--
-- Name: ir_translation_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_translation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_translation_id_seq OWNER TO odoo;

--
-- Name: ir_translation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_translation_id_seq OWNED BY ir_translation.id;


--
-- Name: ir_ui_menu; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_ui_menu (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    web_icon_data bytea,
    needaction_enabled boolean,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    icon character varying(64),
    sequence integer,
    web_icon_hover character varying,
    write_uid integer,
    parent_id integer,
    web_icon character varying,
    write_date timestamp without time zone,
    create_uid integer,
    web_icon_hover_data bytea,
    mail_group_id integer
);


ALTER TABLE public.ir_ui_menu OWNER TO odoo;

--
-- Name: TABLE ir_ui_menu; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_ui_menu IS 'ir.ui.menu';


--
-- Name: COLUMN ir_ui_menu.web_icon_data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.web_icon_data IS 'Web Icon Image';


--
-- Name: COLUMN ir_ui_menu.needaction_enabled; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.needaction_enabled IS 'Target model uses the need action mechanism';


--
-- Name: COLUMN ir_ui_menu.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.create_date IS 'Created on';


--
-- Name: COLUMN ir_ui_menu.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.name IS 'Menu';


--
-- Name: COLUMN ir_ui_menu.icon; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.icon IS 'Icon';


--
-- Name: COLUMN ir_ui_menu.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.sequence IS 'Sequence';


--
-- Name: COLUMN ir_ui_menu.web_icon_hover; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.web_icon_hover IS 'Web Icon File (hover)';


--
-- Name: COLUMN ir_ui_menu.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_ui_menu.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.parent_id IS 'Parent Menu';


--
-- Name: COLUMN ir_ui_menu.web_icon; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.web_icon IS 'Web Icon File';


--
-- Name: COLUMN ir_ui_menu.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_ui_menu.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.create_uid IS 'Created by';


--
-- Name: COLUMN ir_ui_menu.web_icon_hover_data; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.web_icon_hover_data IS 'Web Icon Image (hover)';


--
-- Name: COLUMN ir_ui_menu.mail_group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_menu.mail_group_id IS 'Mail Group';


--
-- Name: ir_ui_menu_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_ui_menu_group_rel (
    menu_id integer NOT NULL,
    gid integer NOT NULL
);


ALTER TABLE public.ir_ui_menu_group_rel OWNER TO odoo;

--
-- Name: TABLE ir_ui_menu_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_ui_menu_group_rel IS 'RELATION BETWEEN ir_ui_menu AND res_groups';


--
-- Name: ir_ui_menu_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_ui_menu_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_ui_menu_id_seq OWNER TO odoo;

--
-- Name: ir_ui_menu_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_ui_menu_id_seq OWNED BY ir_ui_menu.id;


--
-- Name: ir_ui_view; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_ui_view (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    inherit_id integer,
    write_date timestamp without time zone,
    arch text NOT NULL,
    write_uid integer,
    priority integer NOT NULL,
    mode character varying NOT NULL,
    active boolean,
    model character varying,
    model_data_id integer,
    type character varying,
    field_parent character varying,
    CONSTRAINT ir_ui_view_inheritance_mode CHECK ((((mode)::text <> 'extension'::text) OR (inherit_id IS NOT NULL)))
);


ALTER TABLE public.ir_ui_view OWNER TO odoo;

--
-- Name: TABLE ir_ui_view; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_ui_view IS 'ir.ui.view';


--
-- Name: COLUMN ir_ui_view.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.create_uid IS 'Created by';


--
-- Name: COLUMN ir_ui_view.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.create_date IS 'Create Date';


--
-- Name: COLUMN ir_ui_view.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.name IS 'View Name';


--
-- Name: COLUMN ir_ui_view.inherit_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.inherit_id IS 'Inherited View';


--
-- Name: COLUMN ir_ui_view.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.write_date IS 'Last Modification Date';


--
-- Name: COLUMN ir_ui_view.arch; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.arch IS 'View Architecture';


--
-- Name: COLUMN ir_ui_view.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_ui_view.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.priority IS 'Sequence';


--
-- Name: COLUMN ir_ui_view.mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.mode IS 'View inheritance mode';


--
-- Name: COLUMN ir_ui_view.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.active IS 'Active';


--
-- Name: COLUMN ir_ui_view.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.model IS 'Object';


--
-- Name: COLUMN ir_ui_view.model_data_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.model_data_id IS 'Model Data';


--
-- Name: COLUMN ir_ui_view.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.type IS 'View Type';


--
-- Name: COLUMN ir_ui_view.field_parent; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view.field_parent IS 'Child Field';


--
-- Name: ir_ui_view_custom; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_ui_view_custom (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    user_id integer NOT NULL,
    ref_id integer NOT NULL,
    arch text NOT NULL
);


ALTER TABLE public.ir_ui_view_custom OWNER TO odoo;

--
-- Name: TABLE ir_ui_view_custom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_ui_view_custom IS 'ir.ui.view.custom';


--
-- Name: COLUMN ir_ui_view_custom.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.create_uid IS 'Created by';


--
-- Name: COLUMN ir_ui_view_custom.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.create_date IS 'Created on';


--
-- Name: COLUMN ir_ui_view_custom.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_ui_view_custom.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_ui_view_custom.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.user_id IS 'User';


--
-- Name: COLUMN ir_ui_view_custom.ref_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.ref_id IS 'Original View';


--
-- Name: COLUMN ir_ui_view_custom.arch; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_ui_view_custom.arch IS 'View Architecture';


--
-- Name: ir_ui_view_custom_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_ui_view_custom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_ui_view_custom_id_seq OWNER TO odoo;

--
-- Name: ir_ui_view_custom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_ui_view_custom_id_seq OWNED BY ir_ui_view_custom.id;


--
-- Name: ir_ui_view_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_ui_view_group_rel (
    view_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.ir_ui_view_group_rel OWNER TO odoo;

--
-- Name: TABLE ir_ui_view_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_ui_view_group_rel IS 'RELATION BETWEEN ir_ui_view AND res_groups';


--
-- Name: ir_ui_view_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_ui_view_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_ui_view_id_seq OWNER TO odoo;

--
-- Name: ir_ui_view_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_ui_view_id_seq OWNED BY ir_ui_view.id;


--
-- Name: ir_values; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ir_values (
    id integer NOT NULL,
    model_id integer,
    user_id integer,
    name character varying NOT NULL,
    create_uid integer,
    key2 character varying,
    company_id integer,
    value text,
    write_uid integer,
    key character varying NOT NULL,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    model character varying NOT NULL,
    res_id integer,
    action_id integer
);


ALTER TABLE public.ir_values OWNER TO odoo;

--
-- Name: TABLE ir_values; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ir_values IS 'ir.values';


--
-- Name: COLUMN ir_values.model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.model_id IS 'Model (change only)';


--
-- Name: COLUMN ir_values.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.user_id IS 'User';


--
-- Name: COLUMN ir_values.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.name IS 'Name';


--
-- Name: COLUMN ir_values.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.create_uid IS 'Created by';


--
-- Name: COLUMN ir_values.key2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.key2 IS 'Qualifier';


--
-- Name: COLUMN ir_values.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.company_id IS 'Company';


--
-- Name: COLUMN ir_values.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.value IS 'Value';


--
-- Name: COLUMN ir_values.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.write_uid IS 'Last Updated by';


--
-- Name: COLUMN ir_values.key; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.key IS 'Type';


--
-- Name: COLUMN ir_values.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.write_date IS 'Last Updated on';


--
-- Name: COLUMN ir_values.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.create_date IS 'Created on';


--
-- Name: COLUMN ir_values.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.model IS 'Model Name';


--
-- Name: COLUMN ir_values.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.res_id IS 'Record ID';


--
-- Name: COLUMN ir_values.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN ir_values.action_id IS 'Action (change only)';


--
-- Name: ir_values_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE ir_values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ir_values_id_seq OWNER TO odoo;

--
-- Name: ir_values_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE ir_values_id_seq OWNED BY ir_values.id;


--
-- Name: ledger_journal_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE ledger_journal_rel (
    ledger_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.ledger_journal_rel OWNER TO odoo;

--
-- Name: TABLE ledger_journal_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE ledger_journal_rel IS 'RELATION BETWEEN account_analytic_cost_ledger_journal_report AND account_analytic_journal';


--
-- Name: mail_alias; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_alias (
    id integer NOT NULL,
    create_uid integer,
    alias_parent_thread_id integer,
    alias_defaults text NOT NULL,
    alias_contact character varying NOT NULL,
    alias_parent_model_id integer,
    write_uid integer,
    alias_force_thread_id integer,
    alias_model_id integer NOT NULL,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    alias_user_id integer,
    alias_name character varying
);


ALTER TABLE public.mail_alias OWNER TO odoo;

--
-- Name: TABLE mail_alias; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_alias IS 'Email Aliases';


--
-- Name: COLUMN mail_alias.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.create_uid IS 'Created by';


--
-- Name: COLUMN mail_alias.alias_parent_thread_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_parent_thread_id IS 'Parent Record Thread ID';


--
-- Name: COLUMN mail_alias.alias_defaults; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_defaults IS 'Default Values';


--
-- Name: COLUMN mail_alias.alias_contact; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_contact IS 'Alias Contact Security';


--
-- Name: COLUMN mail_alias.alias_parent_model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_parent_model_id IS 'Parent Model';


--
-- Name: COLUMN mail_alias.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_alias.alias_force_thread_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_force_thread_id IS 'Record Thread ID';


--
-- Name: COLUMN mail_alias.alias_model_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_model_id IS 'Aliased Model';


--
-- Name: COLUMN mail_alias.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_alias.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.create_date IS 'Created on';


--
-- Name: COLUMN mail_alias.alias_user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_user_id IS 'Owner';


--
-- Name: COLUMN mail_alias.alias_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_alias.alias_name IS 'Alias Name';


--
-- Name: mail_alias_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_alias_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_alias_id_seq OWNER TO odoo;

--
-- Name: mail_alias_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_alias_id_seq OWNED BY mail_alias.id;


--
-- Name: mail_compose_message; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_compose_message (
    id integer NOT NULL,
    create_date timestamp without time zone,
    no_auto_thread boolean,
    mail_server_id integer,
    write_uid integer,
    notify boolean,
    active_domain character varying,
    subject character varying,
    composition_mode character varying,
    create_uid integer,
    is_log boolean,
    parent_id integer,
    subtype_id integer,
    res_id integer,
    message_id character varying,
    body text,
    model character varying(128),
    record_name character varying,
    write_date timestamp without time zone,
    date timestamp without time zone,
    author_id integer,
    use_active_domain boolean,
    type character varying(12),
    reply_to character varying,
    email_from character varying,
    template_id integer
);


ALTER TABLE public.mail_compose_message OWNER TO odoo;

--
-- Name: TABLE mail_compose_message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_compose_message IS 'Email composition wizard';


--
-- Name: COLUMN mail_compose_message.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.create_date IS 'Created on';


--
-- Name: COLUMN mail_compose_message.no_auto_thread; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.no_auto_thread IS 'No threading for answers';


--
-- Name: COLUMN mail_compose_message.mail_server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.mail_server_id IS 'Outgoing mail server';


--
-- Name: COLUMN mail_compose_message.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_compose_message.notify; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.notify IS 'Notify followers';


--
-- Name: COLUMN mail_compose_message.active_domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.active_domain IS 'Active domain';


--
-- Name: COLUMN mail_compose_message.subject; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.subject IS 'Subject';


--
-- Name: COLUMN mail_compose_message.composition_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.composition_mode IS 'Composition mode';


--
-- Name: COLUMN mail_compose_message.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.create_uid IS 'Created by';


--
-- Name: COLUMN mail_compose_message.is_log; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.is_log IS 'Log an Internal Note';


--
-- Name: COLUMN mail_compose_message.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.parent_id IS 'Parent Message';


--
-- Name: COLUMN mail_compose_message.subtype_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.subtype_id IS 'Subtype';


--
-- Name: COLUMN mail_compose_message.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_compose_message.message_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.message_id IS 'Message-Id';


--
-- Name: COLUMN mail_compose_message.body; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.body IS 'Contents';


--
-- Name: COLUMN mail_compose_message.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.model IS 'Related Document Model';


--
-- Name: COLUMN mail_compose_message.record_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.record_name IS 'Message Record Name';


--
-- Name: COLUMN mail_compose_message.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_compose_message.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.date IS 'Date';


--
-- Name: COLUMN mail_compose_message.author_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.author_id IS 'Author';


--
-- Name: COLUMN mail_compose_message.use_active_domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.use_active_domain IS 'Use active domain';


--
-- Name: COLUMN mail_compose_message.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.type IS 'Type';


--
-- Name: COLUMN mail_compose_message.reply_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.reply_to IS 'Reply-To';


--
-- Name: COLUMN mail_compose_message.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.email_from IS 'From';


--
-- Name: COLUMN mail_compose_message.template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_compose_message.template_id IS 'Use template';


--
-- Name: mail_compose_message_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_compose_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_compose_message_id_seq OWNER TO odoo;

--
-- Name: mail_compose_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_compose_message_id_seq OWNED BY mail_compose_message.id;


--
-- Name: mail_compose_message_ir_attachments_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_compose_message_ir_attachments_rel (
    wizard_id integer NOT NULL,
    attachment_id integer NOT NULL
);


ALTER TABLE public.mail_compose_message_ir_attachments_rel OWNER TO odoo;

--
-- Name: TABLE mail_compose_message_ir_attachments_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_compose_message_ir_attachments_rel IS 'RELATION BETWEEN mail_compose_message AND ir_attachment';


--
-- Name: mail_compose_message_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_compose_message_res_partner_rel (
    wizard_id integer NOT NULL,
    partner_id integer NOT NULL
);


ALTER TABLE public.mail_compose_message_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE mail_compose_message_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_compose_message_res_partner_rel IS 'RELATION BETWEEN mail_compose_message AND res_partner';


--
-- Name: mail_followers; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_followers (
    id integer NOT NULL,
    res_model character varying NOT NULL,
    res_id integer,
    partner_id integer NOT NULL
);


ALTER TABLE public.mail_followers OWNER TO odoo;

--
-- Name: TABLE mail_followers; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_followers IS 'Document Followers';


--
-- Name: COLUMN mail_followers.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_followers.res_model IS 'Related Document Model';


--
-- Name: COLUMN mail_followers.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_followers.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_followers.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_followers.partner_id IS 'Related Partner';


--
-- Name: mail_followers_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_followers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_followers_id_seq OWNER TO odoo;

--
-- Name: mail_followers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_followers_id_seq OWNED BY mail_followers.id;


--
-- Name: mail_followers_mail_message_subtype_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_followers_mail_message_subtype_rel (
    mail_followers_id integer NOT NULL,
    mail_message_subtype_id integer NOT NULL
);


ALTER TABLE public.mail_followers_mail_message_subtype_rel OWNER TO odoo;

--
-- Name: TABLE mail_followers_mail_message_subtype_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_followers_mail_message_subtype_rel IS 'RELATION BETWEEN mail_followers AND mail_message_subtype';


--
-- Name: mail_group; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_group (
    id integer NOT NULL,
    menu_id integer NOT NULL,
    create_date timestamp without time zone,
    description text,
    create_uid integer,
    message_last_post timestamp without time zone,
    image bytea,
    alias_id integer NOT NULL,
    group_public_id integer,
    write_uid integer,
    public character varying NOT NULL,
    image_small bytea,
    image_medium bytea,
    write_date timestamp without time zone,
    name character varying NOT NULL
);


ALTER TABLE public.mail_group OWNER TO odoo;

--
-- Name: TABLE mail_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_group IS 'Discussion group';


--
-- Name: COLUMN mail_group.menu_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.menu_id IS 'Related Menu';


--
-- Name: COLUMN mail_group.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.create_date IS 'Created on';


--
-- Name: COLUMN mail_group.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.description IS 'Description';


--
-- Name: COLUMN mail_group.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.create_uid IS 'Created by';


--
-- Name: COLUMN mail_group.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN mail_group.image; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.image IS 'Photo';


--
-- Name: COLUMN mail_group.alias_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.alias_id IS 'Alias';


--
-- Name: COLUMN mail_group.group_public_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.group_public_id IS 'Authorized Group';


--
-- Name: COLUMN mail_group.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_group.public; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.public IS 'Privacy';


--
-- Name: COLUMN mail_group.image_small; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.image_small IS 'Small-sized photo';


--
-- Name: COLUMN mail_group.image_medium; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.image_medium IS 'Medium-sized photo';


--
-- Name: COLUMN mail_group.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_group.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_group.name IS 'Name';


--
-- Name: mail_group_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_group_id_seq OWNER TO odoo;

--
-- Name: mail_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_group_id_seq OWNED BY mail_group.id;


--
-- Name: mail_group_res_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_group_res_group_rel (
    mail_group_id integer NOT NULL,
    groups_id integer NOT NULL
);


ALTER TABLE public.mail_group_res_group_rel OWNER TO odoo;

--
-- Name: TABLE mail_group_res_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_group_res_group_rel IS 'RELATION BETWEEN mail_group AND res_groups';


--
-- Name: mail_mail; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_mail (
    id integer NOT NULL,
    mail_message_id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    notification boolean,
    auto_delete boolean,
    body_html text,
    write_uid integer,
    email_to text,
    headers text,
    state character varying,
    "references" text,
    write_date timestamp without time zone,
    email_cc character varying,
    fetchmail_server_id integer
);


ALTER TABLE public.mail_mail OWNER TO odoo;

--
-- Name: TABLE mail_mail; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_mail IS 'Outgoing Mails';


--
-- Name: COLUMN mail_mail.mail_message_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.mail_message_id IS 'Message';


--
-- Name: COLUMN mail_mail.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.create_uid IS 'Created by';


--
-- Name: COLUMN mail_mail.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.create_date IS 'Created on';


--
-- Name: COLUMN mail_mail.notification; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.notification IS 'Is Notification';


--
-- Name: COLUMN mail_mail.auto_delete; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.auto_delete IS 'Auto Delete';


--
-- Name: COLUMN mail_mail.body_html; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.body_html IS 'Rich-text Contents';


--
-- Name: COLUMN mail_mail.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_mail.email_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.email_to IS 'To';


--
-- Name: COLUMN mail_mail.headers; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.headers IS 'Headers';


--
-- Name: COLUMN mail_mail.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.state IS 'Status';


--
-- Name: COLUMN mail_mail."references"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail."references" IS 'References';


--
-- Name: COLUMN mail_mail.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_mail.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.email_cc IS 'Cc';


--
-- Name: COLUMN mail_mail.fetchmail_server_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_mail.fetchmail_server_id IS 'Inbound Mail Server';


--
-- Name: mail_mail_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_mail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_mail_id_seq OWNER TO odoo;

--
-- Name: mail_mail_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_mail_id_seq OWNED BY mail_mail.id;


--
-- Name: mail_mail_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_mail_res_partner_rel (
    mail_mail_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.mail_mail_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE mail_mail_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_mail_res_partner_rel IS 'RELATION BETWEEN mail_mail AND res_partner';


--
-- Name: mail_message_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_message_id_seq OWNER TO odoo;

--
-- Name: mail_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_message_id_seq OWNED BY mail_message.id;


--
-- Name: mail_message_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_message_res_partner_rel (
    mail_message_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.mail_message_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE mail_message_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_message_res_partner_rel IS 'RELATION BETWEEN mail_message AND res_partner';


--
-- Name: mail_message_subtype; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_message_subtype (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    description text,
    sequence integer,
    "default" boolean,
    res_model character varying,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone,
    relation_field character varying,
    hidden boolean,
    name character varying NOT NULL
);


ALTER TABLE public.mail_message_subtype OWNER TO odoo;

--
-- Name: TABLE mail_message_subtype; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_message_subtype IS 'Message subtypes';


--
-- Name: COLUMN mail_message_subtype.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.create_uid IS 'Created by';


--
-- Name: COLUMN mail_message_subtype.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.create_date IS 'Created on';


--
-- Name: COLUMN mail_message_subtype.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.description IS 'Description';


--
-- Name: COLUMN mail_message_subtype.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.sequence IS 'Sequence';


--
-- Name: COLUMN mail_message_subtype."default"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype."default" IS 'Default';


--
-- Name: COLUMN mail_message_subtype.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.res_model IS 'Model';


--
-- Name: COLUMN mail_message_subtype.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_message_subtype.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.parent_id IS 'Parent';


--
-- Name: COLUMN mail_message_subtype.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_message_subtype.relation_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.relation_field IS 'Relation field';


--
-- Name: COLUMN mail_message_subtype.hidden; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.hidden IS 'Hidden';


--
-- Name: COLUMN mail_message_subtype.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_message_subtype.name IS 'Message Type';


--
-- Name: mail_message_subtype_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_message_subtype_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_message_subtype_id_seq OWNER TO odoo;

--
-- Name: mail_message_subtype_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_message_subtype_id_seq OWNED BY mail_message_subtype.id;


--
-- Name: mail_notification; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_notification (
    id integer NOT NULL,
    is_read boolean,
    starred boolean,
    partner_id integer NOT NULL,
    message_id integer NOT NULL
);


ALTER TABLE public.mail_notification OWNER TO odoo;

--
-- Name: TABLE mail_notification; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_notification IS 'Notifications';


--
-- Name: COLUMN mail_notification.is_read; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_notification.is_read IS 'Read';


--
-- Name: COLUMN mail_notification.starred; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_notification.starred IS 'Starred';


--
-- Name: COLUMN mail_notification.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_notification.partner_id IS 'Contact';


--
-- Name: COLUMN mail_notification.message_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_notification.message_id IS 'Message';


--
-- Name: mail_notification_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_notification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_notification_id_seq OWNER TO odoo;

--
-- Name: mail_notification_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_notification_id_seq OWNED BY mail_notification.id;


--
-- Name: mail_vote; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_vote (
    message_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.mail_vote OWNER TO odoo;

--
-- Name: TABLE mail_vote; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_vote IS 'RELATION BETWEEN mail_message AND res_users';


--
-- Name: mail_wizard_invite; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_wizard_invite (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    res_model character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    message text,
    res_id integer,
    send_mail boolean
);


ALTER TABLE public.mail_wizard_invite OWNER TO odoo;

--
-- Name: TABLE mail_wizard_invite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_wizard_invite IS 'Invite wizard';


--
-- Name: COLUMN mail_wizard_invite.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.create_uid IS 'Created by';


--
-- Name: COLUMN mail_wizard_invite.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.create_date IS 'Created on';


--
-- Name: COLUMN mail_wizard_invite.res_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.res_model IS 'Related Document Model';


--
-- Name: COLUMN mail_wizard_invite.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mail_wizard_invite.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.write_date IS 'Last Updated on';


--
-- Name: COLUMN mail_wizard_invite.message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.message IS 'Message';


--
-- Name: COLUMN mail_wizard_invite.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_wizard_invite.send_mail; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mail_wizard_invite.send_mail IS 'Send Email';


--
-- Name: mail_wizard_invite_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mail_wizard_invite_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mail_wizard_invite_id_seq OWNER TO odoo;

--
-- Name: mail_wizard_invite_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mail_wizard_invite_id_seq OWNED BY mail_wizard_invite.id;


--
-- Name: mail_wizard_invite_res_partner_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mail_wizard_invite_res_partner_rel (
    mail_wizard_invite_id integer NOT NULL,
    res_partner_id integer NOT NULL
);


ALTER TABLE public.mail_wizard_invite_res_partner_rel OWNER TO odoo;

--
-- Name: TABLE mail_wizard_invite_res_partner_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mail_wizard_invite_res_partner_rel IS 'RELATION BETWEEN mail_wizard_invite AND res_partner';


--
-- Name: make_procurement; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE make_procurement (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    date_planned date NOT NULL,
    qty numeric NOT NULL,
    warehouse_id integer NOT NULL,
    uom_id integer NOT NULL,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.make_procurement OWNER TO odoo;

--
-- Name: TABLE make_procurement; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE make_procurement IS 'Make Procurements';


--
-- Name: COLUMN make_procurement.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.create_uid IS 'Created by';


--
-- Name: COLUMN make_procurement.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.create_date IS 'Created on';


--
-- Name: COLUMN make_procurement.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.product_id IS 'Product';


--
-- Name: COLUMN make_procurement.date_planned; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.date_planned IS 'Planned Date';


--
-- Name: COLUMN make_procurement.qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.qty IS 'Quantity';


--
-- Name: COLUMN make_procurement.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN make_procurement.uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.uom_id IS 'Unit of Measure';


--
-- Name: COLUMN make_procurement.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.write_date IS 'Last Updated on';


--
-- Name: COLUMN make_procurement.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN make_procurement.write_uid IS 'Last Updated by';


--
-- Name: make_procurement_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE make_procurement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.make_procurement_id_seq OWNER TO odoo;

--
-- Name: make_procurement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE make_procurement_id_seq OWNED BY make_procurement.id;


--
-- Name: meeting_category_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE meeting_category_rel (
    event_id integer NOT NULL,
    type_id integer NOT NULL
);


ALTER TABLE public.meeting_category_rel OWNER TO odoo;

--
-- Name: TABLE meeting_category_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE meeting_category_rel IS 'RELATION BETWEEN calendar_event AND calendar_event_type';


--
-- Name: merge_opportunity_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE merge_opportunity_rel (
    merge_id integer NOT NULL,
    opportunity_id integer NOT NULL
);


ALTER TABLE public.merge_opportunity_rel OWNER TO odoo;

--
-- Name: TABLE merge_opportunity_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE merge_opportunity_rel IS 'RELATION BETWEEN crm_merge_opportunity AND crm_lead';


--
-- Name: message_attachment_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE message_attachment_rel (
    message_id integer NOT NULL,
    attachment_id integer NOT NULL
);


ALTER TABLE public.message_attachment_rel OWNER TO odoo;

--
-- Name: TABLE message_attachment_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE message_attachment_rel IS 'RELATION BETWEEN mail_message AND ir_attachment';


--
-- Name: mrp_bom; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_bom (
    id integer NOT NULL,
    date_stop date,
    code character varying(16),
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    sequence integer,
    write_uid integer,
    product_qty numeric NOT NULL,
    create_uid integer,
    date_start date,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    product_tmpl_id integer NOT NULL,
    routing_id integer,
    type character varying NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    product_efficiency double precision NOT NULL,
    name character varying,
    product_rounding double precision,
    product_id integer,
    "position" character varying
);


ALTER TABLE public.mrp_bom OWNER TO odoo;

--
-- Name: TABLE mrp_bom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_bom IS 'Bill of Material';


--
-- Name: COLUMN mrp_bom.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.date_stop IS 'Valid Until';


--
-- Name: COLUMN mrp_bom.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.code IS 'Reference';


--
-- Name: COLUMN mrp_bom.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.create_date IS 'Created on';


--
-- Name: COLUMN mrp_bom.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_bom.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.sequence IS 'Sequence';


--
-- Name: COLUMN mrp_bom.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_bom.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_qty IS 'Product Quantity';


--
-- Name: COLUMN mrp_bom.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_bom.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.date_start IS 'Valid From';


--
-- Name: COLUMN mrp_bom.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN mrp_bom.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.company_id IS 'Company';


--
-- Name: COLUMN mrp_bom.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_tmpl_id IS 'Product';


--
-- Name: COLUMN mrp_bom.routing_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.routing_id IS 'Routing';


--
-- Name: COLUMN mrp_bom.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.type IS 'BoM Type';


--
-- Name: COLUMN mrp_bom.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_bom.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.active IS 'Active';


--
-- Name: COLUMN mrp_bom.product_efficiency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_efficiency IS 'Manufacturing Efficiency';


--
-- Name: COLUMN mrp_bom.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.name IS 'Name';


--
-- Name: COLUMN mrp_bom.product_rounding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_rounding IS 'Product Rounding';


--
-- Name: COLUMN mrp_bom.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom.product_id IS 'Product Variant';


--
-- Name: COLUMN mrp_bom."position"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom."position" IS 'Internal Reference';


--
-- Name: mrp_bom_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_bom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_bom_id_seq OWNER TO odoo;

--
-- Name: mrp_bom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_bom_id_seq OWNED BY mrp_bom.id;


--
-- Name: mrp_bom_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_bom_line (
    id integer NOT NULL,
    product_uos_qty double precision,
    date_stop date,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    product_uom integer NOT NULL,
    sequence integer,
    date_start date,
    create_uid integer,
    write_uid integer,
    routing_id integer,
    product_rounding double precision,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL,
    product_uos integer,
    product_efficiency double precision NOT NULL,
    type character varying NOT NULL,
    bom_id integer NOT NULL,
    CONSTRAINT mrp_bom_line_bom_qty_zero CHECK ((product_qty > (0)::numeric))
);


ALTER TABLE public.mrp_bom_line OWNER TO odoo;

--
-- Name: TABLE mrp_bom_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_bom_line IS 'mrp.bom.line';


--
-- Name: COLUMN mrp_bom_line.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_uos_qty IS 'Product UOS Qty';


--
-- Name: COLUMN mrp_bom_line.date_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.date_stop IS 'Valid Until';


--
-- Name: COLUMN mrp_bom_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.create_date IS 'Created on';


--
-- Name: COLUMN mrp_bom_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_id IS 'Product';


--
-- Name: COLUMN mrp_bom_line.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_bom_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.sequence IS 'Sequence';


--
-- Name: COLUMN mrp_bom_line.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.date_start IS 'Valid From';


--
-- Name: COLUMN mrp_bom_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_bom_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_bom_line.routing_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.routing_id IS 'Routing';


--
-- Name: COLUMN mrp_bom_line.product_rounding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_rounding IS 'Product Rounding';


--
-- Name: COLUMN mrp_bom_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_bom_line.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_qty IS 'Product Quantity';


--
-- Name: COLUMN mrp_bom_line.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_uos IS 'Product UOS';


--
-- Name: COLUMN mrp_bom_line.product_efficiency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.product_efficiency IS 'Manufacturing Efficiency';


--
-- Name: COLUMN mrp_bom_line.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.type IS 'BoM Line Type';


--
-- Name: COLUMN mrp_bom_line.bom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_bom_line.bom_id IS 'Parent BoM';


--
-- Name: mrp_bom_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_bom_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_bom_line_id_seq OWNER TO odoo;

--
-- Name: mrp_bom_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_bom_line_id_seq OWNED BY mrp_bom_line.id;


--
-- Name: mrp_bom_line_mrp_property_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_bom_line_mrp_property_rel (
    mrp_bom_line_id integer NOT NULL,
    mrp_property_id integer NOT NULL
);


ALTER TABLE public.mrp_bom_line_mrp_property_rel OWNER TO odoo;

--
-- Name: TABLE mrp_bom_line_mrp_property_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_bom_line_mrp_property_rel IS 'RELATION BETWEEN mrp_bom_line AND mrp_property';


--
-- Name: mrp_bom_line_product_attribute_value_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_bom_line_product_attribute_value_rel (
    mrp_bom_line_id integer NOT NULL,
    product_attribute_value_id integer NOT NULL
);


ALTER TABLE public.mrp_bom_line_product_attribute_value_rel OWNER TO odoo;

--
-- Name: TABLE mrp_bom_line_product_attribute_value_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_bom_line_product_attribute_value_rel IS 'RELATION BETWEEN mrp_bom_line AND product_attribute_value';


--
-- Name: mrp_bom_mrp_property_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_bom_mrp_property_rel (
    mrp_bom_id integer NOT NULL,
    mrp_property_id integer NOT NULL
);


ALTER TABLE public.mrp_bom_mrp_property_rel OWNER TO odoo;

--
-- Name: TABLE mrp_bom_mrp_property_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_bom_mrp_property_rel IS 'RELATION BETWEEN mrp_bom AND mrp_property';


--
-- Name: mrp_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_config_settings (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    module_mrp_byproduct boolean,
    group_mrp_properties boolean,
    module_product_manufacturer boolean,
    group_mrp_routings boolean,
    module_mrp_repair boolean,
    write_date timestamp without time zone,
    module_mrp_operations boolean,
    write_uid integer
);


ALTER TABLE public.mrp_config_settings OWNER TO odoo;

--
-- Name: TABLE mrp_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_config_settings IS 'mrp.config.settings';


--
-- Name: COLUMN mrp_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN mrp_config_settings.module_mrp_byproduct; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.module_mrp_byproduct IS 'Produce several products from one manufacturing order';


--
-- Name: COLUMN mrp_config_settings.group_mrp_properties; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.group_mrp_properties IS 'Allow several bill of materials per products using properties';


--
-- Name: COLUMN mrp_config_settings.module_product_manufacturer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.module_product_manufacturer IS 'Define manufacturers on products ';


--
-- Name: COLUMN mrp_config_settings.group_mrp_routings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.group_mrp_routings IS 'Manage routings and work orders ';


--
-- Name: COLUMN mrp_config_settings.module_mrp_repair; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.module_mrp_repair IS 'Manage repairs of products ';


--
-- Name: COLUMN mrp_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_config_settings.module_mrp_operations; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.module_mrp_operations IS 'Allow detailed planning of work order';


--
-- Name: COLUMN mrp_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_config_settings.write_uid IS 'Last Updated by';


--
-- Name: mrp_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_config_settings_id_seq OWNER TO odoo;

--
-- Name: mrp_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_config_settings_id_seq OWNED BY mrp_config_settings.id;


--
-- Name: mrp_product_price; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_product_price (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    number integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.mrp_product_price OWNER TO odoo;

--
-- Name: TABLE mrp_product_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_product_price IS 'Product Price';


--
-- Name: COLUMN mrp_product_price.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_price.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_product_price.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_price.create_date IS 'Created on';


--
-- Name: COLUMN mrp_product_price.number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_price.number IS 'Quantity';


--
-- Name: COLUMN mrp_product_price.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_price.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_product_price.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_price.write_date IS 'Last Updated on';


--
-- Name: mrp_product_price_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_product_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_product_price_id_seq OWNER TO odoo;

--
-- Name: mrp_product_price_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_product_price_id_seq OWNED BY mrp_product_price.id;


--
-- Name: mrp_product_produce; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_product_produce (
    id integer NOT NULL,
    track_production boolean,
    create_date timestamp without time zone,
    product_id integer,
    create_uid integer,
    write_uid integer,
    mode character varying NOT NULL,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL,
    lot_id integer
);


ALTER TABLE public.mrp_product_produce OWNER TO odoo;

--
-- Name: TABLE mrp_product_produce; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_product_produce IS 'Product Produce';


--
-- Name: COLUMN mrp_product_produce.track_production; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.track_production IS 'Track production';


--
-- Name: COLUMN mrp_product_produce.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.create_date IS 'Created on';


--
-- Name: COLUMN mrp_product_produce.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.product_id IS 'unknown';


--
-- Name: COLUMN mrp_product_produce.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_product_produce.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_product_produce.mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.mode IS 'Mode';


--
-- Name: COLUMN mrp_product_produce.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_product_produce.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.product_qty IS 'Select Quantity';


--
-- Name: COLUMN mrp_product_produce.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce.lot_id IS 'Lot';


--
-- Name: mrp_product_produce_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_product_produce_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_product_produce_id_seq OWNER TO odoo;

--
-- Name: mrp_product_produce_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_product_produce_id_seq OWNED BY mrp_product_produce.id;


--
-- Name: mrp_product_produce_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_product_produce_line (
    id integer NOT NULL,
    create_date timestamp without time zone,
    product_id integer,
    create_uid integer,
    produce_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    product_qty numeric,
    lot_id integer
);


ALTER TABLE public.mrp_product_produce_line OWNER TO odoo;

--
-- Name: TABLE mrp_product_produce_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_product_produce_line IS 'Product Produce Consume lines';


--
-- Name: COLUMN mrp_product_produce_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.create_date IS 'Created on';


--
-- Name: COLUMN mrp_product_produce_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.product_id IS 'Product';


--
-- Name: COLUMN mrp_product_produce_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_product_produce_line.produce_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.produce_id IS 'unknown';


--
-- Name: COLUMN mrp_product_produce_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_product_produce_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_product_produce_line.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.product_qty IS 'Quantity (in default UoM)';


--
-- Name: COLUMN mrp_product_produce_line.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_product_produce_line.lot_id IS 'Lot';


--
-- Name: mrp_product_produce_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_product_produce_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_product_produce_line_id_seq OWNER TO odoo;

--
-- Name: mrp_product_produce_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_product_produce_line_id_seq OWNED BY mrp_product_produce_line.id;


--
-- Name: mrp_production; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_production (
    id integer NOT NULL,
    origin character varying,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    product_uos_qty double precision,
    write_uid integer,
    product_qty numeric NOT NULL,
    product_uos integer,
    create_uid integer,
    user_id integer,
    location_src_id integer NOT NULL,
    cycle_total numeric,
    date_start timestamp without time zone,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    priority character varying,
    state character varying,
    date_finished timestamp without time zone,
    bom_id integer,
    write_date timestamp without time zone,
    name character varying NOT NULL,
    product_id integer NOT NULL,
    move_prod_id integer,
    date_planned timestamp without time zone NOT NULL,
    routing_id integer,
    ready_production boolean,
    hour_total numeric,
    location_dest_id integer NOT NULL
);


ALTER TABLE public.mrp_production OWNER TO odoo;

--
-- Name: TABLE mrp_production; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_production IS 'Manufacturing Order';


--
-- Name: COLUMN mrp_production.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.origin IS 'Source Document';


--
-- Name: COLUMN mrp_production.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.create_date IS 'Created on';


--
-- Name: COLUMN mrp_production.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_production.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.product_uos_qty IS 'Product UoS Quantity';


--
-- Name: COLUMN mrp_production.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_production.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.product_qty IS 'Product Quantity';


--
-- Name: COLUMN mrp_production.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.product_uos IS 'Product UoS';


--
-- Name: COLUMN mrp_production.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_production.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.user_id IS 'Responsible';


--
-- Name: COLUMN mrp_production.location_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.location_src_id IS 'Raw Materials Location';


--
-- Name: COLUMN mrp_production.cycle_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.cycle_total IS 'Total Cycles';


--
-- Name: COLUMN mrp_production.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.date_start IS 'Start Date';


--
-- Name: COLUMN mrp_production.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN mrp_production.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.company_id IS 'Company';


--
-- Name: COLUMN mrp_production.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.priority IS 'Priority';


--
-- Name: COLUMN mrp_production.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.state IS 'Status';


--
-- Name: COLUMN mrp_production.date_finished; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.date_finished IS 'End Date';


--
-- Name: COLUMN mrp_production.bom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.bom_id IS 'Bill of Material';


--
-- Name: COLUMN mrp_production.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_production.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.name IS 'Reference';


--
-- Name: COLUMN mrp_production.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.product_id IS 'Product';


--
-- Name: COLUMN mrp_production.move_prod_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.move_prod_id IS 'Product Move';


--
-- Name: COLUMN mrp_production.date_planned; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.date_planned IS 'Scheduled Date';


--
-- Name: COLUMN mrp_production.routing_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.routing_id IS 'Routing';


--
-- Name: COLUMN mrp_production.ready_production; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.ready_production IS 'unknown';


--
-- Name: COLUMN mrp_production.hour_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.hour_total IS 'Total Hours';


--
-- Name: COLUMN mrp_production.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production.location_dest_id IS 'Finished Products Location';


--
-- Name: mrp_production_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_production_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_production_id_seq OWNER TO odoo;

--
-- Name: mrp_production_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_production_id_seq OWNED BY mrp_production.id;


--
-- Name: mrp_production_product_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_production_product_line (
    id integer NOT NULL,
    product_uos_qty double precision,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    product_uom integer NOT NULL,
    create_uid integer,
    write_uid integer,
    production_id integer,
    product_qty numeric NOT NULL,
    product_uos integer,
    write_date timestamp without time zone,
    product_id integer NOT NULL
);


ALTER TABLE public.mrp_production_product_line OWNER TO odoo;

--
-- Name: TABLE mrp_production_product_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_production_product_line IS 'Production Scheduled Product';


--
-- Name: COLUMN mrp_production_product_line.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.product_uos_qty IS 'Product UOS Quantity';


--
-- Name: COLUMN mrp_production_product_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.create_date IS 'Created on';


--
-- Name: COLUMN mrp_production_product_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.name IS 'Name';


--
-- Name: COLUMN mrp_production_product_line.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_production_product_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_production_product_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_production_product_line.production_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.production_id IS 'Production Order';


--
-- Name: COLUMN mrp_production_product_line.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.product_qty IS 'Product Quantity';


--
-- Name: COLUMN mrp_production_product_line.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.product_uos IS 'Product UOS';


--
-- Name: COLUMN mrp_production_product_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_production_product_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_product_line.product_id IS 'Product';


--
-- Name: mrp_production_product_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_production_product_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_production_product_line_id_seq OWNER TO odoo;

--
-- Name: mrp_production_product_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_production_product_line_id_seq OWNED BY mrp_production_product_line.id;


--
-- Name: mrp_production_workcenter_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_production_workcenter_line (
    id integer NOT NULL,
    create_uid integer,
    cycle numeric,
    create_date timestamp without time zone,
    hour numeric,
    sequence integer NOT NULL,
    message_last_post timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    workcenter_id integer NOT NULL,
    production_id integer NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.mrp_production_workcenter_line OWNER TO odoo;

--
-- Name: TABLE mrp_production_workcenter_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_production_workcenter_line IS 'Work Order';


--
-- Name: COLUMN mrp_production_workcenter_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_production_workcenter_line.cycle; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.cycle IS 'Number of Cycles';


--
-- Name: COLUMN mrp_production_workcenter_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.create_date IS 'Created on';


--
-- Name: COLUMN mrp_production_workcenter_line.hour; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.hour IS 'Number of Hours';


--
-- Name: COLUMN mrp_production_workcenter_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.sequence IS 'Sequence';


--
-- Name: COLUMN mrp_production_workcenter_line.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN mrp_production_workcenter_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_production_workcenter_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_production_workcenter_line.workcenter_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.workcenter_id IS 'Work Center';


--
-- Name: COLUMN mrp_production_workcenter_line.production_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.production_id IS 'Manufacturing Order';


--
-- Name: COLUMN mrp_production_workcenter_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_production_workcenter_line.name IS 'Work Order';


--
-- Name: mrp_production_workcenter_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_production_workcenter_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_production_workcenter_line_id_seq OWNER TO odoo;

--
-- Name: mrp_production_workcenter_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_production_workcenter_line_id_seq OWNED BY mrp_production_workcenter_line.id;


--
-- Name: mrp_property; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_property (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    group_id integer NOT NULL,
    composition character varying NOT NULL,
    description text
);


ALTER TABLE public.mrp_property OWNER TO odoo;

--
-- Name: TABLE mrp_property; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_property IS 'Property';


--
-- Name: COLUMN mrp_property.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_property.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.create_date IS 'Created on';


--
-- Name: COLUMN mrp_property.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.name IS 'Name';


--
-- Name: COLUMN mrp_property.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_property.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_property.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.group_id IS 'Property Group';


--
-- Name: COLUMN mrp_property.composition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.composition IS 'Properties composition';


--
-- Name: COLUMN mrp_property.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property.description IS 'Description';


--
-- Name: mrp_property_group; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_property_group (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    description text,
    write_uid integer,
    write_date timestamp without time zone,
    name character varying NOT NULL
);


ALTER TABLE public.mrp_property_group OWNER TO odoo;

--
-- Name: TABLE mrp_property_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_property_group IS 'Property Group';


--
-- Name: COLUMN mrp_property_group.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_property_group.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.create_date IS 'Created on';


--
-- Name: COLUMN mrp_property_group.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.description IS 'Description';


--
-- Name: COLUMN mrp_property_group.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_property_group.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_property_group.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_property_group.name IS 'Property Group';


--
-- Name: mrp_property_group_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_property_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_property_group_id_seq OWNER TO odoo;

--
-- Name: mrp_property_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_property_group_id_seq OWNED BY mrp_property_group.id;


--
-- Name: mrp_property_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_property_id_seq OWNER TO odoo;

--
-- Name: mrp_property_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_property_id_seq OWNED BY mrp_property.id;


--
-- Name: mrp_repair; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_repair (
    id integer NOT NULL,
    address_id integer,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    internal_notes text,
    write_uid integer,
    product_qty numeric NOT NULL,
    lot_id integer,
    quotation_notes text,
    partner_id integer,
    create_uid integer,
    amount_untaxed numeric,
    location_id integer NOT NULL,
    message_last_post timestamp without time zone,
    company_id integer,
    amount_tax numeric,
    state character varying,
    pricelist_id integer,
    invoiced boolean,
    write_date timestamp without time zone,
    partner_invoice_id integer,
    move_id integer,
    amount_total numeric,
    name character varying NOT NULL,
    guarantee_limit date,
    invoice_method character varying NOT NULL,
    product_id integer NOT NULL,
    location_dest_id integer NOT NULL,
    invoice_id integer,
    repaired boolean
);


ALTER TABLE public.mrp_repair OWNER TO odoo;

--
-- Name: TABLE mrp_repair; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_repair IS 'Repair Order';


--
-- Name: COLUMN mrp_repair.address_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.address_id IS 'Delivery Address';


--
-- Name: COLUMN mrp_repair.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.create_date IS 'Created on';


--
-- Name: COLUMN mrp_repair.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_repair.internal_notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.internal_notes IS 'Internal Notes';


--
-- Name: COLUMN mrp_repair.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_repair.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.product_qty IS 'Product Quantity';


--
-- Name: COLUMN mrp_repair.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.lot_id IS 'Repaired Lot';


--
-- Name: COLUMN mrp_repair.quotation_notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.quotation_notes IS 'Quotation Notes';


--
-- Name: COLUMN mrp_repair.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.partner_id IS 'Partner';


--
-- Name: COLUMN mrp_repair.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_repair.amount_untaxed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.amount_untaxed IS 'Untaxed Amount';


--
-- Name: COLUMN mrp_repair.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.location_id IS 'Current Location';


--
-- Name: COLUMN mrp_repair.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN mrp_repair.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.company_id IS 'Company';


--
-- Name: COLUMN mrp_repair.amount_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.amount_tax IS 'Taxes';


--
-- Name: COLUMN mrp_repair.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.state IS 'Status';


--
-- Name: COLUMN mrp_repair.pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.pricelist_id IS 'Pricelist';


--
-- Name: COLUMN mrp_repair.invoiced; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.invoiced IS 'Invoiced';


--
-- Name: COLUMN mrp_repair.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_repair.partner_invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.partner_invoice_id IS 'Invoicing Address';


--
-- Name: COLUMN mrp_repair.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.move_id IS 'Move';


--
-- Name: COLUMN mrp_repair.amount_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.amount_total IS 'Total';


--
-- Name: COLUMN mrp_repair.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.name IS 'Repair Reference';


--
-- Name: COLUMN mrp_repair.guarantee_limit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.guarantee_limit IS 'Warranty Expiration';


--
-- Name: COLUMN mrp_repair.invoice_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.invoice_method IS 'Invoice Method';


--
-- Name: COLUMN mrp_repair.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.product_id IS 'Product to Repair';


--
-- Name: COLUMN mrp_repair.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.location_dest_id IS 'Delivery Location';


--
-- Name: COLUMN mrp_repair.invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.invoice_id IS 'Invoice';


--
-- Name: COLUMN mrp_repair.repaired; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair.repaired IS 'Repaired';


--
-- Name: mrp_repair_cancel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_repair_cancel (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.mrp_repair_cancel OWNER TO odoo;

--
-- Name: TABLE mrp_repair_cancel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_repair_cancel IS 'Cancel Repair';


--
-- Name: COLUMN mrp_repair_cancel.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_cancel.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_repair_cancel.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_cancel.create_date IS 'Created on';


--
-- Name: COLUMN mrp_repair_cancel.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_cancel.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_repair_cancel.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_cancel.write_uid IS 'Last Updated by';


--
-- Name: mrp_repair_cancel_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_repair_cancel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_repair_cancel_id_seq OWNER TO odoo;

--
-- Name: mrp_repair_cancel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_repair_cancel_id_seq OWNED BY mrp_repair_cancel.id;


--
-- Name: mrp_repair_fee; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_repair_fee (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer,
    product_uom integer NOT NULL,
    repair_id integer NOT NULL,
    invoice_line_id integer,
    price_unit double precision NOT NULL,
    product_uom_qty numeric NOT NULL,
    write_uid integer,
    to_invoice boolean,
    write_date timestamp without time zone,
    invoiced boolean,
    name character varying NOT NULL
);


ALTER TABLE public.mrp_repair_fee OWNER TO odoo;

--
-- Name: TABLE mrp_repair_fee; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_repair_fee IS 'Repair Fees Line';


--
-- Name: COLUMN mrp_repair_fee.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_repair_fee.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.create_date IS 'Created on';


--
-- Name: COLUMN mrp_repair_fee.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.product_id IS 'Product';


--
-- Name: COLUMN mrp_repair_fee.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_repair_fee.repair_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.repair_id IS 'Repair Order Reference';


--
-- Name: COLUMN mrp_repair_fee.invoice_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.invoice_line_id IS 'Invoice Line';


--
-- Name: COLUMN mrp_repair_fee.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.price_unit IS 'Unit Price';


--
-- Name: COLUMN mrp_repair_fee.product_uom_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.product_uom_qty IS 'Quantity';


--
-- Name: COLUMN mrp_repair_fee.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_repair_fee.to_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.to_invoice IS 'To Invoice';


--
-- Name: COLUMN mrp_repair_fee.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_repair_fee.invoiced; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.invoiced IS 'Invoiced';


--
-- Name: COLUMN mrp_repair_fee.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_fee.name IS 'Description';


--
-- Name: mrp_repair_fee_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_repair_fee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_repair_fee_id_seq OWNER TO odoo;

--
-- Name: mrp_repair_fee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_repair_fee_id_seq OWNED BY mrp_repair_fee.id;


--
-- Name: mrp_repair_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_repair_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_repair_id_seq OWNER TO odoo;

--
-- Name: mrp_repair_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_repair_id_seq OWNED BY mrp_repair.id;


--
-- Name: mrp_repair_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_repair_line (
    id integer NOT NULL,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    price_unit numeric NOT NULL,
    product_uom_qty numeric NOT NULL,
    write_uid integer,
    lot_id integer,
    location_id integer NOT NULL,
    invoiced boolean,
    create_uid integer,
    state character varying NOT NULL,
    type character varying NOT NULL,
    invoice_line_id integer,
    repair_id integer,
    write_date timestamp without time zone,
    move_id integer,
    name character varying NOT NULL,
    product_id integer NOT NULL,
    to_invoice boolean,
    location_dest_id integer NOT NULL
);


ALTER TABLE public.mrp_repair_line OWNER TO odoo;

--
-- Name: TABLE mrp_repair_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_repair_line IS 'Repair Line';


--
-- Name: COLUMN mrp_repair_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.create_date IS 'Created on';


--
-- Name: COLUMN mrp_repair_line.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_repair_line.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.price_unit IS 'Unit Price';


--
-- Name: COLUMN mrp_repair_line.product_uom_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.product_uom_qty IS 'Quantity';


--
-- Name: COLUMN mrp_repair_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_repair_line.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.lot_id IS 'Lot';


--
-- Name: COLUMN mrp_repair_line.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.location_id IS 'Source Location';


--
-- Name: COLUMN mrp_repair_line.invoiced; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.invoiced IS 'Invoiced';


--
-- Name: COLUMN mrp_repair_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_repair_line.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.state IS 'Status';


--
-- Name: COLUMN mrp_repair_line.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.type IS 'Type';


--
-- Name: COLUMN mrp_repair_line.invoice_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.invoice_line_id IS 'Invoice Line';


--
-- Name: COLUMN mrp_repair_line.repair_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.repair_id IS 'Repair Order Reference';


--
-- Name: COLUMN mrp_repair_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_repair_line.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.move_id IS 'Inventory Move';


--
-- Name: COLUMN mrp_repair_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.name IS 'Description';


--
-- Name: COLUMN mrp_repair_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.product_id IS 'Product';


--
-- Name: COLUMN mrp_repair_line.to_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.to_invoice IS 'To Invoice';


--
-- Name: COLUMN mrp_repair_line.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_line.location_dest_id IS 'Dest. Location';


--
-- Name: mrp_repair_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_repair_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_repair_line_id_seq OWNER TO odoo;

--
-- Name: mrp_repair_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_repair_line_id_seq OWNED BY mrp_repair_line.id;


--
-- Name: mrp_repair_make_invoice; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_repair_make_invoice (
    id integer NOT NULL,
    create_uid integer,
    "group" boolean,
    write_uid integer,
    write_date timestamp without time zone,
    create_date timestamp without time zone
);


ALTER TABLE public.mrp_repair_make_invoice OWNER TO odoo;

--
-- Name: TABLE mrp_repair_make_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_repair_make_invoice IS 'Make Invoice';


--
-- Name: COLUMN mrp_repair_make_invoice.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_make_invoice.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_repair_make_invoice."group"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_make_invoice."group" IS 'Group by partner invoice address';


--
-- Name: COLUMN mrp_repair_make_invoice.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_make_invoice.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_repair_make_invoice.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_make_invoice.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_repair_make_invoice.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_repair_make_invoice.create_date IS 'Created on';


--
-- Name: mrp_repair_make_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_repair_make_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_repair_make_invoice_id_seq OWNER TO odoo;

--
-- Name: mrp_repair_make_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_repair_make_invoice_id_seq OWNED BY mrp_repair_make_invoice.id;


--
-- Name: mrp_routing; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_routing (
    id integer NOT NULL,
    create_uid integer,
    code character varying(8),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    note text,
    write_date timestamp without time zone,
    active boolean,
    location_id integer
);


ALTER TABLE public.mrp_routing OWNER TO odoo;

--
-- Name: TABLE mrp_routing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_routing IS 'Routing';


--
-- Name: COLUMN mrp_routing.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_routing.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.code IS 'Code';


--
-- Name: COLUMN mrp_routing.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.create_date IS 'Created on';


--
-- Name: COLUMN mrp_routing.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.name IS 'Name';


--
-- Name: COLUMN mrp_routing.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.company_id IS 'Company';


--
-- Name: COLUMN mrp_routing.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_routing.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.note IS 'Description';


--
-- Name: COLUMN mrp_routing.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_routing.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.active IS 'Active';


--
-- Name: COLUMN mrp_routing.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing.location_id IS 'Production Location';


--
-- Name: mrp_routing_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_routing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_routing_id_seq OWNER TO odoo;

--
-- Name: mrp_routing_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_routing_id_seq OWNED BY mrp_routing.id;


--
-- Name: mrp_routing_workcenter; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_routing_workcenter (
    id integer NOT NULL,
    create_uid integer,
    cycle_nbr double precision NOT NULL,
    name character varying NOT NULL,
    sequence integer,
    company_id integer,
    write_uid integer,
    note text,
    write_date timestamp without time zone,
    workcenter_id integer NOT NULL,
    routing_id integer,
    create_date timestamp without time zone,
    hour_nbr double precision NOT NULL
);


ALTER TABLE public.mrp_routing_workcenter OWNER TO odoo;

--
-- Name: TABLE mrp_routing_workcenter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_routing_workcenter IS 'Work Center Usage';


--
-- Name: COLUMN mrp_routing_workcenter.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_routing_workcenter.cycle_nbr; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.cycle_nbr IS 'Number of Cycles';


--
-- Name: COLUMN mrp_routing_workcenter.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.name IS 'Name';


--
-- Name: COLUMN mrp_routing_workcenter.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.sequence IS 'Sequence';


--
-- Name: COLUMN mrp_routing_workcenter.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.company_id IS 'Company';


--
-- Name: COLUMN mrp_routing_workcenter.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_routing_workcenter.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.note IS 'Description';


--
-- Name: COLUMN mrp_routing_workcenter.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_routing_workcenter.workcenter_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.workcenter_id IS 'Work Center';


--
-- Name: COLUMN mrp_routing_workcenter.routing_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.routing_id IS 'Parent Routing';


--
-- Name: COLUMN mrp_routing_workcenter.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.create_date IS 'Created on';


--
-- Name: COLUMN mrp_routing_workcenter.hour_nbr; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_routing_workcenter.hour_nbr IS 'Number of Hours';


--
-- Name: mrp_routing_workcenter_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_routing_workcenter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_routing_workcenter_id_seq OWNER TO odoo;

--
-- Name: mrp_routing_workcenter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_routing_workcenter_id_seq OWNED BY mrp_routing_workcenter.id;


--
-- Name: mrp_subproduct; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_subproduct (
    id integer NOT NULL,
    subproduct_type character varying NOT NULL,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    product_uom integer NOT NULL,
    create_uid integer,
    write_uid integer,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL,
    bom_id integer
);


ALTER TABLE public.mrp_subproduct OWNER TO odoo;

--
-- Name: TABLE mrp_subproduct; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_subproduct IS 'Byproduct';


--
-- Name: COLUMN mrp_subproduct.subproduct_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.subproduct_type IS 'Quantity Type';


--
-- Name: COLUMN mrp_subproduct.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.create_date IS 'Created on';


--
-- Name: COLUMN mrp_subproduct.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.product_id IS 'Product';


--
-- Name: COLUMN mrp_subproduct.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN mrp_subproduct.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_subproduct.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_subproduct.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_subproduct.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.product_qty IS 'Product Qty';


--
-- Name: COLUMN mrp_subproduct.bom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_subproduct.bom_id IS 'BoM';


--
-- Name: mrp_subproduct_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_subproduct_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_subproduct_id_seq OWNER TO odoo;

--
-- Name: mrp_subproduct_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_subproduct_id_seq OWNED BY mrp_subproduct.id;


--
-- Name: mrp_workcenter; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_workcenter (
    id integer NOT NULL,
    create_uid integer,
    capacity_per_cycle double precision,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    time_stop double precision,
    costs_journal_id integer,
    resource_id integer NOT NULL,
    costs_hour double precision,
    write_uid integer,
    note text,
    costs_general_account_id integer,
    costs_hour_account_id integer,
    costs_cycle_account_id integer,
    costs_cycle double precision,
    time_start double precision,
    time_cycle double precision,
    product_id integer
);


ALTER TABLE public.mrp_workcenter OWNER TO odoo;

--
-- Name: TABLE mrp_workcenter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_workcenter IS 'Work Center';


--
-- Name: COLUMN mrp_workcenter.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_workcenter.capacity_per_cycle; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.capacity_per_cycle IS 'Capacity per Cycle';


--
-- Name: COLUMN mrp_workcenter.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.create_date IS 'Created on';


--
-- Name: COLUMN mrp_workcenter.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.write_date IS 'Last Updated on';


--
-- Name: COLUMN mrp_workcenter.time_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.time_stop IS 'Time after prod.';


--
-- Name: COLUMN mrp_workcenter.costs_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_journal_id IS 'Analytic Journal';


--
-- Name: COLUMN mrp_workcenter.resource_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.resource_id IS 'Resource';


--
-- Name: COLUMN mrp_workcenter.costs_hour; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_hour IS 'Cost per hour';


--
-- Name: COLUMN mrp_workcenter.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_workcenter.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.note IS 'Description';


--
-- Name: COLUMN mrp_workcenter.costs_general_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_general_account_id IS 'General Account';


--
-- Name: COLUMN mrp_workcenter.costs_hour_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_hour_account_id IS 'Hour Account';


--
-- Name: COLUMN mrp_workcenter.costs_cycle_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_cycle_account_id IS 'Cycle Account';


--
-- Name: COLUMN mrp_workcenter.costs_cycle; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.costs_cycle IS 'Cost per cycle';


--
-- Name: COLUMN mrp_workcenter.time_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.time_start IS 'Time before prod.';


--
-- Name: COLUMN mrp_workcenter.time_cycle; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.time_cycle IS 'Time for 1 cycle (hour)';


--
-- Name: COLUMN mrp_workcenter.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter.product_id IS 'Work Center Product';


--
-- Name: mrp_workcenter_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_workcenter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_workcenter_id_seq OWNER TO odoo;

--
-- Name: mrp_workcenter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_workcenter_id_seq OWNED BY mrp_workcenter.id;


--
-- Name: mrp_workcenter_load; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE mrp_workcenter_load (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    measure_unit character varying NOT NULL,
    write_uid integer,
    time_unit character varying NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.mrp_workcenter_load OWNER TO odoo;

--
-- Name: TABLE mrp_workcenter_load; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE mrp_workcenter_load IS 'Work Center Load';


--
-- Name: COLUMN mrp_workcenter_load.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.create_uid IS 'Created by';


--
-- Name: COLUMN mrp_workcenter_load.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.create_date IS 'Created on';


--
-- Name: COLUMN mrp_workcenter_load.measure_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.measure_unit IS 'Amount measuring unit';


--
-- Name: COLUMN mrp_workcenter_load.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.write_uid IS 'Last Updated by';


--
-- Name: COLUMN mrp_workcenter_load.time_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.time_unit IS 'Type of period';


--
-- Name: COLUMN mrp_workcenter_load.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN mrp_workcenter_load.write_date IS 'Last Updated on';


--
-- Name: mrp_workcenter_load_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE mrp_workcenter_load_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mrp_workcenter_load_id_seq OWNER TO odoo;

--
-- Name: mrp_workcenter_load_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE mrp_workcenter_load_id_seq OWNED BY mrp_workcenter_load.id;


--
-- Name: multi_company_default; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE multi_company_default (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    field_id integer,
    company_id integer NOT NULL,
    object_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    company_dest_id integer NOT NULL,
    expression character varying NOT NULL
);


ALTER TABLE public.multi_company_default OWNER TO odoo;

--
-- Name: TABLE multi_company_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE multi_company_default IS 'Default multi company';


--
-- Name: COLUMN multi_company_default.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.create_uid IS 'Created by';


--
-- Name: COLUMN multi_company_default.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.create_date IS 'Created on';


--
-- Name: COLUMN multi_company_default.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.name IS 'Name';


--
-- Name: COLUMN multi_company_default.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.sequence IS 'Sequence';


--
-- Name: COLUMN multi_company_default.field_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.field_id IS 'Field';


--
-- Name: COLUMN multi_company_default.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.company_id IS 'Main Company';


--
-- Name: COLUMN multi_company_default.object_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.object_id IS 'Object';


--
-- Name: COLUMN multi_company_default.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.write_uid IS 'Last Updated by';


--
-- Name: COLUMN multi_company_default.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.write_date IS 'Last Updated on';


--
-- Name: COLUMN multi_company_default.company_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.company_dest_id IS 'Default Company';


--
-- Name: COLUMN multi_company_default.expression; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN multi_company_default.expression IS 'Expression';


--
-- Name: multi_company_default_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE multi_company_default_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.multi_company_default_id_seq OWNER TO odoo;

--
-- Name: multi_company_default_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE multi_company_default_id_seq OWNED BY multi_company_default.id;


--
-- Name: note_note; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE note_note (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    date_done date,
    sequence integer,
    color integer,
    memo text,
    message_last_post timestamp without time zone,
    name text,
    write_uid integer,
    user_id integer,
    write_date timestamp without time zone,
    open boolean
);


ALTER TABLE public.note_note OWNER TO odoo;

--
-- Name: TABLE note_note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE note_note IS 'Note';


--
-- Name: COLUMN note_note.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.create_uid IS 'Created by';


--
-- Name: COLUMN note_note.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.create_date IS 'Created on';


--
-- Name: COLUMN note_note.date_done; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.date_done IS 'Date done';


--
-- Name: COLUMN note_note.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.sequence IS 'Sequence';


--
-- Name: COLUMN note_note.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.color IS 'Color Index';


--
-- Name: COLUMN note_note.memo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.memo IS 'Note Content';


--
-- Name: COLUMN note_note.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN note_note.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.name IS 'Note Summary';


--
-- Name: COLUMN note_note.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.write_uid IS 'Last Updated by';


--
-- Name: COLUMN note_note.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.user_id IS 'Owner';


--
-- Name: COLUMN note_note.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.write_date IS 'Last Updated on';


--
-- Name: COLUMN note_note.open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_note.open IS 'Active';


--
-- Name: note_note_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE note_note_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.note_note_id_seq OWNER TO odoo;

--
-- Name: note_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE note_note_id_seq OWNED BY note_note.id;


--
-- Name: note_stage; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE note_stage (
    id integer NOT NULL,
    create_uid integer,
    user_id integer NOT NULL,
    name character varying NOT NULL,
    sequence integer,
    write_uid integer,
    fold boolean,
    write_date timestamp without time zone,
    create_date timestamp without time zone
);


ALTER TABLE public.note_stage OWNER TO odoo;

--
-- Name: TABLE note_stage; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE note_stage IS 'Note Stage';


--
-- Name: COLUMN note_stage.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.create_uid IS 'Created by';


--
-- Name: COLUMN note_stage.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.user_id IS 'Owner';


--
-- Name: COLUMN note_stage.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.name IS 'Stage Name';


--
-- Name: COLUMN note_stage.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.sequence IS 'Sequence';


--
-- Name: COLUMN note_stage.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.write_uid IS 'Last Updated by';


--
-- Name: COLUMN note_stage.fold; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.fold IS 'Folded by Default';


--
-- Name: COLUMN note_stage.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.write_date IS 'Last Updated on';


--
-- Name: COLUMN note_stage.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_stage.create_date IS 'Created on';


--
-- Name: note_stage_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE note_stage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.note_stage_id_seq OWNER TO odoo;

--
-- Name: note_stage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE note_stage_id_seq OWNED BY note_stage.id;


--
-- Name: note_stage_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE note_stage_rel (
    note_id integer NOT NULL,
    stage_id integer NOT NULL
);


ALTER TABLE public.note_stage_rel OWNER TO odoo;

--
-- Name: TABLE note_stage_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE note_stage_rel IS 'RELATION BETWEEN note_note AND note_stage';


--
-- Name: note_tag; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE note_tag (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.note_tag OWNER TO odoo;

--
-- Name: TABLE note_tag; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE note_tag IS 'Note Tag';


--
-- Name: COLUMN note_tag.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_tag.create_uid IS 'Created by';


--
-- Name: COLUMN note_tag.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_tag.create_date IS 'Created on';


--
-- Name: COLUMN note_tag.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_tag.name IS 'Tag Name';


--
-- Name: COLUMN note_tag.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_tag.write_uid IS 'Last Updated by';


--
-- Name: COLUMN note_tag.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN note_tag.write_date IS 'Last Updated on';


--
-- Name: note_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE note_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.note_tag_id_seq OWNER TO odoo;

--
-- Name: note_tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE note_tag_id_seq OWNED BY note_tag.id;


--
-- Name: note_tags_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE note_tags_rel (
    note_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.note_tags_rel OWNER TO odoo;

--
-- Name: TABLE note_tags_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE note_tags_rel IS 'RELATION BETWEEN note_note AND note_tag';


--
-- Name: osv_memory_autovacuum; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE osv_memory_autovacuum (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.osv_memory_autovacuum OWNER TO odoo;

--
-- Name: TABLE osv_memory_autovacuum; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE osv_memory_autovacuum IS 'osv_memory.autovacuum';


--
-- Name: COLUMN osv_memory_autovacuum.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN osv_memory_autovacuum.create_uid IS 'Created by';


--
-- Name: COLUMN osv_memory_autovacuum.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN osv_memory_autovacuum.create_date IS 'Created on';


--
-- Name: COLUMN osv_memory_autovacuum.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN osv_memory_autovacuum.write_date IS 'Last Updated on';


--
-- Name: COLUMN osv_memory_autovacuum.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN osv_memory_autovacuum.write_uid IS 'Last Updated by';


--
-- Name: osv_memory_autovacuum_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE osv_memory_autovacuum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.osv_memory_autovacuum_id_seq OWNER TO odoo;

--
-- Name: osv_memory_autovacuum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE osv_memory_autovacuum_id_seq OWNED BY osv_memory_autovacuum.id;


--
-- Name: pad_common; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE pad_common (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.pad_common OWNER TO odoo;

--
-- Name: TABLE pad_common; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE pad_common IS 'pad.common';


--
-- Name: COLUMN pad_common.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pad_common.create_uid IS 'Created by';


--
-- Name: COLUMN pad_common.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pad_common.create_date IS 'Created on';


--
-- Name: COLUMN pad_common.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pad_common.write_date IS 'Last Updated on';


--
-- Name: COLUMN pad_common.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pad_common.write_uid IS 'Last Updated by';


--
-- Name: pad_common_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE pad_common_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pad_common_id_seq OWNER TO odoo;

--
-- Name: pad_common_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE pad_common_id_seq OWNED BY pad_common.id;


--
-- Name: payment_acquirer; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE payment_acquirer (
    id integer NOT NULL,
    create_uid integer,
    fees_dom_fixed double precision,
    fees_dom_var double precision,
    name character varying NOT NULL,
    fees_active boolean,
    company_id integer NOT NULL,
    write_uid integer,
    post_msg text,
    website_published boolean,
    fees_int_var double precision,
    view_template_id integer NOT NULL,
    write_date timestamp without time zone,
    provider character varying NOT NULL,
    create_date timestamp without time zone,
    pre_msg text,
    validation character varying,
    fees_int_fixed double precision,
    environment character varying
);


ALTER TABLE public.payment_acquirer OWNER TO odoo;

--
-- Name: TABLE payment_acquirer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE payment_acquirer IS 'Payment Acquirer';


--
-- Name: COLUMN payment_acquirer.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.create_uid IS 'Created by';


--
-- Name: COLUMN payment_acquirer.fees_dom_fixed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.fees_dom_fixed IS 'Fixed domestic fees';


--
-- Name: COLUMN payment_acquirer.fees_dom_var; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.fees_dom_var IS 'Variable domestic fees (in percents)';


--
-- Name: COLUMN payment_acquirer.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.name IS 'Name';


--
-- Name: COLUMN payment_acquirer.fees_active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.fees_active IS 'Compute fees';


--
-- Name: COLUMN payment_acquirer.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.company_id IS 'Company';


--
-- Name: COLUMN payment_acquirer.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.write_uid IS 'Last Updated by';


--
-- Name: COLUMN payment_acquirer.post_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.post_msg IS 'Thanks Message';


--
-- Name: COLUMN payment_acquirer.website_published; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.website_published IS 'Visible in Portal / Website';


--
-- Name: COLUMN payment_acquirer.fees_int_var; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.fees_int_var IS 'Variable international fees (in percents)';


--
-- Name: COLUMN payment_acquirer.view_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.view_template_id IS 'Form Button Template';


--
-- Name: COLUMN payment_acquirer.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.write_date IS 'Last Updated on';


--
-- Name: COLUMN payment_acquirer.provider; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.provider IS 'Provider';


--
-- Name: COLUMN payment_acquirer.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.create_date IS 'Created on';


--
-- Name: COLUMN payment_acquirer.pre_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.pre_msg IS 'Message';


--
-- Name: COLUMN payment_acquirer.validation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.validation IS 'Process Method';


--
-- Name: COLUMN payment_acquirer.fees_int_fixed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.fees_int_fixed IS 'Fixed international fees';


--
-- Name: COLUMN payment_acquirer.environment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_acquirer.environment IS 'Environment';


--
-- Name: payment_acquirer_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE payment_acquirer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.payment_acquirer_id_seq OWNER TO odoo;

--
-- Name: payment_acquirer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE payment_acquirer_id_seq OWNED BY payment_acquirer.id;


--
-- Name: payment_transaction; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE payment_transaction (
    id integer NOT NULL,
    state_message text,
    create_date timestamp without time zone,
    reference character varying NOT NULL,
    write_uid integer,
    date_create timestamp without time zone NOT NULL,
    acquirer_id integer NOT NULL,
    fees numeric,
    partner_id integer,
    create_uid integer,
    partner_reference character varying,
    partner_name character varying,
    message_last_post timestamp without time zone,
    partner_phone character varying,
    state character varying NOT NULL,
    type character varying NOT NULL,
    partner_country_id integer NOT NULL,
    acquirer_reference character varying,
    partner_address character varying,
    partner_email character varying,
    partner_lang character varying,
    write_date timestamp without time zone,
    partner_zip character varying,
    currency_id integer NOT NULL,
    date_validate timestamp without time zone,
    partner_city character varying,
    amount numeric NOT NULL
);


ALTER TABLE public.payment_transaction OWNER TO odoo;

--
-- Name: TABLE payment_transaction; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE payment_transaction IS 'Payment Transaction';


--
-- Name: COLUMN payment_transaction.state_message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.state_message IS 'Message';


--
-- Name: COLUMN payment_transaction.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.create_date IS 'Created on';


--
-- Name: COLUMN payment_transaction.reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.reference IS 'Order Reference';


--
-- Name: COLUMN payment_transaction.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.write_uid IS 'Last Updated by';


--
-- Name: COLUMN payment_transaction.date_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.date_create IS 'Creation Date';


--
-- Name: COLUMN payment_transaction.acquirer_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.acquirer_id IS 'Acquirer';


--
-- Name: COLUMN payment_transaction.fees; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.fees IS 'Fees';


--
-- Name: COLUMN payment_transaction.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_id IS 'Partner';


--
-- Name: COLUMN payment_transaction.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.create_uid IS 'Created by';


--
-- Name: COLUMN payment_transaction.partner_reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_reference IS 'Partner Reference';


--
-- Name: COLUMN payment_transaction.partner_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_name IS 'Partner Name';


--
-- Name: COLUMN payment_transaction.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN payment_transaction.partner_phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_phone IS 'Phone';


--
-- Name: COLUMN payment_transaction.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.state IS 'Status';


--
-- Name: COLUMN payment_transaction.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.type IS 'Type';


--
-- Name: COLUMN payment_transaction.partner_country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_country_id IS 'Country';


--
-- Name: COLUMN payment_transaction.acquirer_reference; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.acquirer_reference IS 'Acquirer Order Reference';


--
-- Name: COLUMN payment_transaction.partner_address; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_address IS 'Address';


--
-- Name: COLUMN payment_transaction.partner_email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_email IS 'Email';


--
-- Name: COLUMN payment_transaction.partner_lang; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_lang IS 'Lang';


--
-- Name: COLUMN payment_transaction.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.write_date IS 'Last Updated on';


--
-- Name: COLUMN payment_transaction.partner_zip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_zip IS 'Zip';


--
-- Name: COLUMN payment_transaction.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.currency_id IS 'Currency';


--
-- Name: COLUMN payment_transaction.date_validate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.date_validate IS 'Validation Date';


--
-- Name: COLUMN payment_transaction.partner_city; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.partner_city IS 'City';


--
-- Name: COLUMN payment_transaction.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN payment_transaction.amount IS 'Amount';


--
-- Name: payment_transaction_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE payment_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.payment_transaction_id_seq OWNER TO odoo;

--
-- Name: payment_transaction_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE payment_transaction_id_seq OWNED BY payment_transaction.id;


--
-- Name: pricelist_partnerinfo; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE pricelist_partnerinfo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    price numeric NOT NULL,
    suppinfo_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    min_quantity double precision NOT NULL
);


ALTER TABLE public.pricelist_partnerinfo OWNER TO odoo;

--
-- Name: TABLE pricelist_partnerinfo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE pricelist_partnerinfo IS 'pricelist.partnerinfo';


--
-- Name: COLUMN pricelist_partnerinfo.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.create_uid IS 'Created by';


--
-- Name: COLUMN pricelist_partnerinfo.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.create_date IS 'Created on';


--
-- Name: COLUMN pricelist_partnerinfo.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.name IS 'Description';


--
-- Name: COLUMN pricelist_partnerinfo.price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.price IS 'Unit Price';


--
-- Name: COLUMN pricelist_partnerinfo.suppinfo_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.suppinfo_id IS 'Partner Information';


--
-- Name: COLUMN pricelist_partnerinfo.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.write_uid IS 'Last Updated by';


--
-- Name: COLUMN pricelist_partnerinfo.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.write_date IS 'Last Updated on';


--
-- Name: COLUMN pricelist_partnerinfo.min_quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN pricelist_partnerinfo.min_quantity IS 'Quantity';


--
-- Name: pricelist_partnerinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE pricelist_partnerinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pricelist_partnerinfo_id_seq OWNER TO odoo;

--
-- Name: pricelist_partnerinfo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE pricelist_partnerinfo_id_seq OWNED BY pricelist_partnerinfo.id;


--
-- Name: procurement_group; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_group (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    move_type character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    partner_id integer
);


ALTER TABLE public.procurement_group OWNER TO odoo;

--
-- Name: TABLE procurement_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_group IS 'Procurement Requisition';


--
-- Name: COLUMN procurement_group.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.create_uid IS 'Created by';


--
-- Name: COLUMN procurement_group.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.create_date IS 'Created on';


--
-- Name: COLUMN procurement_group.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.name IS 'Reference';


--
-- Name: COLUMN procurement_group.move_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.move_type IS 'Delivery Method';


--
-- Name: COLUMN procurement_group.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.write_uid IS 'Last Updated by';


--
-- Name: COLUMN procurement_group.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.write_date IS 'Last Updated on';


--
-- Name: COLUMN procurement_group.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_group.partner_id IS 'Partner';


--
-- Name: procurement_group_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE procurement_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.procurement_group_id_seq OWNER TO odoo;

--
-- Name: procurement_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE procurement_group_id_seq OWNED BY procurement_group.id;


--
-- Name: procurement_order; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_order (
    id integer NOT NULL,
    origin character varying,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    product_uos_qty double precision,
    write_uid integer,
    product_qty numeric NOT NULL,
    product_uos integer,
    create_uid integer,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    priority character varying NOT NULL,
    state character varying NOT NULL,
    write_date timestamp without time zone,
    name text NOT NULL,
    product_id integer NOT NULL,
    date_planned timestamp without time zone NOT NULL,
    group_id integer,
    rule_id integer,
    sale_line_id integer,
    move_dest_id integer,
    location_id integer,
    partner_dest_id integer,
    orderpoint_id integer,
    warehouse_id integer,
    invoice_state character varying,
    purchase_line_id integer,
    bom_id integer,
    production_id integer
);


ALTER TABLE public.procurement_order OWNER TO odoo;

--
-- Name: TABLE procurement_order; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_order IS 'Procurement';


--
-- Name: COLUMN procurement_order.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.origin IS 'Source Document';


--
-- Name: COLUMN procurement_order.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.create_date IS 'Created on';


--
-- Name: COLUMN procurement_order.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN procurement_order.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.product_uos_qty IS 'UoS Quantity';


--
-- Name: COLUMN procurement_order.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.write_uid IS 'Last Updated by';


--
-- Name: COLUMN procurement_order.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.product_qty IS 'Quantity';


--
-- Name: COLUMN procurement_order.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.product_uos IS 'Product UoS';


--
-- Name: COLUMN procurement_order.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.create_uid IS 'Created by';


--
-- Name: COLUMN procurement_order.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN procurement_order.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.company_id IS 'Company';


--
-- Name: COLUMN procurement_order.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.priority IS 'Priority';


--
-- Name: COLUMN procurement_order.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.state IS 'Status';


--
-- Name: COLUMN procurement_order.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.write_date IS 'Last Updated on';


--
-- Name: COLUMN procurement_order.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.name IS 'Description';


--
-- Name: COLUMN procurement_order.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.product_id IS 'Product';


--
-- Name: COLUMN procurement_order.date_planned; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.date_planned IS 'Scheduled Date';


--
-- Name: COLUMN procurement_order.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.group_id IS 'Procurement Group';


--
-- Name: COLUMN procurement_order.rule_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.rule_id IS 'Rule';


--
-- Name: COLUMN procurement_order.sale_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.sale_line_id IS 'Sale Order Line';


--
-- Name: COLUMN procurement_order.move_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.move_dest_id IS 'Destination Move';


--
-- Name: COLUMN procurement_order.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.location_id IS 'Procurement Location';


--
-- Name: COLUMN procurement_order.partner_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.partner_dest_id IS 'Customer Address';


--
-- Name: COLUMN procurement_order.orderpoint_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.orderpoint_id IS 'Minimum Stock Rule';


--
-- Name: COLUMN procurement_order.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN procurement_order.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.invoice_state IS 'Invoice Control';


--
-- Name: COLUMN procurement_order.purchase_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.purchase_line_id IS 'Purchase Order Line';


--
-- Name: COLUMN procurement_order.bom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.bom_id IS 'BoM';


--
-- Name: COLUMN procurement_order.production_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order.production_id IS 'Manufacturing Order';


--
-- Name: procurement_order_compute_all; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_order_compute_all (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.procurement_order_compute_all OWNER TO odoo;

--
-- Name: TABLE procurement_order_compute_all; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_order_compute_all IS 'Compute all schedulers';


--
-- Name: COLUMN procurement_order_compute_all.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order_compute_all.create_uid IS 'Created by';


--
-- Name: COLUMN procurement_order_compute_all.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order_compute_all.create_date IS 'Created on';


--
-- Name: COLUMN procurement_order_compute_all.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order_compute_all.write_date IS 'Last Updated on';


--
-- Name: COLUMN procurement_order_compute_all.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_order_compute_all.write_uid IS 'Last Updated by';


--
-- Name: procurement_order_compute_all_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE procurement_order_compute_all_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.procurement_order_compute_all_id_seq OWNER TO odoo;

--
-- Name: procurement_order_compute_all_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE procurement_order_compute_all_id_seq OWNED BY procurement_order_compute_all.id;


--
-- Name: procurement_order_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE procurement_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.procurement_order_id_seq OWNER TO odoo;

--
-- Name: procurement_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE procurement_order_id_seq OWNED BY procurement_order.id;


--
-- Name: procurement_orderpoint_compute; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_orderpoint_compute (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.procurement_orderpoint_compute OWNER TO odoo;

--
-- Name: TABLE procurement_orderpoint_compute; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_orderpoint_compute IS 'Compute Minimum Stock Rules';


--
-- Name: COLUMN procurement_orderpoint_compute.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_orderpoint_compute.create_uid IS 'Created by';


--
-- Name: COLUMN procurement_orderpoint_compute.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_orderpoint_compute.create_date IS 'Created on';


--
-- Name: COLUMN procurement_orderpoint_compute.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_orderpoint_compute.write_date IS 'Last Updated on';


--
-- Name: COLUMN procurement_orderpoint_compute.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_orderpoint_compute.write_uid IS 'Last Updated by';


--
-- Name: procurement_orderpoint_compute_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE procurement_orderpoint_compute_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.procurement_orderpoint_compute_id_seq OWNER TO odoo;

--
-- Name: procurement_orderpoint_compute_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE procurement_orderpoint_compute_id_seq OWNED BY procurement_orderpoint_compute.id;


--
-- Name: procurement_property_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_property_rel (
    procurement_id integer NOT NULL,
    property_id integer NOT NULL
);


ALTER TABLE public.procurement_property_rel OWNER TO odoo;

--
-- Name: TABLE procurement_property_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_property_rel IS 'RELATION BETWEEN procurement_order AND mrp_property';


--
-- Name: procurement_rule; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE procurement_rule (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    company_id integer,
    write_uid integer,
    action character varying NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    group_id integer,
    group_propagation_option character varying,
    partner_address_id integer,
    location_id integer,
    location_src_id integer,
    picking_type_id integer,
    delay integer,
    warehouse_id integer,
    propagate boolean,
    procure_method character varying NOT NULL,
    route_sequence numeric,
    route_id integer,
    propagate_warehouse_id integer,
    invoice_state character varying
);


ALTER TABLE public.procurement_rule OWNER TO odoo;

--
-- Name: TABLE procurement_rule; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE procurement_rule IS 'Procurement Rule';


--
-- Name: COLUMN procurement_rule.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.create_uid IS 'Created by';


--
-- Name: COLUMN procurement_rule.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.create_date IS 'Created on';


--
-- Name: COLUMN procurement_rule.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.name IS 'Name';


--
-- Name: COLUMN procurement_rule.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.sequence IS 'Sequence';


--
-- Name: COLUMN procurement_rule.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.company_id IS 'Company';


--
-- Name: COLUMN procurement_rule.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.write_uid IS 'Last Updated by';


--
-- Name: COLUMN procurement_rule.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.action IS 'Action';


--
-- Name: COLUMN procurement_rule.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.write_date IS 'Last Updated on';


--
-- Name: COLUMN procurement_rule.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.active IS 'Active';


--
-- Name: COLUMN procurement_rule.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.group_id IS 'Fixed Procurement Group';


--
-- Name: COLUMN procurement_rule.group_propagation_option; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.group_propagation_option IS 'Propagation of Procurement Group';


--
-- Name: COLUMN procurement_rule.partner_address_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.partner_address_id IS 'Partner Address';


--
-- Name: COLUMN procurement_rule.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.location_id IS 'Procurement Location';


--
-- Name: COLUMN procurement_rule.location_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.location_src_id IS 'Source Location';


--
-- Name: COLUMN procurement_rule.picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.picking_type_id IS 'Picking Type';


--
-- Name: COLUMN procurement_rule.delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.delay IS 'Number of Days';


--
-- Name: COLUMN procurement_rule.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.warehouse_id IS 'Served Warehouse';


--
-- Name: COLUMN procurement_rule.propagate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.propagate IS 'Propagate cancel and split';


--
-- Name: COLUMN procurement_rule.procure_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.procure_method IS 'Move Supply Method';


--
-- Name: COLUMN procurement_rule.route_sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.route_sequence IS 'Route Sequence';


--
-- Name: COLUMN procurement_rule.route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.route_id IS 'Route';


--
-- Name: COLUMN procurement_rule.propagate_warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.propagate_warehouse_id IS 'Warehouse to Propagate';


--
-- Name: COLUMN procurement_rule.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN procurement_rule.invoice_state IS 'Invoice Status';


--
-- Name: procurement_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE procurement_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.procurement_rule_id_seq OWNER TO odoo;

--
-- Name: procurement_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE procurement_rule_id_seq OWNED BY procurement_rule.id;


--
-- Name: product_attribute; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.product_attribute OWNER TO odoo;

--
-- Name: TABLE product_attribute; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute IS 'Product Attribute';


--
-- Name: COLUMN product_attribute.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute.create_uid IS 'Created by';


--
-- Name: COLUMN product_attribute.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute.create_date IS 'Created on';


--
-- Name: COLUMN product_attribute.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute.name IS 'Name';


--
-- Name: COLUMN product_attribute.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_attribute.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute.write_date IS 'Last Updated on';


--
-- Name: product_attribute_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_attribute_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_attribute_id_seq OWNER TO odoo;

--
-- Name: product_attribute_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_attribute_id_seq OWNED BY product_attribute.id;


--
-- Name: product_attribute_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    product_tmpl_id integer NOT NULL,
    attribute_id integer NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.product_attribute_line OWNER TO odoo;

--
-- Name: TABLE product_attribute_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute_line IS 'product.attribute.line';


--
-- Name: COLUMN product_attribute_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.create_uid IS 'Created by';


--
-- Name: COLUMN product_attribute_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.create_date IS 'Created on';


--
-- Name: COLUMN product_attribute_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_attribute_line.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_attribute_line.attribute_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.attribute_id IS 'Attribute';


--
-- Name: COLUMN product_attribute_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_line.write_date IS 'Last Updated on';


--
-- Name: product_attribute_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_attribute_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_attribute_line_id_seq OWNER TO odoo;

--
-- Name: product_attribute_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_attribute_line_id_seq OWNED BY product_attribute_line.id;


--
-- Name: product_attribute_line_product_attribute_value_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute_line_product_attribute_value_rel (
    line_id integer NOT NULL,
    val_id integer NOT NULL
);


ALTER TABLE public.product_attribute_line_product_attribute_value_rel OWNER TO odoo;

--
-- Name: TABLE product_attribute_line_product_attribute_value_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute_line_product_attribute_value_rel IS 'RELATION BETWEEN product_attribute_line AND product_attribute_value';


--
-- Name: product_attribute_price; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute_price (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    price_extra numeric,
    product_tmpl_id integer NOT NULL,
    value_id integer NOT NULL,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.product_attribute_price OWNER TO odoo;

--
-- Name: TABLE product_attribute_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute_price IS 'product.attribute.price';


--
-- Name: COLUMN product_attribute_price.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.create_uid IS 'Created by';


--
-- Name: COLUMN product_attribute_price.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.create_date IS 'Created on';


--
-- Name: COLUMN product_attribute_price.price_extra; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.price_extra IS 'Price Extra';


--
-- Name: COLUMN product_attribute_price.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_attribute_price.value_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.value_id IS 'Product Attribute Value';


--
-- Name: COLUMN product_attribute_price.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_attribute_price.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_price.write_uid IS 'Last Updated by';


--
-- Name: product_attribute_price_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_attribute_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_attribute_price_id_seq OWNER TO odoo;

--
-- Name: product_attribute_price_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_attribute_price_id_seq OWNED BY product_attribute_price.id;


--
-- Name: product_attribute_value; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute_value (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    attribute_id integer NOT NULL,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.product_attribute_value OWNER TO odoo;

--
-- Name: TABLE product_attribute_value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute_value IS 'product.attribute.value';


--
-- Name: COLUMN product_attribute_value.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.create_uid IS 'Created by';


--
-- Name: COLUMN product_attribute_value.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.create_date IS 'Created on';


--
-- Name: COLUMN product_attribute_value.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.name IS 'Value';


--
-- Name: COLUMN product_attribute_value.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.sequence IS 'Sequence';


--
-- Name: COLUMN product_attribute_value.attribute_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.attribute_id IS 'Attribute';


--
-- Name: COLUMN product_attribute_value.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_attribute_value.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_attribute_value.write_uid IS 'Last Updated by';


--
-- Name: product_attribute_value_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_attribute_value_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_attribute_value_id_seq OWNER TO odoo;

--
-- Name: product_attribute_value_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_attribute_value_id_seq OWNED BY product_attribute_value.id;


--
-- Name: product_attribute_value_product_product_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_attribute_value_product_product_rel (
    att_id integer NOT NULL,
    prod_id integer NOT NULL
);


ALTER TABLE public.product_attribute_value_product_product_rel OWNER TO odoo;

--
-- Name: TABLE product_attribute_value_product_product_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_attribute_value_product_product_rel IS 'RELATION BETWEEN product_attribute_value AND product_product';


--
-- Name: product_category; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_category (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone,
    type character varying,
    removal_strategy_id integer
);


ALTER TABLE public.product_category OWNER TO odoo;

--
-- Name: TABLE product_category; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_category IS 'Product Category';


--
-- Name: COLUMN product_category.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.create_uid IS 'Created by';


--
-- Name: COLUMN product_category.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.create_date IS 'Created on';


--
-- Name: COLUMN product_category.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.name IS 'Name';


--
-- Name: COLUMN product_category.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.sequence IS 'Sequence';


--
-- Name: COLUMN product_category.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_category.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.parent_id IS 'Parent Category';


--
-- Name: COLUMN product_category.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_category.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.type IS 'Category Type';


--
-- Name: COLUMN product_category.removal_strategy_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_category.removal_strategy_id IS 'Force Removal Strategy';


--
-- Name: product_category_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_category_id_seq OWNER TO odoo;

--
-- Name: product_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_category_id_seq OWNED BY product_category.id;


--
-- Name: product_packaging; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_packaging (
    id integer NOT NULL,
    create_uid integer,
    rows integer NOT NULL,
    create_date timestamp without time zone,
    name text,
    weight double precision,
    ean character varying(14),
    ul_qty integer,
    sequence integer,
    qty double precision,
    product_tmpl_id integer NOT NULL,
    ul integer NOT NULL,
    code character varying,
    write_date timestamp without time zone,
    ul_container integer,
    write_uid integer
);


ALTER TABLE public.product_packaging OWNER TO odoo;

--
-- Name: TABLE product_packaging; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_packaging IS 'Packaging';


--
-- Name: COLUMN product_packaging.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.create_uid IS 'Created by';


--
-- Name: COLUMN product_packaging.rows; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.rows IS 'Number of Layers';


--
-- Name: COLUMN product_packaging.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.create_date IS 'Created on';


--
-- Name: COLUMN product_packaging.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.name IS 'Description';


--
-- Name: COLUMN product_packaging.weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.weight IS 'Total Package Weight';


--
-- Name: COLUMN product_packaging.ean; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.ean IS 'EAN';


--
-- Name: COLUMN product_packaging.ul_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.ul_qty IS 'Package by layer';


--
-- Name: COLUMN product_packaging.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.sequence IS 'Sequence';


--
-- Name: COLUMN product_packaging.qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.qty IS 'Quantity by Package';


--
-- Name: COLUMN product_packaging.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.product_tmpl_id IS 'Product';


--
-- Name: COLUMN product_packaging.ul; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.ul IS 'Package Logistic Unit';


--
-- Name: COLUMN product_packaging.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.code IS 'Code';


--
-- Name: COLUMN product_packaging.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_packaging.ul_container; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.ul_container IS 'Pallet Logistic Unit';


--
-- Name: COLUMN product_packaging.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_packaging.write_uid IS 'Last Updated by';


--
-- Name: product_packaging_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_packaging_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_packaging_id_seq OWNER TO odoo;

--
-- Name: product_packaging_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_packaging_id_seq OWNED BY product_packaging.id;


--
-- Name: product_price_history; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_price_history (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    company_id integer NOT NULL,
    datetime timestamp without time zone,
    cost double precision,
    product_template_id integer NOT NULL,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.product_price_history OWNER TO odoo;

--
-- Name: TABLE product_price_history; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_price_history IS 'product.price.history';


--
-- Name: COLUMN product_price_history.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.create_uid IS 'Created by';


--
-- Name: COLUMN product_price_history.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.create_date IS 'Created on';


--
-- Name: COLUMN product_price_history.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.company_id IS 'unknown';


--
-- Name: COLUMN product_price_history.datetime; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.datetime IS 'Historization Time';


--
-- Name: COLUMN product_price_history.cost; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.cost IS 'Historized Cost';


--
-- Name: COLUMN product_price_history.product_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.product_template_id IS 'Product Template';


--
-- Name: COLUMN product_price_history.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_price_history.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_history.write_uid IS 'Last Updated by';


--
-- Name: product_price_history_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_price_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_price_history_id_seq OWNER TO odoo;

--
-- Name: product_price_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_price_history_id_seq OWNED BY product_price_history.id;


--
-- Name: product_price_list; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_price_list (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    price_list integer NOT NULL,
    write_uid integer,
    qty1 integer,
    qty2 integer,
    qty3 integer,
    qty4 integer,
    qty5 integer,
    write_date timestamp without time zone
);


ALTER TABLE public.product_price_list OWNER TO odoo;

--
-- Name: TABLE product_price_list; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_price_list IS 'Price List';


--
-- Name: COLUMN product_price_list.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.create_uid IS 'Created by';


--
-- Name: COLUMN product_price_list.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.create_date IS 'Created on';


--
-- Name: COLUMN product_price_list.price_list; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.price_list IS 'PriceList';


--
-- Name: COLUMN product_price_list.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_price_list.qty1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.qty1 IS 'Quantity-1';


--
-- Name: COLUMN product_price_list.qty2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.qty2 IS 'Quantity-2';


--
-- Name: COLUMN product_price_list.qty3; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.qty3 IS 'Quantity-3';


--
-- Name: COLUMN product_price_list.qty4; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.qty4 IS 'Quantity-4';


--
-- Name: COLUMN product_price_list.qty5; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.qty5 IS 'Quantity-5';


--
-- Name: COLUMN product_price_list.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_list.write_date IS 'Last Updated on';


--
-- Name: product_price_list_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_price_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_price_list_id_seq OWNER TO odoo;

--
-- Name: product_price_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_price_list_id_seq OWNED BY product_price_list.id;


--
-- Name: product_price_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_price_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    currency_id integer NOT NULL,
    field character varying(32) NOT NULL,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.product_price_type OWNER TO odoo;

--
-- Name: TABLE product_price_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_price_type IS 'Price Type';


--
-- Name: COLUMN product_price_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.create_uid IS 'Created by';


--
-- Name: COLUMN product_price_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.create_date IS 'Created on';


--
-- Name: COLUMN product_price_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.name IS 'Price Name';


--
-- Name: COLUMN product_price_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_price_type.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.currency_id IS 'Currency';


--
-- Name: COLUMN product_price_type.field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.field IS 'Product Field';


--
-- Name: COLUMN product_price_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_price_type.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_price_type.active IS 'Active';


--
-- Name: product_price_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_price_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_price_type_id_seq OWNER TO odoo;

--
-- Name: product_price_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_price_type_id_seq OWNED BY product_price_type.id;


--
-- Name: product_pricelist; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_pricelist (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    currency_id integer NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    type character varying NOT NULL
);


ALTER TABLE public.product_pricelist OWNER TO odoo;

--
-- Name: TABLE product_pricelist; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_pricelist IS 'Pricelist';


--
-- Name: COLUMN product_pricelist.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.create_uid IS 'Created by';


--
-- Name: COLUMN product_pricelist.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.create_date IS 'Created on';


--
-- Name: COLUMN product_pricelist.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.name IS 'Pricelist Name';


--
-- Name: COLUMN product_pricelist.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.company_id IS 'Company';


--
-- Name: COLUMN product_pricelist.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_pricelist.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.currency_id IS 'Currency';


--
-- Name: COLUMN product_pricelist.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_pricelist.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.active IS 'Active';


--
-- Name: COLUMN product_pricelist.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist.type IS 'Pricelist Type';


--
-- Name: product_pricelist_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_pricelist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_pricelist_id_seq OWNER TO odoo;

--
-- Name: product_pricelist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_pricelist_id_seq OWNED BY product_pricelist.id;


--
-- Name: product_pricelist_item; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_pricelist_item (
    id integer NOT NULL,
    price_round numeric,
    create_uid integer,
    price_min_margin numeric,
    create_date timestamp without time zone,
    price_discount numeric,
    name character varying,
    sequence integer NOT NULL,
    price_max_margin numeric,
    company_id integer,
    write_uid integer,
    product_tmpl_id integer,
    product_id integer,
    base integer NOT NULL,
    base_pricelist_id integer,
    price_version_id integer NOT NULL,
    min_quantity integer NOT NULL,
    write_date timestamp without time zone,
    categ_id integer,
    price_surcharge numeric
);


ALTER TABLE public.product_pricelist_item OWNER TO odoo;

--
-- Name: TABLE product_pricelist_item; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_pricelist_item IS 'Pricelist item';


--
-- Name: COLUMN product_pricelist_item.price_round; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_round IS 'Price Rounding';


--
-- Name: COLUMN product_pricelist_item.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.create_uid IS 'Created by';


--
-- Name: COLUMN product_pricelist_item.price_min_margin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_min_margin IS 'Min. Price Margin';


--
-- Name: COLUMN product_pricelist_item.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.create_date IS 'Created on';


--
-- Name: COLUMN product_pricelist_item.price_discount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_discount IS 'Price Discount';


--
-- Name: COLUMN product_pricelist_item.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.name IS 'Rule Name';


--
-- Name: COLUMN product_pricelist_item.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.sequence IS 'Sequence';


--
-- Name: COLUMN product_pricelist_item.price_max_margin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_max_margin IS 'Max. Price Margin';


--
-- Name: COLUMN product_pricelist_item.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.company_id IS 'Company';


--
-- Name: COLUMN product_pricelist_item.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_pricelist_item.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_pricelist_item.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.product_id IS 'Product';


--
-- Name: COLUMN product_pricelist_item.base; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.base IS 'Based on';


--
-- Name: COLUMN product_pricelist_item.base_pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.base_pricelist_id IS 'Other Pricelist';


--
-- Name: COLUMN product_pricelist_item.price_version_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_version_id IS 'Price List Version';


--
-- Name: COLUMN product_pricelist_item.min_quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.min_quantity IS 'Min. Quantity';


--
-- Name: COLUMN product_pricelist_item.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_pricelist_item.categ_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.categ_id IS 'Product Category';


--
-- Name: COLUMN product_pricelist_item.price_surcharge; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_item.price_surcharge IS 'Price Surcharge';


--
-- Name: product_pricelist_item_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_pricelist_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_pricelist_item_id_seq OWNER TO odoo;

--
-- Name: product_pricelist_item_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_pricelist_item_id_seq OWNED BY product_pricelist_item.id;


--
-- Name: product_pricelist_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_pricelist_type (
    id integer NOT NULL,
    key character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.product_pricelist_type OWNER TO odoo;

--
-- Name: TABLE product_pricelist_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_pricelist_type IS 'Pricelist Type';


--
-- Name: COLUMN product_pricelist_type.key; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.key IS 'Key';


--
-- Name: COLUMN product_pricelist_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.create_uid IS 'Created by';


--
-- Name: COLUMN product_pricelist_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.create_date IS 'Created on';


--
-- Name: COLUMN product_pricelist_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.name IS 'Name';


--
-- Name: COLUMN product_pricelist_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_pricelist_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_type.write_date IS 'Last Updated on';


--
-- Name: product_pricelist_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_pricelist_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_pricelist_type_id_seq OWNER TO odoo;

--
-- Name: product_pricelist_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_pricelist_type_id_seq OWNED BY product_pricelist_type.id;


--
-- Name: product_pricelist_version; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_pricelist_version (
    id integer NOT NULL,
    create_uid integer,
    name character varying NOT NULL,
    date_end date,
    date_start date,
    company_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    pricelist_id integer NOT NULL,
    active boolean,
    create_date timestamp without time zone
);


ALTER TABLE public.product_pricelist_version OWNER TO odoo;

--
-- Name: TABLE product_pricelist_version; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_pricelist_version IS 'Pricelist Version';


--
-- Name: COLUMN product_pricelist_version.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.create_uid IS 'Created by';


--
-- Name: COLUMN product_pricelist_version.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.name IS 'Name';


--
-- Name: COLUMN product_pricelist_version.date_end; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.date_end IS 'End Date';


--
-- Name: COLUMN product_pricelist_version.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.date_start IS 'Start Date';


--
-- Name: COLUMN product_pricelist_version.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.company_id IS 'Company';


--
-- Name: COLUMN product_pricelist_version.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_pricelist_version.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_pricelist_version.pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.pricelist_id IS 'Price List';


--
-- Name: COLUMN product_pricelist_version.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.active IS 'Active';


--
-- Name: COLUMN product_pricelist_version.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_pricelist_version.create_date IS 'Created on';


--
-- Name: product_pricelist_version_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_pricelist_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_pricelist_version_id_seq OWNER TO odoo;

--
-- Name: product_pricelist_version_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_pricelist_version_id_seq OWNED BY product_pricelist_version.id;


--
-- Name: product_product_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_product_id_seq OWNER TO odoo;

--
-- Name: product_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_product_id_seq OWNED BY product_product.id;


--
-- Name: product_putaway; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_putaway (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    method character varying NOT NULL
);


ALTER TABLE public.product_putaway OWNER TO odoo;

--
-- Name: TABLE product_putaway; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_putaway IS 'Put Away Strategy';


--
-- Name: COLUMN product_putaway.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.create_uid IS 'Created by';


--
-- Name: COLUMN product_putaway.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.create_date IS 'Created on';


--
-- Name: COLUMN product_putaway.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.name IS 'Name';


--
-- Name: COLUMN product_putaway.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_putaway.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_putaway.method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_putaway.method IS 'Method';


--
-- Name: product_putaway_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_putaway_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_putaway_id_seq OWNER TO odoo;

--
-- Name: product_putaway_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_putaway_id_seq OWNED BY product_putaway.id;


--
-- Name: product_removal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_removal (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    method character varying NOT NULL
);


ALTER TABLE public.product_removal OWNER TO odoo;

--
-- Name: TABLE product_removal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_removal IS 'Removal Strategy';


--
-- Name: COLUMN product_removal.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.create_uid IS 'Created by';


--
-- Name: COLUMN product_removal.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.create_date IS 'Created on';


--
-- Name: COLUMN product_removal.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.name IS 'Name';


--
-- Name: COLUMN product_removal.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_removal.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_removal.method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_removal.method IS 'Method';


--
-- Name: product_removal_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_removal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_removal_id_seq OWNER TO odoo;

--
-- Name: product_removal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_removal_id_seq OWNED BY product_removal.id;


--
-- Name: product_supplier_taxes_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_supplier_taxes_rel (
    prod_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.product_supplier_taxes_rel OWNER TO odoo;

--
-- Name: TABLE product_supplier_taxes_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_supplier_taxes_rel IS 'RELATION BETWEEN product_template AND account_tax';


--
-- Name: product_supplierinfo; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_supplierinfo (
    id integer NOT NULL,
    create_uid integer,
    product_code character varying,
    create_date timestamp without time zone,
    name integer NOT NULL,
    sequence integer,
    product_name character varying,
    company_id integer,
    write_uid integer,
    delay integer NOT NULL,
    write_date timestamp without time zone,
    min_qty double precision NOT NULL,
    qty numeric,
    product_tmpl_id integer NOT NULL
);


ALTER TABLE public.product_supplierinfo OWNER TO odoo;

--
-- Name: TABLE product_supplierinfo; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_supplierinfo IS 'Information about a product supplier';


--
-- Name: COLUMN product_supplierinfo.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.create_uid IS 'Created by';


--
-- Name: COLUMN product_supplierinfo.product_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.product_code IS 'Supplier Product Code';


--
-- Name: COLUMN product_supplierinfo.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.create_date IS 'Created on';


--
-- Name: COLUMN product_supplierinfo.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.name IS 'Supplier';


--
-- Name: COLUMN product_supplierinfo.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.sequence IS 'Sequence';


--
-- Name: COLUMN product_supplierinfo.product_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.product_name IS 'Supplier Product Name';


--
-- Name: COLUMN product_supplierinfo.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.company_id IS 'Company';


--
-- Name: COLUMN product_supplierinfo.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_supplierinfo.delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.delay IS 'Delivery Lead Time';


--
-- Name: COLUMN product_supplierinfo.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_supplierinfo.min_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.min_qty IS 'Minimal Quantity';


--
-- Name: COLUMN product_supplierinfo.qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.qty IS 'Quantity';


--
-- Name: COLUMN product_supplierinfo.product_tmpl_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_supplierinfo.product_tmpl_id IS 'Product Template';


--
-- Name: product_supplierinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_supplierinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_supplierinfo_id_seq OWNER TO odoo;

--
-- Name: product_supplierinfo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_supplierinfo_id_seq OWNED BY product_supplierinfo.id;


--
-- Name: product_taxes_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_taxes_rel (
    prod_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.product_taxes_rel OWNER TO odoo;

--
-- Name: TABLE product_taxes_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_taxes_rel IS 'RELATION BETWEEN product_template AND account_tax';


--
-- Name: product_template_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_template_id_seq OWNER TO odoo;

--
-- Name: product_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_template_id_seq OWNED BY product_template.id;


--
-- Name: product_ul; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_ul (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    weight double precision,
    height double precision,
    width double precision,
    length double precision,
    write_date timestamp without time zone,
    write_uid integer,
    type character varying NOT NULL
);


ALTER TABLE public.product_ul OWNER TO odoo;

--
-- Name: TABLE product_ul; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_ul IS 'Logistic Unit';


--
-- Name: COLUMN product_ul.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.create_uid IS 'Created by';


--
-- Name: COLUMN product_ul.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.create_date IS 'Created on';


--
-- Name: COLUMN product_ul.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.name IS 'Name';


--
-- Name: COLUMN product_ul.weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.weight IS 'Empty Package Weight';


--
-- Name: COLUMN product_ul.height; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.height IS 'Height';


--
-- Name: COLUMN product_ul.width; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.width IS 'Width';


--
-- Name: COLUMN product_ul.length; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.length IS 'Length';


--
-- Name: COLUMN product_ul.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.write_date IS 'Last Updated on';


--
-- Name: COLUMN product_ul.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_ul.type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_ul.type IS 'Type';


--
-- Name: product_ul_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_ul_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_ul_id_seq OWNER TO odoo;

--
-- Name: product_ul_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_ul_id_seq OWNED BY product_ul.id;


--
-- Name: product_uom_categ; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE product_uom_categ (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.product_uom_categ OWNER TO odoo;

--
-- Name: TABLE product_uom_categ; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE product_uom_categ IS 'Product uom categ';


--
-- Name: COLUMN product_uom_categ.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom_categ.create_uid IS 'Created by';


--
-- Name: COLUMN product_uom_categ.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom_categ.create_date IS 'Created on';


--
-- Name: COLUMN product_uom_categ.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom_categ.name IS 'Name';


--
-- Name: COLUMN product_uom_categ.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom_categ.write_uid IS 'Last Updated by';


--
-- Name: COLUMN product_uom_categ.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN product_uom_categ.write_date IS 'Last Updated on';


--
-- Name: product_uom_categ_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_uom_categ_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_uom_categ_id_seq OWNER TO odoo;

--
-- Name: product_uom_categ_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_uom_categ_id_seq OWNED BY product_uom_categ.id;


--
-- Name: product_uom_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE product_uom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_uom_id_seq OWNER TO odoo;

--
-- Name: product_uom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE product_uom_id_seq OWNED BY product_uom.id;


--
-- Name: project_account_analytic_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_account_analytic_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    from_date date,
    to_date date,
    write_date timestamp without time zone
);


ALTER TABLE public.project_account_analytic_line OWNER TO odoo;

--
-- Name: TABLE project_account_analytic_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_account_analytic_line IS 'Analytic Entries by line';


--
-- Name: COLUMN project_account_analytic_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.create_uid IS 'Created by';


--
-- Name: COLUMN project_account_analytic_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.create_date IS 'Created on';


--
-- Name: COLUMN project_account_analytic_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_account_analytic_line.from_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.from_date IS 'From';


--
-- Name: COLUMN project_account_analytic_line.to_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.to_date IS 'To';


--
-- Name: COLUMN project_account_analytic_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_account_analytic_line.write_date IS 'Last Updated on';


--
-- Name: project_account_analytic_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_account_analytic_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_account_analytic_line_id_seq OWNER TO odoo;

--
-- Name: project_account_analytic_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_account_analytic_line_id_seq OWNED BY project_account_analytic_line.id;


--
-- Name: project_category; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_category (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.project_category OWNER TO odoo;

--
-- Name: TABLE project_category; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_category IS 'Category of project''s task, issue, ...';


--
-- Name: COLUMN project_category.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_category.create_uid IS 'Created by';


--
-- Name: COLUMN project_category.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_category.create_date IS 'Created on';


--
-- Name: COLUMN project_category.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_category.name IS 'Name';


--
-- Name: COLUMN project_category.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_category.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_category.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_category.write_date IS 'Last Updated on';


--
-- Name: project_category_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_category_id_seq OWNER TO odoo;

--
-- Name: project_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_category_id_seq OWNED BY project_category.id;


--
-- Name: project_category_project_issue_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_category_project_issue_rel (
    project_issue_id integer NOT NULL,
    project_category_id integer NOT NULL
);


ALTER TABLE public.project_category_project_issue_rel OWNER TO odoo;

--
-- Name: TABLE project_category_project_issue_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_category_project_issue_rel IS 'RELATION BETWEEN project_issue AND project_category';


--
-- Name: project_category_project_task_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_category_project_task_rel (
    project_task_id integer NOT NULL,
    project_category_id integer NOT NULL
);


ALTER TABLE public.project_category_project_task_rel OWNER TO odoo;

--
-- Name: TABLE project_category_project_task_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_category_project_task_rel IS 'RELATION BETWEEN project_task AND project_category';


--
-- Name: project_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_config_settings (
    id integer NOT NULL,
    module_sale_service boolean,
    module_pad boolean,
    create_uid integer,
    module_project_issue boolean,
    group_time_work_estimation_tasks boolean,
    module_project_issue_sheet boolean,
    write_uid integer,
    group_tasks_work_on_tasks boolean,
    time_unit integer NOT NULL,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    group_manage_delegation_task boolean,
    module_project_timesheet boolean,
    fetchmail_issue boolean
);


ALTER TABLE public.project_config_settings OWNER TO odoo;

--
-- Name: TABLE project_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_config_settings IS 'project.config.settings';


--
-- Name: COLUMN project_config_settings.module_sale_service; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.module_sale_service IS 'Generate tasks from sale orders';


--
-- Name: COLUMN project_config_settings.module_pad; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.module_pad IS 'Use integrated collaborative note pads on task';


--
-- Name: COLUMN project_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN project_config_settings.module_project_issue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.module_project_issue IS 'Track issues and bugs';


--
-- Name: COLUMN project_config_settings.group_time_work_estimation_tasks; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.group_time_work_estimation_tasks IS 'Manage time estimation on tasks';


--
-- Name: COLUMN project_config_settings.module_project_issue_sheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.module_project_issue_sheet IS 'Invoice working time on issues';


--
-- Name: COLUMN project_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_config_settings.group_tasks_work_on_tasks; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.group_tasks_work_on_tasks IS 'Log work activities on tasks';


--
-- Name: COLUMN project_config_settings.time_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.time_unit IS 'Working time unit';


--
-- Name: COLUMN project_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN project_config_settings.group_manage_delegation_task; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.group_manage_delegation_task IS 'Allow task delegation';


--
-- Name: COLUMN project_config_settings.module_project_timesheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.module_project_timesheet IS 'Record timesheet lines per tasks';


--
-- Name: COLUMN project_config_settings.fetchmail_issue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_config_settings.fetchmail_issue IS 'Create issues from an incoming email account ';


--
-- Name: project_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_config_settings_id_seq OWNER TO odoo;

--
-- Name: project_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_config_settings_id_seq OWNED BY project_config_settings.id;


--
-- Name: project_issue; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_issue (
    id integer NOT NULL,
    date_closed timestamp without time zone,
    create_date timestamp without time zone,
    date_deadline date,
    color integer,
    date_last_stage_update timestamp without time zone,
    date_action_last timestamp without time zone,
    day_close numeric,
    write_uid integer,
    date timestamp without time zone,
    duration double precision,
    day_open numeric,
    partner_id integer,
    date_action_next timestamp without time zone,
    create_uid integer,
    user_id integer,
    date_open timestamp without time zone,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    working_hours_close numeric,
    working_hours_open numeric,
    email_cc character varying(256),
    channel character varying,
    description text,
    kanban_state character varying,
    section_id integer,
    version_id integer,
    write_date timestamp without time zone,
    progress numeric,
    active boolean,
    name character varying NOT NULL,
    stage_id integer,
    project_id integer,
    task_id integer,
    email_from character varying(128)
);


ALTER TABLE public.project_issue OWNER TO odoo;

--
-- Name: TABLE project_issue; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_issue IS 'Project Issue';


--
-- Name: COLUMN project_issue.date_closed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_closed IS 'Closed';


--
-- Name: COLUMN project_issue.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.create_date IS 'Creation Date';


--
-- Name: COLUMN project_issue.date_deadline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_deadline IS 'Deadline';


--
-- Name: COLUMN project_issue.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.color IS 'Color Index';


--
-- Name: COLUMN project_issue.date_last_stage_update; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_last_stage_update IS 'Last Stage Update';


--
-- Name: COLUMN project_issue.date_action_last; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_action_last IS 'Last Action';


--
-- Name: COLUMN project_issue.day_close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.day_close IS 'Days to Close';


--
-- Name: COLUMN project_issue.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_issue.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date IS 'Date';


--
-- Name: COLUMN project_issue.duration; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.duration IS 'Duration';


--
-- Name: COLUMN project_issue.day_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.day_open IS 'Days to Assign';


--
-- Name: COLUMN project_issue.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.partner_id IS 'Contact';


--
-- Name: COLUMN project_issue.date_action_next; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_action_next IS 'Next Action';


--
-- Name: COLUMN project_issue.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.create_uid IS 'Created by';


--
-- Name: COLUMN project_issue.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.user_id IS 'Assigned to';


--
-- Name: COLUMN project_issue.date_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.date_open IS 'Assigned';


--
-- Name: COLUMN project_issue.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN project_issue.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.company_id IS 'Company';


--
-- Name: COLUMN project_issue.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.priority IS 'Priority';


--
-- Name: COLUMN project_issue.working_hours_close; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.working_hours_close IS 'Working Hours to close the Issue';


--
-- Name: COLUMN project_issue.working_hours_open; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.working_hours_open IS 'Working Hours to assign the Issue';


--
-- Name: COLUMN project_issue.email_cc; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.email_cc IS 'Watchers Emails';


--
-- Name: COLUMN project_issue.channel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.channel IS 'Channel';


--
-- Name: COLUMN project_issue.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.description IS 'Private Note';


--
-- Name: COLUMN project_issue.kanban_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.kanban_state IS 'Kanban State';


--
-- Name: COLUMN project_issue.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.section_id IS 'Sales Team';


--
-- Name: COLUMN project_issue.version_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.version_id IS 'Version';


--
-- Name: COLUMN project_issue.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.write_date IS 'Update Date';


--
-- Name: COLUMN project_issue.progress; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.progress IS 'Progress (%)';


--
-- Name: COLUMN project_issue.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.active IS 'Active';


--
-- Name: COLUMN project_issue.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.name IS 'Issue';


--
-- Name: COLUMN project_issue.stage_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.stage_id IS 'Stage';


--
-- Name: COLUMN project_issue.project_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.project_id IS 'Project';


--
-- Name: COLUMN project_issue.task_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.task_id IS 'Task';


--
-- Name: COLUMN project_issue.email_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue.email_from IS 'Email';


--
-- Name: project_issue_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_issue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_issue_id_seq OWNER TO odoo;

--
-- Name: project_issue_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_issue_id_seq OWNED BY project_issue.id;


--
-- Name: project_task; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task (
    id integer NOT NULL,
    create_date timestamp without time zone,
    sequence integer,
    color integer,
    date_end timestamp without time zone,
    write_uid integer,
    effective_hours numeric,
    planned_hours double precision,
    partner_id integer,
    create_uid integer,
    user_id integer,
    date_start timestamp without time zone,
    message_last_post timestamp without time zone,
    company_id integer,
    priority character varying,
    progress numeric,
    project_id integer,
    date_last_stage_update timestamp without time zone,
    description text,
    kanban_state character varying,
    write_date timestamp without time zone,
    active boolean,
    delay_hours numeric,
    stage_id integer,
    name character varying(128) NOT NULL,
    date_deadline date,
    reviewer_id integer,
    notes text,
    total_hours numeric,
    remaining_hours numeric,
    description_pad character varying
);


ALTER TABLE public.project_task OWNER TO odoo;

--
-- Name: TABLE project_task; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task IS 'Task';


--
-- Name: COLUMN project_task.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.create_date IS 'Create Date';


--
-- Name: COLUMN project_task.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.sequence IS 'Sequence';


--
-- Name: COLUMN project_task.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.color IS 'Color Index';


--
-- Name: COLUMN project_task.date_end; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.date_end IS 'Ending Date';


--
-- Name: COLUMN project_task.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_task.effective_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.effective_hours IS 'Hours Spent';


--
-- Name: COLUMN project_task.planned_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.planned_hours IS 'Initially Planned Hours';


--
-- Name: COLUMN project_task.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.partner_id IS 'Customer';


--
-- Name: COLUMN project_task.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.create_uid IS 'Created by';


--
-- Name: COLUMN project_task.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.user_id IS 'Assigned to';


--
-- Name: COLUMN project_task.date_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.date_start IS 'Starting Date';


--
-- Name: COLUMN project_task.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN project_task.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.company_id IS 'Company';


--
-- Name: COLUMN project_task.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.priority IS 'Priority';


--
-- Name: COLUMN project_task.progress; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.progress IS 'Working Time Progress (%)';


--
-- Name: COLUMN project_task.project_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.project_id IS 'Project';


--
-- Name: COLUMN project_task.date_last_stage_update; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.date_last_stage_update IS 'Last Stage Update';


--
-- Name: COLUMN project_task.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.description IS 'Description';


--
-- Name: COLUMN project_task.kanban_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.kanban_state IS 'Kanban State';


--
-- Name: COLUMN project_task.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.write_date IS 'Last Modification Date';


--
-- Name: COLUMN project_task.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.active IS 'Not a Template Task';


--
-- Name: COLUMN project_task.delay_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.delay_hours IS 'Delay Hours';


--
-- Name: COLUMN project_task.stage_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.stage_id IS 'Stage';


--
-- Name: COLUMN project_task.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.name IS 'Task Summary';


--
-- Name: COLUMN project_task.date_deadline; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.date_deadline IS 'Deadline';


--
-- Name: COLUMN project_task.reviewer_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.reviewer_id IS 'Reviewer';


--
-- Name: COLUMN project_task.notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.notes IS 'Notes';


--
-- Name: COLUMN project_task.total_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.total_hours IS 'Total';


--
-- Name: COLUMN project_task.remaining_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.remaining_hours IS 'Remaining Hours';


--
-- Name: COLUMN project_task.description_pad; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task.description_pad IS 'Description PAD';


--
-- Name: project_issue_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW project_issue_report AS
 SELECT c.id,
    c.date_open AS opening_date,
    c.create_date,
    c.date_last_stage_update,
    c.user_id,
    c.working_hours_open,
    c.working_hours_close,
    c.section_id,
    c.stage_id,
    date(c.date_closed) AS date_closed,
    c.company_id,
    c.priority,
    c.project_id,
    c.version_id,
    1 AS nbr,
    c.partner_id,
    c.channel,
    c.task_id,
    c.day_open AS delay_open,
    c.day_close AS delay_close,
    ( SELECT count(mail_message.id) AS count
           FROM mail_message
          WHERE (((mail_message.model)::text = 'project.issue'::text) AND (mail_message.res_id = c.id))) AS email,
    t.reviewer_id
   FROM (project_issue c
     LEFT JOIN project_task t ON ((c.task_id = t.id)))
  WHERE (c.active = true);


ALTER TABLE public.project_issue_report OWNER TO odoo;

--
-- Name: project_issue_version; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_issue_version (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.project_issue_version OWNER TO odoo;

--
-- Name: TABLE project_issue_version; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_issue_version IS 'project.issue.version';


--
-- Name: COLUMN project_issue_version.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.create_uid IS 'Created by';


--
-- Name: COLUMN project_issue_version.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.create_date IS 'Created on';


--
-- Name: COLUMN project_issue_version.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.name IS 'Version Number';


--
-- Name: COLUMN project_issue_version.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_issue_version.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_issue_version.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_issue_version.active IS 'Active';


--
-- Name: project_issue_version_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_issue_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_issue_version_id_seq OWNER TO odoo;

--
-- Name: project_issue_version_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_issue_version_id_seq OWNED BY project_issue_version.id;


--
-- Name: project_project; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_project (
    id integer NOT NULL,
    alias_model character varying NOT NULL,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    color integer,
    alias_id integer NOT NULL,
    write_uid integer,
    active boolean,
    planned_hours numeric,
    analytic_account_id integer NOT NULL,
    create_uid integer,
    sequence integer,
    message_last_post timestamp without time zone,
    privacy_visibility character varying NOT NULL,
    state character varying NOT NULL,
    effective_hours numeric,
    resource_calendar_id integer,
    total_hours numeric,
    progress_rate numeric,
    project_escalation_id integer
);


ALTER TABLE public.project_project OWNER TO odoo;

--
-- Name: TABLE project_project; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_project IS 'Project';


--
-- Name: COLUMN project_project.alias_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.alias_model IS 'Alias Model';


--
-- Name: COLUMN project_project.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.create_date IS 'Created on';


--
-- Name: COLUMN project_project.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_project.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.color IS 'Color Index';


--
-- Name: COLUMN project_project.alias_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.alias_id IS 'Alias';


--
-- Name: COLUMN project_project.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_project.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.active IS 'Active';


--
-- Name: COLUMN project_project.planned_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.planned_hours IS 'Planned Time';


--
-- Name: COLUMN project_project.analytic_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.analytic_account_id IS 'Contract/Analytic';


--
-- Name: COLUMN project_project.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.create_uid IS 'Created by';


--
-- Name: COLUMN project_project.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.sequence IS 'Sequence';


--
-- Name: COLUMN project_project.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN project_project.privacy_visibility; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.privacy_visibility IS 'Privacy / Visibility';


--
-- Name: COLUMN project_project.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.state IS 'Status';


--
-- Name: COLUMN project_project.effective_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.effective_hours IS 'Time Spent';


--
-- Name: COLUMN project_project.resource_calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.resource_calendar_id IS 'Working Time';


--
-- Name: COLUMN project_project.total_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.total_hours IS 'Total Time';


--
-- Name: COLUMN project_project.progress_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.progress_rate IS 'Progress';


--
-- Name: COLUMN project_project.project_escalation_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_project.project_escalation_id IS 'Project Escalation';


--
-- Name: project_project_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_project_id_seq OWNER TO odoo;

--
-- Name: project_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_project_id_seq OWNED BY project_project.id;


--
-- Name: project_task_delegate; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_delegate (
    id integer NOT NULL,
    create_uid integer,
    new_task_description text,
    planned_hours_me double precision,
    user_id integer NOT NULL,
    name character varying NOT NULL,
    prefix character varying,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    create_date timestamp without time zone,
    project_id integer,
    planned_hours double precision
);


ALTER TABLE public.project_task_delegate OWNER TO odoo;

--
-- Name: TABLE project_task_delegate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_delegate IS 'Task Delegate';


--
-- Name: COLUMN project_task_delegate.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.create_uid IS 'Created by';


--
-- Name: COLUMN project_task_delegate.new_task_description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.new_task_description IS 'New Task Description';


--
-- Name: COLUMN project_task_delegate.planned_hours_me; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.planned_hours_me IS 'Hours to Validate';


--
-- Name: COLUMN project_task_delegate.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.user_id IS 'Assign To';


--
-- Name: COLUMN project_task_delegate.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.name IS 'Delegated Title';


--
-- Name: COLUMN project_task_delegate.prefix; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.prefix IS 'Your Task Title';


--
-- Name: COLUMN project_task_delegate.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_task_delegate.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.state IS 'Validation State';


--
-- Name: COLUMN project_task_delegate.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_task_delegate.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.create_date IS 'Created on';


--
-- Name: COLUMN project_task_delegate.project_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.project_id IS 'Project';


--
-- Name: COLUMN project_task_delegate.planned_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_delegate.planned_hours IS 'Planned Hours';


--
-- Name: project_task_delegate_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_task_delegate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_task_delegate_id_seq OWNER TO odoo;

--
-- Name: project_task_delegate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_task_delegate_id_seq OWNED BY project_task_delegate.id;


--
-- Name: project_task_history; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_history (
    id integer NOT NULL,
    user_id integer,
    end_date date,
    task_id integer NOT NULL,
    type_id integer,
    kanban_state character varying,
    date date,
    planned_hours numeric,
    remaining_hours numeric
);


ALTER TABLE public.project_task_history OWNER TO odoo;

--
-- Name: TABLE project_task_history; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_history IS 'History of Tasks';


--
-- Name: COLUMN project_task_history.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.user_id IS 'Responsible';


--
-- Name: COLUMN project_task_history.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.end_date IS 'End Date';


--
-- Name: COLUMN project_task_history.task_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.task_id IS 'Task';


--
-- Name: COLUMN project_task_history.type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.type_id IS 'Stage';


--
-- Name: COLUMN project_task_history.kanban_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.kanban_state IS 'Kanban State';


--
-- Name: COLUMN project_task_history.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.date IS 'Date';


--
-- Name: COLUMN project_task_history.planned_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.planned_hours IS 'Planned Time';


--
-- Name: COLUMN project_task_history.remaining_hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_history.remaining_hours IS 'Remaining Time';


--
-- Name: project_task_history_cumulative; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_history_cumulative (
    id text,
    end_date date,
    history_id integer,
    date date,
    task_id integer,
    type_id integer,
    user_id integer,
    kanban_state character varying,
    nbr_tasks bigint,
    remaining_hours numeric,
    planned_hours numeric,
    project_id integer
);


ALTER TABLE public.project_task_history_cumulative OWNER TO odoo;

--
-- Name: project_task_history_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_task_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_task_history_id_seq OWNER TO odoo;

--
-- Name: project_task_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_task_history_id_seq OWNED BY project_task_history.id;


--
-- Name: project_task_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_task_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_task_id_seq OWNER TO odoo;

--
-- Name: project_task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_task_id_seq OWNED BY project_task.id;


--
-- Name: project_task_parent_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_parent_rel (
    parent_id integer NOT NULL,
    task_id integer NOT NULL
);


ALTER TABLE public.project_task_parent_rel OWNER TO odoo;

--
-- Name: TABLE project_task_parent_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_parent_rel IS 'RELATION BETWEEN project_task AND project_task';


--
-- Name: project_task_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_type (
    id integer NOT NULL,
    create_uid integer,
    case_default boolean,
    create_date timestamp without time zone,
    description text,
    sequence integer,
    write_uid integer,
    fold boolean,
    write_date timestamp without time zone,
    name character varying NOT NULL
);


ALTER TABLE public.project_task_type OWNER TO odoo;

--
-- Name: TABLE project_task_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_type IS 'Task Stage';


--
-- Name: COLUMN project_task_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.create_uid IS 'Created by';


--
-- Name: COLUMN project_task_type.case_default; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.case_default IS 'Default for New Projects';


--
-- Name: COLUMN project_task_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.create_date IS 'Created on';


--
-- Name: COLUMN project_task_type.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.description IS 'Description';


--
-- Name: COLUMN project_task_type.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.sequence IS 'Sequence';


--
-- Name: COLUMN project_task_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_task_type.fold; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.fold IS 'Folded in Kanban View';


--
-- Name: COLUMN project_task_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_task_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_type.name IS 'Stage Name';


--
-- Name: project_task_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_task_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_task_type_id_seq OWNER TO odoo;

--
-- Name: project_task_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_task_type_id_seq OWNED BY project_task_type.id;


--
-- Name: project_task_type_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_type_rel (
    type_id integer NOT NULL,
    project_id integer NOT NULL
);


ALTER TABLE public.project_task_type_rel OWNER TO odoo;

--
-- Name: TABLE project_task_type_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_type_rel IS 'RELATION BETWEEN project_task_type AND project_project';


--
-- Name: project_task_work; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_task_work (
    id integer NOT NULL,
    create_uid integer,
    user_id integer NOT NULL,
    name character varying,
    task_id integer NOT NULL,
    company_id integer,
    write_uid integer,
    hours double precision,
    write_date timestamp without time zone,
    date timestamp without time zone,
    create_date timestamp without time zone
);


ALTER TABLE public.project_task_work OWNER TO odoo;

--
-- Name: TABLE project_task_work; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_task_work IS 'Project Task Work';


--
-- Name: COLUMN project_task_work.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.create_uid IS 'Created by';


--
-- Name: COLUMN project_task_work.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.user_id IS 'Done by';


--
-- Name: COLUMN project_task_work.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.name IS 'Work summary';


--
-- Name: COLUMN project_task_work.task_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.task_id IS 'Task';


--
-- Name: COLUMN project_task_work.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.company_id IS 'Company';


--
-- Name: COLUMN project_task_work.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.write_uid IS 'Last Updated by';


--
-- Name: COLUMN project_task_work.hours; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.hours IS 'Time Spent';


--
-- Name: COLUMN project_task_work.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.write_date IS 'Last Updated on';


--
-- Name: COLUMN project_task_work.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.date IS 'Date';


--
-- Name: COLUMN project_task_work.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN project_task_work.create_date IS 'Created on';


--
-- Name: project_task_work_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE project_task_work_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.project_task_work_id_seq OWNER TO odoo;

--
-- Name: project_task_work_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE project_task_work_id_seq OWNED BY project_task_work.id;


--
-- Name: project_user_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE project_user_rel (
    project_id integer NOT NULL,
    uid integer NOT NULL
);


ALTER TABLE public.project_user_rel OWNER TO odoo;

--
-- Name: TABLE project_user_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE project_user_rel IS 'RELATION BETWEEN project_project AND res_users';


--
-- Name: purchase_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_config_settings (
    id integer NOT NULL,
    group_uom boolean,
    create_uid integer,
    module_purchase_analytic_plans boolean,
    create_date timestamp without time zone,
    module_stock_dropshipping boolean,
    group_costing_method boolean,
    group_purchase_pricelist boolean,
    module_purchase_requisition boolean,
    group_advance_purchase_requisition boolean,
    write_uid integer,
    module_purchase_double_validation boolean,
    group_analytic_account_for_purchases boolean,
    write_date timestamp without time zone,
    default_invoice_method character varying NOT NULL,
    module_warning boolean
);


ALTER TABLE public.purchase_config_settings OWNER TO odoo;

--
-- Name: TABLE purchase_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_config_settings IS 'purchase.config.settings';


--
-- Name: COLUMN purchase_config_settings.group_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.group_uom IS 'Manage different units of measure for products';


--
-- Name: COLUMN purchase_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN purchase_config_settings.module_purchase_analytic_plans; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.module_purchase_analytic_plans IS 'Use multiple analytic accounts on purchase orders';


--
-- Name: COLUMN purchase_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN purchase_config_settings.module_stock_dropshipping; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.module_stock_dropshipping IS 'Manage dropshipping';


--
-- Name: COLUMN purchase_config_settings.group_costing_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.group_costing_method IS 'Use ''Real Price'' or ''Average'' costing methods.';


--
-- Name: COLUMN purchase_config_settings.group_purchase_pricelist; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.group_purchase_pricelist IS 'Manage pricelist per supplier';


--
-- Name: COLUMN purchase_config_settings.module_purchase_requisition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.module_purchase_requisition IS 'Manage calls for bids';


--
-- Name: COLUMN purchase_config_settings.group_advance_purchase_requisition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.group_advance_purchase_requisition IS 'Choose from several bids in a call for bids';


--
-- Name: COLUMN purchase_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN purchase_config_settings.module_purchase_double_validation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.module_purchase_double_validation IS 'Force two levels of approvals';


--
-- Name: COLUMN purchase_config_settings.group_analytic_account_for_purchases; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.group_analytic_account_for_purchases IS 'Analytic accounting for purchases';


--
-- Name: COLUMN purchase_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN purchase_config_settings.default_invoice_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.default_invoice_method IS 'Default invoicing control method';


--
-- Name: COLUMN purchase_config_settings.module_warning; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_config_settings.module_warning IS 'Alerts by products or supplier';


--
-- Name: purchase_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE purchase_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purchase_config_settings_id_seq OWNER TO odoo;

--
-- Name: purchase_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE purchase_config_settings_id_seq OWNED BY purchase_config_settings.id;


--
-- Name: purchase_invoice_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_invoice_rel (
    purchase_id integer NOT NULL,
    invoice_id integer NOT NULL
);


ALTER TABLE public.purchase_invoice_rel OWNER TO odoo;

--
-- Name: TABLE purchase_invoice_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_invoice_rel IS 'RELATION BETWEEN purchase_order AND account_invoice';


--
-- Name: purchase_order; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order (
    id integer NOT NULL,
    origin character varying,
    create_date timestamp without time zone,
    company_id integer NOT NULL,
    currency_id integer NOT NULL,
    partner_ref character varying,
    date_order timestamp without time zone NOT NULL,
    partner_id integer NOT NULL,
    dest_address_id integer,
    create_uid integer,
    fiscal_position integer,
    amount_untaxed numeric,
    picking_type_id integer NOT NULL,
    location_id integer NOT NULL,
    message_last_post timestamp without time zone,
    journal_id integer,
    amount_tax numeric,
    state character varying,
    bid_validity date,
    pricelist_id integer NOT NULL,
    incoterm_id integer,
    bid_date date,
    payment_term_id integer,
    write_date timestamp without time zone,
    write_uid integer,
    date_approve date,
    amount_total numeric,
    name character varying NOT NULL,
    notes text,
    invoice_method character varying NOT NULL,
    shipped boolean,
    validator integer,
    minimum_planned_date date,
    related_location_id integer
);


ALTER TABLE public.purchase_order OWNER TO odoo;

--
-- Name: TABLE purchase_order; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order IS 'Purchase Order';


--
-- Name: COLUMN purchase_order.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.origin IS 'Source Document';


--
-- Name: COLUMN purchase_order.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.create_date IS 'Created on';


--
-- Name: COLUMN purchase_order.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.company_id IS 'Company';


--
-- Name: COLUMN purchase_order.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.currency_id IS 'Currency';


--
-- Name: COLUMN purchase_order.partner_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.partner_ref IS 'Supplier Reference';


--
-- Name: COLUMN purchase_order.date_order; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.date_order IS 'Order Date';


--
-- Name: COLUMN purchase_order.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.partner_id IS 'Supplier';


--
-- Name: COLUMN purchase_order.dest_address_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.dest_address_id IS 'Customer Address (Direct Delivery)';


--
-- Name: COLUMN purchase_order.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.create_uid IS 'Responsible';


--
-- Name: COLUMN purchase_order.fiscal_position; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.fiscal_position IS 'Fiscal Position';


--
-- Name: COLUMN purchase_order.amount_untaxed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.amount_untaxed IS 'Untaxed Amount';


--
-- Name: COLUMN purchase_order.picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.picking_type_id IS 'Deliver To';


--
-- Name: COLUMN purchase_order.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.location_id IS 'Destination';


--
-- Name: COLUMN purchase_order.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN purchase_order.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.journal_id IS 'Journal';


--
-- Name: COLUMN purchase_order.amount_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.amount_tax IS 'Taxes';


--
-- Name: COLUMN purchase_order.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.state IS 'Status';


--
-- Name: COLUMN purchase_order.bid_validity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.bid_validity IS 'Bid Valid Until';


--
-- Name: COLUMN purchase_order.pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.pricelist_id IS 'Pricelist';


--
-- Name: COLUMN purchase_order.incoterm_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.incoterm_id IS 'Incoterm';


--
-- Name: COLUMN purchase_order.bid_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.bid_date IS 'Bid Received On';


--
-- Name: COLUMN purchase_order.payment_term_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.payment_term_id IS 'Payment Term';


--
-- Name: COLUMN purchase_order.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.write_date IS 'Last Updated on';


--
-- Name: COLUMN purchase_order.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.write_uid IS 'Last Updated by';


--
-- Name: COLUMN purchase_order.date_approve; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.date_approve IS 'Date Approved';


--
-- Name: COLUMN purchase_order.amount_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.amount_total IS 'Total';


--
-- Name: COLUMN purchase_order.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.name IS 'Order Reference';


--
-- Name: COLUMN purchase_order.notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.notes IS 'Terms and Conditions';


--
-- Name: COLUMN purchase_order.invoice_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.invoice_method IS 'Invoicing Control';


--
-- Name: COLUMN purchase_order.shipped; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.shipped IS 'Received';


--
-- Name: COLUMN purchase_order.validator; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.validator IS 'Validated by';


--
-- Name: COLUMN purchase_order.minimum_planned_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.minimum_planned_date IS 'Expected Date';


--
-- Name: COLUMN purchase_order.related_location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order.related_location_id IS 'Related location';


--
-- Name: purchase_order_group; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order_group (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.purchase_order_group OWNER TO odoo;

--
-- Name: TABLE purchase_order_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order_group IS 'Purchase Order Merge';


--
-- Name: COLUMN purchase_order_group.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_group.create_uid IS 'Created by';


--
-- Name: COLUMN purchase_order_group.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_group.create_date IS 'Created on';


--
-- Name: COLUMN purchase_order_group.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_group.write_date IS 'Last Updated on';


--
-- Name: COLUMN purchase_order_group.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_group.write_uid IS 'Last Updated by';


--
-- Name: purchase_order_group_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE purchase_order_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purchase_order_group_id_seq OWNER TO odoo;

--
-- Name: purchase_order_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE purchase_order_group_id_seq OWNED BY purchase_order_group.id;


--
-- Name: purchase_order_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purchase_order_id_seq OWNER TO odoo;

--
-- Name: purchase_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;


--
-- Name: purchase_order_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order_line (
    id integer NOT NULL,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    price_unit numeric NOT NULL,
    write_uid integer,
    product_qty numeric NOT NULL,
    partner_id integer,
    invoiced boolean,
    create_uid integer,
    company_id integer,
    state character varying NOT NULL,
    account_analytic_id integer,
    order_id integer NOT NULL,
    write_date timestamp without time zone,
    name text NOT NULL,
    product_id integer,
    date_planned date NOT NULL
);


ALTER TABLE public.purchase_order_line OWNER TO odoo;

--
-- Name: TABLE purchase_order_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order_line IS 'Purchase Order Line';


--
-- Name: COLUMN purchase_order_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.create_date IS 'Created on';


--
-- Name: COLUMN purchase_order_line.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN purchase_order_line.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.price_unit IS 'Unit Price';


--
-- Name: COLUMN purchase_order_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN purchase_order_line.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.product_qty IS 'Quantity';


--
-- Name: COLUMN purchase_order_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.partner_id IS 'Partner';


--
-- Name: COLUMN purchase_order_line.invoiced; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.invoiced IS 'Invoiced';


--
-- Name: COLUMN purchase_order_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.create_uid IS 'Created by';


--
-- Name: COLUMN purchase_order_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.company_id IS 'Company';


--
-- Name: COLUMN purchase_order_line.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.state IS 'Status';


--
-- Name: COLUMN purchase_order_line.account_analytic_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.account_analytic_id IS 'Analytic Account';


--
-- Name: COLUMN purchase_order_line.order_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.order_id IS 'Order Reference';


--
-- Name: COLUMN purchase_order_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN purchase_order_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.name IS 'Description';


--
-- Name: COLUMN purchase_order_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.product_id IS 'Product';


--
-- Name: COLUMN purchase_order_line.date_planned; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line.date_planned IS 'Scheduled Date';


--
-- Name: purchase_order_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE purchase_order_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purchase_order_line_id_seq OWNER TO odoo;

--
-- Name: purchase_order_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE purchase_order_line_id_seq OWNED BY purchase_order_line.id;


--
-- Name: purchase_order_line_invoice; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order_line_invoice (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.purchase_order_line_invoice OWNER TO odoo;

--
-- Name: TABLE purchase_order_line_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order_line_invoice IS 'Purchase Order Line Make Invoice';


--
-- Name: COLUMN purchase_order_line_invoice.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line_invoice.create_uid IS 'Created by';


--
-- Name: COLUMN purchase_order_line_invoice.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line_invoice.create_date IS 'Created on';


--
-- Name: COLUMN purchase_order_line_invoice.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line_invoice.write_date IS 'Last Updated on';


--
-- Name: COLUMN purchase_order_line_invoice.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN purchase_order_line_invoice.write_uid IS 'Last Updated by';


--
-- Name: purchase_order_line_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE purchase_order_line_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purchase_order_line_invoice_id_seq OWNER TO odoo;

--
-- Name: purchase_order_line_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE purchase_order_line_invoice_id_seq OWNED BY purchase_order_line_invoice.id;


--
-- Name: purchase_order_line_invoice_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order_line_invoice_rel (
    order_line_id integer NOT NULL,
    invoice_id integer NOT NULL
);


ALTER TABLE public.purchase_order_line_invoice_rel OWNER TO odoo;

--
-- Name: TABLE purchase_order_line_invoice_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order_line_invoice_rel IS 'RELATION BETWEEN purchase_order_line AND account_invoice_line';


--
-- Name: purchase_order_taxe; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE purchase_order_taxe (
    ord_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.purchase_order_taxe OWNER TO odoo;

--
-- Name: TABLE purchase_order_taxe; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE purchase_order_taxe IS 'RELATION BETWEEN purchase_order_line AND account_tax';


--
-- Name: stock_picking_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_picking_type (
    id integer NOT NULL,
    code character varying NOT NULL,
    create_date timestamp without time zone,
    sequence integer,
    color integer,
    write_uid integer,
    create_uid integer,
    default_location_dest_id integer,
    warehouse_id integer,
    sequence_id integer NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    name character varying NOT NULL,
    return_picking_type_id integer,
    default_location_src_id integer
);


ALTER TABLE public.stock_picking_type OWNER TO odoo;

--
-- Name: TABLE stock_picking_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_picking_type IS 'The picking type determines the picking view';


--
-- Name: COLUMN stock_picking_type.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.code IS 'Type of Operation';


--
-- Name: COLUMN stock_picking_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.create_date IS 'Created on';


--
-- Name: COLUMN stock_picking_type.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.sequence IS 'Sequence';


--
-- Name: COLUMN stock_picking_type.color; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.color IS 'Color';


--
-- Name: COLUMN stock_picking_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_picking_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.create_uid IS 'Created by';


--
-- Name: COLUMN stock_picking_type.default_location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.default_location_dest_id IS 'Default Destination Location';


--
-- Name: COLUMN stock_picking_type.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN stock_picking_type.sequence_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.sequence_id IS 'Reference Sequence';


--
-- Name: COLUMN stock_picking_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_picking_type.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.active IS 'Active';


--
-- Name: COLUMN stock_picking_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.name IS 'Picking Type Name';


--
-- Name: COLUMN stock_picking_type.return_picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.return_picking_type_id IS 'Picking Type for Returns';


--
-- Name: COLUMN stock_picking_type.default_location_src_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking_type.default_location_src_id IS 'Default Source Location';


--
-- Name: purchase_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW purchase_report AS
 SELECT min(l.id) AS id,
    s.date_order AS date,
    l.state,
    s.date_approve,
    s.minimum_planned_date AS expected_date,
    s.dest_address_id,
    s.pricelist_id,
    s.validator,
    spt.warehouse_id AS picking_type_id,
    s.partner_id,
    s.create_uid AS user_id,
    s.company_id,
    l.product_id,
    t.categ_id AS category_id,
    t.uom_id AS product_uom,
    s.location_id,
    sum(((l.product_qty / u.factor) * u2.factor)) AS quantity,
    (date_part('epoch'::text, age((s.date_approve)::timestamp without time zone, s.date_order)) / ((((24 * 60) * 60))::numeric(16,2))::double precision) AS delay,
    (date_part('epoch'::text, age((l.date_planned)::timestamp without time zone, s.date_order)) / ((((24 * 60) * 60))::numeric(16,2))::double precision) AS delay_pass,
    count(*) AS nbr,
    (sum((l.price_unit * l.product_qty)))::numeric(16,2) AS price_total,
    (avg((((100.0 * (l.price_unit * l.product_qty)))::double precision / NULLIF((((ip.value_float * (l.product_qty)::double precision) / (u.factor)::double precision) * (u2.factor)::double precision), (0.0)::double precision))))::numeric(16,2) AS negociation,
    (sum((((ip.value_float * (l.product_qty)::double precision) / (u.factor)::double precision) * (u2.factor)::double precision)))::numeric(16,2) AS price_standard,
    ((sum((l.product_qty * l.price_unit)) / NULLIF(sum(((l.product_qty / u.factor) * u2.factor)), 0.0)))::numeric(16,2) AS price_average
   FROM (((((((purchase_order_line l
     JOIN purchase_order s ON ((l.order_id = s.id)))
     LEFT JOIN product_product p ON ((l.product_id = p.id)))
     LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
     LEFT JOIN ir_property ip ON (((((ip.name)::text = 'standard_price'::text) AND ((ip.res_id)::text = concat('product.template,', t.id))) AND (ip.company_id = s.company_id))))
     LEFT JOIN product_uom u ON ((u.id = l.product_uom)))
     LEFT JOIN product_uom u2 ON ((u2.id = t.uom_id)))
     LEFT JOIN stock_picking_type spt ON ((spt.id = s.picking_type_id)))
  GROUP BY s.company_id, s.create_uid, s.partner_id, u.factor, s.location_id, l.price_unit, s.date_approve, l.date_planned, l.product_uom, s.minimum_planned_date, s.pricelist_id, s.validator, s.dest_address_id, l.product_id, t.categ_id, s.date_order, l.state, spt.warehouse_id, u.uom_type, u.category_id, t.uom_id, u.id, u2.factor;


ALTER TABLE public.purchase_report OWNER TO odoo;

--
-- Name: reconcile_account_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE reconcile_account_rel (
    reconcile_id integer NOT NULL,
    account_id integer NOT NULL
);


ALTER TABLE public.reconcile_account_rel OWNER TO odoo;

--
-- Name: TABLE reconcile_account_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE reconcile_account_rel IS 'RELATION BETWEEN account_automatic_reconcile AND account_account';


--
-- Name: rel_modules_langexport; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE rel_modules_langexport (
    wiz_id integer NOT NULL,
    module_id integer NOT NULL
);


ALTER TABLE public.rel_modules_langexport OWNER TO odoo;

--
-- Name: TABLE rel_modules_langexport; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE rel_modules_langexport IS 'RELATION BETWEEN base_language_export AND ir_module_module';


--
-- Name: rel_server_actions; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE rel_server_actions (
    server_id integer NOT NULL,
    action_id integer NOT NULL
);


ALTER TABLE public.rel_server_actions OWNER TO odoo;

--
-- Name: TABLE rel_server_actions; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE rel_server_actions IS 'RELATION BETWEEN ir_act_server AND ir_act_server';


--
-- Name: repair_fee_line_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE repair_fee_line_tax (
    repair_fee_line_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.repair_fee_line_tax OWNER TO odoo;

--
-- Name: TABLE repair_fee_line_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE repair_fee_line_tax IS 'RELATION BETWEEN mrp_repair_fee AND account_tax';


--
-- Name: repair_operation_line_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE repair_operation_line_tax (
    repair_operation_line_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.repair_operation_line_tax OWNER TO odoo;

--
-- Name: TABLE repair_operation_line_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE repair_operation_line_tax IS 'RELATION BETWEEN mrp_repair_line AND account_tax';


--
-- Name: report; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE report (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.report OWNER TO odoo;

--
-- Name: TABLE report; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE report IS 'Report';


--
-- Name: COLUMN report.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report.create_uid IS 'Created by';


--
-- Name: COLUMN report.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report.create_date IS 'Created on';


--
-- Name: COLUMN report.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report.write_date IS 'Last Updated on';


--
-- Name: COLUMN report.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report.write_uid IS 'Last Updated by';


--
-- Name: report_account_analytic_line_to_invoice; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_account_analytic_line_to_invoice AS
 SELECT DISTINCT to_char((l.date)::timestamp with time zone, 'MM'::text) AS month,
    to_char((l.date)::timestamp with time zone, 'YYYY'::text) AS name,
    min(l.id) AS id,
    l.product_id,
    l.account_id,
    sum(l.amount) AS amount,
    sum((l.unit_amount * (t.list_price)::double precision)) AS sale_price,
    sum(l.unit_amount) AS unit_amount,
    l.product_uom_id
   FROM ((account_analytic_line l
     LEFT JOIN product_product p ON ((l.product_id = p.id)))
     LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
  WHERE ((l.invoice_id IS NULL) AND (l.to_invoice IS NOT NULL))
  GROUP BY to_char((l.date)::timestamp with time zone, 'YYYY'::text), to_char((l.date)::timestamp with time zone, 'MM'::text), l.product_id, l.product_uom_id, l.account_id;


ALTER TABLE public.report_account_analytic_line_to_invoice OWNER TO odoo;

--
-- Name: report_account_receivable; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_account_receivable AS
 SELECT min(l.id) AS id,
    to_char((l.date)::timestamp with time zone, 'YYYY:IW'::text) AS name,
    sum((l.debit - l.credit)) AS balance,
    sum(l.debit) AS debit,
    sum(l.credit) AS credit,
    a.type
   FROM (account_move_line l
     LEFT JOIN account_account a ON ((l.account_id = a.id)))
  WHERE ((l.state)::text <> 'draft'::text)
  GROUP BY to_char((l.date)::timestamp with time zone, 'YYYY:IW'::text), a.type;


ALTER TABLE public.report_account_receivable OWNER TO odoo;

--
-- Name: report_account_sales; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_account_sales AS
 SELECT min(inv_line.id) AS id,
    to_char((inv.date_invoice)::timestamp with time zone, 'YYYY'::text) AS name,
    to_char((inv.date_invoice)::timestamp with time zone, 'MM'::text) AS month,
    sum(inv_line.price_subtotal) AS amount_total,
    inv.currency_id,
    inv.period_id,
    inv_line.product_id,
    sum(inv_line.quantity) AS quantity,
    account.id AS account_id
   FROM ((account_invoice_line inv_line
     JOIN account_invoice inv ON ((inv.id = inv_line.invoice_id)))
     JOIN account_account account ON ((account.id = inv_line.account_id)))
  WHERE ((inv.state)::text = ANY (ARRAY[('open'::character varying)::text, ('paid'::character varying)::text]))
  GROUP BY to_char((inv.date_invoice)::timestamp with time zone, 'YYYY'::text), to_char((inv.date_invoice)::timestamp with time zone, 'MM'::text), inv.currency_id, inv.period_id, inv_line.product_id, account.id;


ALTER TABLE public.report_account_sales OWNER TO odoo;

--
-- Name: report_account_type_sales; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_account_type_sales AS
 SELECT min(inv_line.id) AS id,
    to_char((inv.date_invoice)::timestamp with time zone, 'YYYY'::text) AS name,
    to_char((inv.date_invoice)::timestamp with time zone, 'MM'::text) AS month,
    sum(inv_line.price_subtotal) AS amount_total,
    inv.currency_id,
    inv.period_id,
    inv_line.product_id,
    sum(inv_line.quantity) AS quantity,
    account.user_type
   FROM ((account_invoice_line inv_line
     JOIN account_invoice inv ON ((inv.id = inv_line.invoice_id)))
     JOIN account_account account ON ((account.id = inv_line.account_id)))
  WHERE ((inv.state)::text = ANY (ARRAY[('open'::character varying)::text, ('paid'::character varying)::text]))
  GROUP BY to_char((inv.date_invoice)::timestamp with time zone, 'YYYY'::text), to_char((inv.date_invoice)::timestamp with time zone, 'MM'::text), inv.currency_id, inv.period_id, inv_line.product_id, account.user_type;


ALTER TABLE public.report_account_type_sales OWNER TO odoo;

--
-- Name: temp_range; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE temp_range (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.temp_range OWNER TO odoo;

--
-- Name: TABLE temp_range; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE temp_range IS 'A Temporary table used for Dashboard view';


--
-- Name: COLUMN temp_range.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN temp_range.create_uid IS 'Created by';


--
-- Name: COLUMN temp_range.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN temp_range.create_date IS 'Created on';


--
-- Name: COLUMN temp_range.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN temp_range.name IS 'Range';


--
-- Name: COLUMN temp_range.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN temp_range.write_uid IS 'Last Updated by';


--
-- Name: COLUMN temp_range.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN temp_range.write_date IS 'Last Updated on';


--
-- Name: report_aged_receivable; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_aged_receivable AS
 SELECT temp_range.id,
    temp_range.name
   FROM temp_range;


ALTER TABLE public.report_aged_receivable OWNER TO odoo;

--
-- Name: report_analytic_account_close; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_analytic_account_close AS
 SELECT a.id,
    a.id AS name,
    a.state,
    sum(l.unit_amount) AS quantity,
    sum(l.amount) AS balance,
    a.partner_id,
    a.quantity_max,
    a.date AS date_deadline
   FROM (account_analytic_line l
     RIGHT JOIN account_analytic_account a ON ((l.account_id = a.id)))
  GROUP BY a.id, a.state, a.quantity_max, a.date, a.partner_id
 HAVING (((a.quantity_max > (0)::double precision) AND (sum(l.unit_amount) >= a.quantity_max)) OR (a.date <= ('now'::text)::date));


ALTER TABLE public.report_analytic_account_close OWNER TO odoo;

--
-- Name: report_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.report_id_seq OWNER TO odoo;

--
-- Name: report_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE report_id_seq OWNED BY report.id;


--
-- Name: report_invoice_created; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_invoice_created AS
 SELECT inv.id,
    inv.name,
    inv.type,
    inv.number,
    inv.partner_id,
    inv.amount_untaxed,
    inv.amount_total,
    inv.currency_id,
    inv.date_invoice,
    inv.date_due,
    inv.residual,
    inv.state,
    inv.origin,
    inv.create_date
   FROM account_invoice inv
  WHERE ((to_date(to_char(inv.create_date, 'YYYY-MM-dd'::text), 'YYYY-MM-dd'::text) <= ('now'::text)::date) AND (to_date(to_char(inv.create_date, 'YYYY-MM-dd'::text), 'YYYY-MM-dd'::text) > (('now'::text)::date - 15)));


ALTER TABLE public.report_invoice_created OWNER TO odoo;

--
-- Name: stock_location; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    comment text,
    putaway_strategy_id integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    location_id integer,
    removal_strategy_id integer,
    create_uid integer,
    partner_id integer,
    company_id integer,
    complete_name character varying,
    usage character varying NOT NULL,
    loc_barcode character varying,
    scrap_location boolean,
    posz integer,
    posx integer,
    posy integer,
    active boolean,
    name character varying NOT NULL,
    valuation_in_account_id integer,
    valuation_out_account_id integer
);


ALTER TABLE public.stock_location OWNER TO odoo;

--
-- Name: TABLE stock_location; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location IS 'Inventory Locations';


--
-- Name: COLUMN stock_location.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.comment IS 'Additional Information';


--
-- Name: COLUMN stock_location.putaway_strategy_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.putaway_strategy_id IS 'Put Away Strategy';


--
-- Name: COLUMN stock_location.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.create_date IS 'Created on';


--
-- Name: COLUMN stock_location.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_location.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_location.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.location_id IS 'Parent Location';


--
-- Name: COLUMN stock_location.removal_strategy_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.removal_strategy_id IS 'Removal Strategy';


--
-- Name: COLUMN stock_location.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.create_uid IS 'Created by';


--
-- Name: COLUMN stock_location.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.partner_id IS 'Owner';


--
-- Name: COLUMN stock_location.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.company_id IS 'Company';


--
-- Name: COLUMN stock_location.complete_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.complete_name IS 'Location Name';


--
-- Name: COLUMN stock_location.usage; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.usage IS 'Location Type';


--
-- Name: COLUMN stock_location.loc_barcode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.loc_barcode IS 'Location Barcode';


--
-- Name: COLUMN stock_location.scrap_location; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.scrap_location IS 'Is a Scrap Location?';


--
-- Name: COLUMN stock_location.posz; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.posz IS 'Height (Z)';


--
-- Name: COLUMN stock_location.posx; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.posx IS 'Corridor (X)';


--
-- Name: COLUMN stock_location.posy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.posy IS 'Shelves (Y)';


--
-- Name: COLUMN stock_location.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.active IS 'Active';


--
-- Name: COLUMN stock_location.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.name IS 'Location Name';


--
-- Name: COLUMN stock_location.valuation_in_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.valuation_in_account_id IS 'Stock Valuation Account (Incoming)';


--
-- Name: COLUMN stock_location.valuation_out_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location.valuation_out_account_id IS 'Stock Valuation Account (Outgoing)';


--
-- Name: stock_move; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_move (
    id integer NOT NULL,
    origin character varying,
    product_uos_qty numeric,
    create_date timestamp without time zone,
    move_dest_id integer,
    product_uom integer NOT NULL,
    price_unit double precision,
    product_uom_qty numeric NOT NULL,
    company_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    product_qty numeric,
    product_uos integer,
    location_id integer NOT NULL,
    priority character varying,
    picking_type_id integer,
    partner_id integer,
    note text,
    state character varying,
    origin_returned_move_id integer,
    product_packaging integer,
    date_expected timestamp without time zone NOT NULL,
    procurement_id integer,
    name character varying NOT NULL,
    create_uid integer,
    warehouse_id integer,
    inventory_id integer,
    partially_available boolean,
    propagate boolean,
    restrict_partner_id integer,
    procure_method character varying NOT NULL,
    write_uid integer,
    restrict_lot_id integer,
    group_id integer,
    product_id integer NOT NULL,
    split_from integer,
    picking_id integer,
    location_dest_id integer NOT NULL,
    write_date timestamp without time zone,
    push_rule_id integer,
    rule_id integer,
    invoice_state character varying NOT NULL,
    purchase_line_id integer,
    weight numeric,
    weight_uom_id integer NOT NULL,
    weight_net numeric,
    consumed_for integer,
    raw_material_production_id integer,
    production_id integer
);


ALTER TABLE public.stock_move OWNER TO odoo;

--
-- Name: TABLE stock_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_move IS 'Stock Move';


--
-- Name: COLUMN stock_move.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.origin IS 'Source';


--
-- Name: COLUMN stock_move.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_uos_qty IS 'Quantity (UOS)';


--
-- Name: COLUMN stock_move.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.create_date IS 'Creation Date';


--
-- Name: COLUMN stock_move.move_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.move_dest_id IS 'Destination Move';


--
-- Name: COLUMN stock_move.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_uom IS 'Unit of Measure';


--
-- Name: COLUMN stock_move.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.price_unit IS 'Unit Price';


--
-- Name: COLUMN stock_move.product_uom_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_uom_qty IS 'Quantity';


--
-- Name: COLUMN stock_move.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.company_id IS 'Company';


--
-- Name: COLUMN stock_move.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.date IS 'Date';


--
-- Name: COLUMN stock_move.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_qty IS 'Quantity';


--
-- Name: COLUMN stock_move.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_uos IS 'Product UOS';


--
-- Name: COLUMN stock_move.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.location_id IS 'Source Location';


--
-- Name: COLUMN stock_move.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.priority IS 'Priority';


--
-- Name: COLUMN stock_move.picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.picking_type_id IS 'Picking Type';


--
-- Name: COLUMN stock_move.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.partner_id IS 'Destination Address ';


--
-- Name: COLUMN stock_move.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.note IS 'Notes';


--
-- Name: COLUMN stock_move.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.state IS 'Status';


--
-- Name: COLUMN stock_move.origin_returned_move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.origin_returned_move_id IS 'Origin return move';


--
-- Name: COLUMN stock_move.product_packaging; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_packaging IS 'Prefered Packaging';


--
-- Name: COLUMN stock_move.date_expected; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.date_expected IS 'Expected Date';


--
-- Name: COLUMN stock_move.procurement_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.procurement_id IS 'Procurement';


--
-- Name: COLUMN stock_move.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.name IS 'Description';


--
-- Name: COLUMN stock_move.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.create_uid IS 'Created by';


--
-- Name: COLUMN stock_move.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN stock_move.inventory_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.inventory_id IS 'Inventory';


--
-- Name: COLUMN stock_move.partially_available; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.partially_available IS 'Partially Available';


--
-- Name: COLUMN stock_move.propagate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.propagate IS 'Propagate cancel and split';


--
-- Name: COLUMN stock_move.restrict_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.restrict_partner_id IS 'Owner ';


--
-- Name: COLUMN stock_move.procure_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.procure_method IS 'Supply Method';


--
-- Name: COLUMN stock_move.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_move.restrict_lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.restrict_lot_id IS 'Lot';


--
-- Name: COLUMN stock_move.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.group_id IS 'Procurement Group';


--
-- Name: COLUMN stock_move.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.product_id IS 'Product';


--
-- Name: COLUMN stock_move.split_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.split_from IS 'Move Split From';


--
-- Name: COLUMN stock_move.picking_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.picking_id IS 'Reference';


--
-- Name: COLUMN stock_move.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.location_dest_id IS 'Destination Location';


--
-- Name: COLUMN stock_move.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_move.push_rule_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.push_rule_id IS 'Push Rule';


--
-- Name: COLUMN stock_move.rule_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.rule_id IS 'Procurement Rule';


--
-- Name: COLUMN stock_move.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.invoice_state IS 'Invoice Control';


--
-- Name: COLUMN stock_move.purchase_line_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.purchase_line_id IS 'Purchase Order Line';


--
-- Name: COLUMN stock_move.weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.weight IS 'Weight';


--
-- Name: COLUMN stock_move.weight_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.weight_uom_id IS 'Unit of Measure';


--
-- Name: COLUMN stock_move.weight_net; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.weight_net IS 'Net weight';


--
-- Name: COLUMN stock_move.consumed_for; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.consumed_for IS 'Consumed for';


--
-- Name: COLUMN stock_move.raw_material_production_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.raw_material_production_id IS 'Production Order for Raw Materials';


--
-- Name: COLUMN stock_move.production_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move.production_id IS 'Production Order for Produced Products';


--
-- Name: report_mrp_inout; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_mrp_inout AS
 SELECT min(sm.id) AS id,
    to_char(sm.date, 'YYYY:IW'::text) AS date,
    sum((
        CASE
            WHEN ((sl.usage)::text = 'internal'::text) THEN (sm.price_unit * (sm.product_qty)::double precision)
            ELSE (0.0)::double precision
        END -
        CASE
            WHEN ((sl2.usage)::text = 'internal'::text) THEN (sm.price_unit * (sm.product_qty)::double precision)
            ELSE (0.0)::double precision
        END)) AS value,
    sm.company_id
   FROM ((((stock_move sm
     LEFT JOIN product_product pp ON ((pp.id = sm.product_id)))
     LEFT JOIN product_template pt ON ((pt.id = pp.product_tmpl_id)))
     LEFT JOIN stock_location sl ON ((sl.id = sm.location_id)))
     LEFT JOIN stock_location sl2 ON ((sl2.id = sm.location_dest_id)))
  WHERE ((sm.state)::text = 'done'::text)
  GROUP BY to_char(sm.date, 'YYYY:IW'::text), sm.company_id;


ALTER TABLE public.report_mrp_inout OWNER TO odoo;

--
-- Name: report_paperformat; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE report_paperformat (
    id integer NOT NULL,
    create_uid integer,
    page_width integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    format character varying,
    "default" boolean,
    header_line boolean,
    header_spacing integer,
    dpi integer NOT NULL,
    write_uid integer,
    margin_right integer,
    margin_top integer,
    margin_left integer,
    write_date timestamp without time zone,
    margin_bottom integer,
    page_height integer,
    orientation character varying
);


ALTER TABLE public.report_paperformat OWNER TO odoo;

--
-- Name: TABLE report_paperformat; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE report_paperformat IS 'Allows customization of a report.';


--
-- Name: COLUMN report_paperformat.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.create_uid IS 'Created by';


--
-- Name: COLUMN report_paperformat.page_width; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.page_width IS 'Page width (mm)';


--
-- Name: COLUMN report_paperformat.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.create_date IS 'Created on';


--
-- Name: COLUMN report_paperformat.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.name IS 'Name';


--
-- Name: COLUMN report_paperformat.format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.format IS 'Paper size';


--
-- Name: COLUMN report_paperformat."default"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat."default" IS 'Default paper format ?';


--
-- Name: COLUMN report_paperformat.header_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.header_line IS 'Display a header line';


--
-- Name: COLUMN report_paperformat.header_spacing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.header_spacing IS 'Header spacing';


--
-- Name: COLUMN report_paperformat.dpi; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.dpi IS 'Output DPI';


--
-- Name: COLUMN report_paperformat.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.write_uid IS 'Last Updated by';


--
-- Name: COLUMN report_paperformat.margin_right; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.margin_right IS 'Right Margin (mm)';


--
-- Name: COLUMN report_paperformat.margin_top; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.margin_top IS 'Top Margin (mm)';


--
-- Name: COLUMN report_paperformat.margin_left; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.margin_left IS 'Left Margin (mm)';


--
-- Name: COLUMN report_paperformat.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.write_date IS 'Last Updated on';


--
-- Name: COLUMN report_paperformat.margin_bottom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.margin_bottom IS 'Bottom Margin (mm)';


--
-- Name: COLUMN report_paperformat.page_height; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.page_height IS 'Page height (mm)';


--
-- Name: COLUMN report_paperformat.orientation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN report_paperformat.orientation IS 'Orientation';


--
-- Name: report_paperformat_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE report_paperformat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.report_paperformat_id_seq OWNER TO odoo;

--
-- Name: report_paperformat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE report_paperformat_id_seq OWNED BY report_paperformat.id;


--
-- Name: report_project_task_user; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE report_project_task_user (
    nbr integer,
    id integer,
    date_start timestamp without time zone,
    date_end timestamp without time zone,
    date_last_stage_update timestamp without time zone,
    date_deadline date,
    no_of_days double precision,
    user_id integer,
    reviewer_id integer,
    progress numeric,
    project_id integer,
    hours_effective numeric,
    priority character varying,
    name character varying(128),
    company_id integer,
    partner_id integer,
    stage_id integer,
    state character varying,
    remaining_hours numeric,
    total_hours numeric,
    hours_delay numeric,
    hours_planned double precision,
    closing_days double precision,
    opening_days double precision,
    delay_endings_days double precision
);


ALTER TABLE public.report_project_task_user OWNER TO odoo;

--
-- Name: report_stock_lines_date; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE report_stock_lines_date (
    id integer,
    product_id integer,
    date timestamp without time zone,
    move_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.report_stock_lines_date OWNER TO odoo;

--
-- Name: report_timesheet_account; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_timesheet_account AS
 SELECT min(account_analytic_line.id) AS id,
    to_char(account_analytic_line.create_date, 'YYYY'::text) AS name,
    to_char(account_analytic_line.create_date, 'MM'::text) AS month,
    account_analytic_line.user_id,
    account_analytic_line.account_id,
    sum(account_analytic_line.unit_amount) AS quantity
   FROM account_analytic_line
  GROUP BY to_char(account_analytic_line.create_date, 'YYYY'::text), to_char(account_analytic_line.create_date, 'MM'::text), account_analytic_line.user_id, account_analytic_line.account_id;


ALTER TABLE public.report_timesheet_account OWNER TO odoo;

--
-- Name: report_timesheet_account_date; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_timesheet_account_date AS
 SELECT min(account_analytic_line.id) AS id,
    to_char((account_analytic_line.date)::timestamp with time zone, 'YYYY'::text) AS name,
    to_char((account_analytic_line.date)::timestamp with time zone, 'MM'::text) AS month,
    account_analytic_line.user_id,
    account_analytic_line.account_id,
    sum(account_analytic_line.unit_amount) AS quantity
   FROM account_analytic_line
  GROUP BY to_char((account_analytic_line.date)::timestamp with time zone, 'YYYY'::text), to_char((account_analytic_line.date)::timestamp with time zone, 'MM'::text), account_analytic_line.user_id, account_analytic_line.account_id;


ALTER TABLE public.report_timesheet_account_date OWNER TO odoo;

--
-- Name: report_timesheet_invoice; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_timesheet_invoice AS
 SELECT min(l.id) AS id,
    l.user_id,
    l.account_id,
    a.user_id AS manager_id,
    sum(l.unit_amount) AS quantity,
    sum((l.unit_amount * (t.list_price)::double precision)) AS amount_invoice
   FROM ((((account_analytic_line l
     LEFT JOIN hr_timesheet_invoice_factor f ON ((l.to_invoice = f.id)))
     LEFT JOIN account_analytic_account a ON ((l.account_id = a.id)))
     LEFT JOIN product_product p ON ((l.to_invoice = f.id)))
     LEFT JOIN product_template t ON ((l.to_invoice = f.id)))
  WHERE ((l.to_invoice IS NOT NULL) AND (l.invoice_id IS NULL))
  GROUP BY l.user_id, l.account_id, a.user_id;


ALTER TABLE public.report_timesheet_invoice OWNER TO odoo;

--
-- Name: report_timesheet_line; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_timesheet_line AS
 SELECT min(l.id) AS id,
    l.date,
    to_char((l.date)::timestamp with time zone, 'YYYY'::text) AS name,
    to_char((l.date)::timestamp with time zone, 'MM'::text) AS month,
    l.user_id,
    to_char((l.date)::timestamp with time zone, 'YYYY-MM-DD'::text) AS day,
    l.invoice_id,
    l.product_id,
    l.account_id,
    l.general_account_id,
    sum(l.unit_amount) AS quantity,
    sum(l.amount) AS cost
   FROM account_analytic_line l
  WHERE (l.user_id IS NOT NULL)
  GROUP BY l.date, l.user_id, l.product_id, l.account_id, l.general_account_id, l.invoice_id;


ALTER TABLE public.report_timesheet_line OWNER TO odoo;

--
-- Name: report_timesheet_user; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_timesheet_user AS
 SELECT min(l.id) AS id,
    to_char((l.date)::timestamp with time zone, 'YYYY'::text) AS name,
    to_char((l.date)::timestamp with time zone, 'MM'::text) AS month,
    l.user_id,
    sum(l.unit_amount) AS quantity,
    sum(l.amount) AS cost
   FROM account_analytic_line l
  WHERE (l.user_id IS NOT NULL)
  GROUP BY l.date, to_char((l.date)::timestamp with time zone, 'YYYY'::text), to_char((l.date)::timestamp with time zone, 'MM'::text), l.user_id;


ALTER TABLE public.report_timesheet_user OWNER TO odoo;

--
-- Name: report_workcenter_load; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW report_workcenter_load AS
 SELECT min(wl.id) AS id,
    to_char(p.date_planned, 'YYYY:mm:dd'::text) AS name,
    sum(wl.hour) AS hour,
    sum(wl.cycle) AS cycle,
    wl.workcenter_id
   FROM (mrp_production_workcenter_line wl
     LEFT JOIN mrp_production p ON ((p.id = wl.production_id)))
  GROUP BY wl.workcenter_id, to_char(p.date_planned, 'YYYY:mm:dd'::text);


ALTER TABLE public.report_workcenter_load OWNER TO odoo;

--
-- Name: res_bank; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_bank (
    id integer NOT NULL,
    city character varying,
    fax character varying,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    zip character varying(24),
    create_uid integer,
    country integer,
    street2 character varying,
    bic character varying(64),
    write_uid integer,
    email character varying,
    phone character varying,
    state integer,
    street character varying,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.res_bank OWNER TO odoo;

--
-- Name: TABLE res_bank; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_bank IS 'Bank';


--
-- Name: COLUMN res_bank.city; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.city IS 'City';


--
-- Name: COLUMN res_bank.fax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.fax IS 'Fax';


--
-- Name: COLUMN res_bank.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.create_date IS 'Created on';


--
-- Name: COLUMN res_bank.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.name IS 'Name';


--
-- Name: COLUMN res_bank.zip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.zip IS 'Zip';


--
-- Name: COLUMN res_bank.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.create_uid IS 'Created by';


--
-- Name: COLUMN res_bank.country; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.country IS 'Country';


--
-- Name: COLUMN res_bank.street2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.street2 IS 'Street2';


--
-- Name: COLUMN res_bank.bic; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.bic IS 'Bank Identifier Code';


--
-- Name: COLUMN res_bank.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_bank.email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.email IS 'Email';


--
-- Name: COLUMN res_bank.phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.phone IS 'Phone';


--
-- Name: COLUMN res_bank.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.state IS 'Fed. State';


--
-- Name: COLUMN res_bank.street; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.street IS 'Street';


--
-- Name: COLUMN res_bank.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_bank.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_bank.active IS 'Active';


--
-- Name: res_bank_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_bank_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_bank_id_seq OWNER TO odoo;

--
-- Name: res_bank_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_bank_id_seq OWNED BY res_bank.id;


--
-- Name: res_company; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_company (
    id integer NOT NULL,
    name character varying NOT NULL,
    partner_id integer NOT NULL,
    currency_id integer NOT NULL,
    rml_footer text,
    create_date timestamp without time zone,
    rml_header text NOT NULL,
    rml_paper_format character varying NOT NULL,
    write_uid integer,
    logo_web bytea,
    font integer,
    account_no character varying,
    parent_id integer,
    email character varying(64),
    create_uid integer,
    custom_footer boolean,
    phone character varying(64),
    rml_header2 text NOT NULL,
    rml_header3 text NOT NULL,
    write_date timestamp without time zone,
    rml_header1 character varying,
    company_registry character varying(64),
    paperformat_id integer,
    expense_currency_exchange_account_id integer,
    expects_chart_of_accounts boolean,
    paypal_account character varying(128),
    overdue_msg text,
    tax_calculation_rounding_method character varying,
    income_currency_exchange_account_id integer,
    sale_note text,
    internal_transit_location_id integer,
    propagation_minimum_delta integer,
    security_lead double precision NOT NULL,
    po_lead double precision NOT NULL,
    project_time_mode_id integer,
    pad_key character varying,
    pad_server character varying,
    manufacturing_lead double precision NOT NULL,
    default_cutoff_journal_id integer,
    default_prepaid_revenue_account_id integer,
    default_prepaid_expense_account_id integer
);


ALTER TABLE public.res_company OWNER TO odoo;

--
-- Name: COLUMN res_company.rml_footer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_footer IS 'Report Footer';


--
-- Name: COLUMN res_company.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.create_date IS 'Created on';


--
-- Name: COLUMN res_company.rml_header; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_header IS 'RML Header';


--
-- Name: COLUMN res_company.rml_paper_format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_paper_format IS 'Paper Format';


--
-- Name: COLUMN res_company.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_company.logo_web; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.logo_web IS 'Logo Web';


--
-- Name: COLUMN res_company.font; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.font IS 'Font';


--
-- Name: COLUMN res_company.account_no; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.account_no IS 'Account No.';


--
-- Name: COLUMN res_company.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.parent_id IS 'Parent Company';


--
-- Name: COLUMN res_company.email; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.email IS 'Email';


--
-- Name: COLUMN res_company.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.create_uid IS 'Created by';


--
-- Name: COLUMN res_company.custom_footer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.custom_footer IS 'Custom Footer';


--
-- Name: COLUMN res_company.phone; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.phone IS 'Phone';


--
-- Name: COLUMN res_company.rml_header2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_header2 IS 'RML Internal Header';


--
-- Name: COLUMN res_company.rml_header3; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_header3 IS 'RML Internal Header for Landscape Reports';


--
-- Name: COLUMN res_company.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_company.rml_header1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.rml_header1 IS 'Company Tagline';


--
-- Name: COLUMN res_company.company_registry; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.company_registry IS 'Company Registry';


--
-- Name: COLUMN res_company.paperformat_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.paperformat_id IS 'Paper format';


--
-- Name: COLUMN res_company.expense_currency_exchange_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.expense_currency_exchange_account_id IS 'Loss Exchange Rate Account';


--
-- Name: COLUMN res_company.expects_chart_of_accounts; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.expects_chart_of_accounts IS 'Expects a Chart of Accounts';


--
-- Name: COLUMN res_company.paypal_account; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.paypal_account IS 'Paypal Account';


--
-- Name: COLUMN res_company.overdue_msg; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.overdue_msg IS 'Overdue Payments Message';


--
-- Name: COLUMN res_company.tax_calculation_rounding_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.tax_calculation_rounding_method IS 'Tax Calculation Rounding Method';


--
-- Name: COLUMN res_company.income_currency_exchange_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.income_currency_exchange_account_id IS 'Gain Exchange Rate Account';


--
-- Name: COLUMN res_company.sale_note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.sale_note IS 'Default Terms and Conditions';


--
-- Name: COLUMN res_company.internal_transit_location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.internal_transit_location_id IS 'Internal Transit Location';


--
-- Name: COLUMN res_company.propagation_minimum_delta; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.propagation_minimum_delta IS 'Minimum Delta for Propagation of a Date Change on moves linked together';


--
-- Name: COLUMN res_company.security_lead; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.security_lead IS 'Security Days';


--
-- Name: COLUMN res_company.po_lead; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.po_lead IS 'Purchase Lead Time';


--
-- Name: COLUMN res_company.project_time_mode_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.project_time_mode_id IS 'Project Time Unit';


--
-- Name: COLUMN res_company.pad_key; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.pad_key IS 'Pad Api Key';


--
-- Name: COLUMN res_company.pad_server; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.pad_server IS 'Pad Server';


--
-- Name: COLUMN res_company.manufacturing_lead; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.manufacturing_lead IS 'Manufacturing Lead Time';


--
-- Name: COLUMN res_company.default_cutoff_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.default_cutoff_journal_id IS 'Default Cut-off Journal';


--
-- Name: COLUMN res_company.default_prepaid_revenue_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.default_prepaid_revenue_account_id IS 'Default Account for Prepaid Revenue';


--
-- Name: COLUMN res_company.default_prepaid_expense_account_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_company.default_prepaid_expense_account_id IS 'Default Account for Prepaid Expense';


--
-- Name: res_company_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_company_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_company_id_seq OWNER TO odoo;

--
-- Name: res_company_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_company_id_seq OWNED BY res_company.id;


--
-- Name: res_company_users_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_company_users_rel (
    cid integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.res_company_users_rel OWNER TO odoo;

--
-- Name: TABLE res_company_users_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_company_users_rel IS 'RELATION BETWEEN res_company AND res_users';


--
-- Name: res_config; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_config (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.res_config OWNER TO odoo;

--
-- Name: TABLE res_config; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_config IS 'res.config';


--
-- Name: COLUMN res_config.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config.create_uid IS 'Created by';


--
-- Name: COLUMN res_config.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config.create_date IS 'Created on';


--
-- Name: COLUMN res_config.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_config.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config.write_uid IS 'Last Updated by';


--
-- Name: res_config_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_config_id_seq OWNER TO odoo;

--
-- Name: res_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_config_id_seq OWNED BY res_config.id;


--
-- Name: res_config_installer; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_config_installer (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.res_config_installer OWNER TO odoo;

--
-- Name: TABLE res_config_installer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_config_installer IS 'res.config.installer';


--
-- Name: COLUMN res_config_installer.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_installer.create_uid IS 'Created by';


--
-- Name: COLUMN res_config_installer.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_installer.create_date IS 'Created on';


--
-- Name: COLUMN res_config_installer.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_installer.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_config_installer.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_installer.write_uid IS 'Last Updated by';


--
-- Name: res_config_installer_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_config_installer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_config_installer_id_seq OWNER TO odoo;

--
-- Name: res_config_installer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_config_installer_id_seq OWNED BY res_config_installer.id;


--
-- Name: res_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_config_settings (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.res_config_settings OWNER TO odoo;

--
-- Name: TABLE res_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_config_settings IS 'res.config.settings';


--
-- Name: COLUMN res_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN res_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN res_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_config_settings.write_uid IS 'Last Updated by';


--
-- Name: res_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_config_settings_id_seq OWNER TO odoo;

--
-- Name: res_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_config_settings_id_seq OWNED BY res_config_settings.id;


--
-- Name: res_country; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_country (
    id integer NOT NULL,
    create_uid integer,
    code character varying(2),
    create_date timestamp without time zone,
    name character varying NOT NULL,
    image bytea,
    write_uid integer,
    currency_id integer,
    address_format text,
    write_date timestamp without time zone
);


ALTER TABLE public.res_country OWNER TO odoo;

--
-- Name: TABLE res_country; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_country IS 'Country';


--
-- Name: COLUMN res_country.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.create_uid IS 'Created by';


--
-- Name: COLUMN res_country.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.code IS 'Country Code';


--
-- Name: COLUMN res_country.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.create_date IS 'Created on';


--
-- Name: COLUMN res_country.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.name IS 'Country Name';


--
-- Name: COLUMN res_country.image; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.image IS 'Image';


--
-- Name: COLUMN res_country.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_country.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.currency_id IS 'Currency';


--
-- Name: COLUMN res_country.address_format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.address_format IS 'Address Format';


--
-- Name: COLUMN res_country.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country.write_date IS 'Last Updated on';


--
-- Name: res_country_group; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_country_group (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.res_country_group OWNER TO odoo;

--
-- Name: TABLE res_country_group; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_country_group IS 'Country Group';


--
-- Name: COLUMN res_country_group.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_group.create_uid IS 'Created by';


--
-- Name: COLUMN res_country_group.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_group.create_date IS 'Created on';


--
-- Name: COLUMN res_country_group.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_group.name IS 'Name';


--
-- Name: COLUMN res_country_group.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_group.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_country_group.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_group.write_date IS 'Last Updated on';


--
-- Name: res_country_group_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_country_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_country_group_id_seq OWNER TO odoo;

--
-- Name: res_country_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_country_group_id_seq OWNED BY res_country_group.id;


--
-- Name: res_country_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_country_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_country_id_seq OWNER TO odoo;

--
-- Name: res_country_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_country_id_seq OWNED BY res_country.id;


--
-- Name: res_country_res_country_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_country_res_country_group_rel (
    res_country_id integer NOT NULL,
    res_country_group_id integer NOT NULL
);


ALTER TABLE public.res_country_res_country_group_rel OWNER TO odoo;

--
-- Name: TABLE res_country_res_country_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_country_res_country_group_rel IS 'RELATION BETWEEN res_country AND res_country_group';


--
-- Name: res_country_state; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_country_state (
    id integer NOT NULL,
    create_uid integer,
    code character varying(3) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    country_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.res_country_state OWNER TO odoo;

--
-- Name: TABLE res_country_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_country_state IS 'Country state';


--
-- Name: COLUMN res_country_state.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.create_uid IS 'Created by';


--
-- Name: COLUMN res_country_state.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.code IS 'State Code';


--
-- Name: COLUMN res_country_state.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.create_date IS 'Created on';


--
-- Name: COLUMN res_country_state.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.name IS 'State Name';


--
-- Name: COLUMN res_country_state.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.country_id IS 'Country';


--
-- Name: COLUMN res_country_state.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_country_state.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_country_state.write_date IS 'Last Updated on';


--
-- Name: res_country_state_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_country_state_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_country_state_id_seq OWNER TO odoo;

--
-- Name: res_country_state_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_country_state_id_seq OWNED BY res_country_state.id;


--
-- Name: res_currency; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_currency (
    id integer NOT NULL,
    name character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    rounding numeric,
    symbol character varying(4),
    company_id integer,
    write_uid integer,
    base boolean,
    write_date timestamp without time zone,
    active boolean,
    "position" character varying,
    accuracy integer
);


ALTER TABLE public.res_currency OWNER TO odoo;

--
-- Name: COLUMN res_currency.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.create_uid IS 'Created by';


--
-- Name: COLUMN res_currency.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.create_date IS 'Created on';


--
-- Name: COLUMN res_currency.rounding; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.rounding IS 'Rounding Factor';


--
-- Name: COLUMN res_currency.symbol; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.symbol IS 'Symbol';


--
-- Name: COLUMN res_currency.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.company_id IS 'Company';


--
-- Name: COLUMN res_currency.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_currency.base; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.base IS 'Base';


--
-- Name: COLUMN res_currency.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_currency.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.active IS 'Active';


--
-- Name: COLUMN res_currency."position"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency."position" IS 'Symbol Position';


--
-- Name: COLUMN res_currency.accuracy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_currency.accuracy IS 'Computational Accuracy';


--
-- Name: res_currency_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_currency_id_seq OWNER TO odoo;

--
-- Name: res_currency_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_currency_id_seq OWNED BY res_currency.id;


--
-- Name: res_currency_rate_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_currency_rate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_currency_rate_id_seq OWNER TO odoo;

--
-- Name: res_currency_rate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_currency_rate_id_seq OWNED BY res_currency_rate.id;


--
-- Name: res_font; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_font (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    family character varying NOT NULL,
    write_uid integer,
    mode character varying NOT NULL,
    write_date timestamp without time zone,
    path character varying NOT NULL
);


ALTER TABLE public.res_font OWNER TO odoo;

--
-- Name: TABLE res_font; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_font IS 'Fonts available';


--
-- Name: COLUMN res_font.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.create_uid IS 'Created by';


--
-- Name: COLUMN res_font.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.create_date IS 'Created on';


--
-- Name: COLUMN res_font.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.name IS 'Font Name';


--
-- Name: COLUMN res_font.family; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.family IS 'Font family';


--
-- Name: COLUMN res_font.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_font.mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.mode IS 'Mode';


--
-- Name: COLUMN res_font.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_font.path; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_font.path IS 'Path';


--
-- Name: res_font_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_font_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_font_id_seq OWNER TO odoo;

--
-- Name: res_font_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_font_id_seq OWNED BY res_font.id;


--
-- Name: res_groups; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_groups (
    id integer NOT NULL,
    comment text,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    category_id integer,
    share boolean
);


ALTER TABLE public.res_groups OWNER TO odoo;

--
-- Name: TABLE res_groups; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_groups IS 'Access Groups';


--
-- Name: COLUMN res_groups.comment; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.comment IS 'Comment';


--
-- Name: COLUMN res_groups.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.create_uid IS 'Created by';


--
-- Name: COLUMN res_groups.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.create_date IS 'Created on';


--
-- Name: COLUMN res_groups.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.name IS 'Name';


--
-- Name: COLUMN res_groups.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_groups.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_groups.category_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.category_id IS 'Application';


--
-- Name: COLUMN res_groups.share; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_groups.share IS 'Share Group';


--
-- Name: res_groups_action_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_groups_action_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


ALTER TABLE public.res_groups_action_rel OWNER TO odoo;

--
-- Name: TABLE res_groups_action_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_groups_action_rel IS 'RELATION BETWEEN ir_actions_todo AND res_groups';


--
-- Name: res_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_groups_id_seq OWNER TO odoo;

--
-- Name: res_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_groups_id_seq OWNED BY res_groups.id;


--
-- Name: res_groups_implied_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_groups_implied_rel (
    gid integer NOT NULL,
    hid integer NOT NULL
);


ALTER TABLE public.res_groups_implied_rel OWNER TO odoo;

--
-- Name: TABLE res_groups_implied_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_groups_implied_rel IS 'RELATION BETWEEN res_groups AND res_groups';


--
-- Name: res_groups_report_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_groups_report_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


ALTER TABLE public.res_groups_report_rel OWNER TO odoo;

--
-- Name: TABLE res_groups_report_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_groups_report_rel IS 'RELATION BETWEEN ir_act_report_xml AND res_groups';


--
-- Name: res_groups_users_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_groups_users_rel (
    gid integer NOT NULL,
    uid integer NOT NULL
);


ALTER TABLE public.res_groups_users_rel OWNER TO odoo;

--
-- Name: TABLE res_groups_users_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_groups_users_rel IS 'RELATION BETWEEN res_groups AND res_users';


--
-- Name: res_lang; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_lang (
    id integer NOT NULL,
    name character varying NOT NULL,
    code character varying(16) NOT NULL,
    date_format character varying NOT NULL,
    direction character varying NOT NULL,
    create_date timestamp without time zone,
    create_uid integer,
    thousands_sep character varying,
    translatable boolean,
    write_uid integer,
    time_format character varying NOT NULL,
    write_date timestamp without time zone,
    decimal_point character varying NOT NULL,
    active boolean,
    iso_code character varying(16),
    grouping character varying NOT NULL
);


ALTER TABLE public.res_lang OWNER TO odoo;

--
-- Name: COLUMN res_lang.date_format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.date_format IS 'Date Format';


--
-- Name: COLUMN res_lang.direction; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.direction IS 'Direction';


--
-- Name: COLUMN res_lang.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.create_date IS 'Created on';


--
-- Name: COLUMN res_lang.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.create_uid IS 'Created by';


--
-- Name: COLUMN res_lang.thousands_sep; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.thousands_sep IS 'Thousands Separator';


--
-- Name: COLUMN res_lang.translatable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.translatable IS 'Translatable';


--
-- Name: COLUMN res_lang.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_lang.time_format; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.time_format IS 'Time Format';


--
-- Name: COLUMN res_lang.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_lang.decimal_point; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.decimal_point IS 'Decimal Separator';


--
-- Name: COLUMN res_lang.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.active IS 'Active';


--
-- Name: COLUMN res_lang.iso_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.iso_code IS 'ISO code';


--
-- Name: COLUMN res_lang.grouping; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_lang.grouping IS 'Separator Format';


--
-- Name: res_lang_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_lang_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_lang_id_seq OWNER TO odoo;

--
-- Name: res_lang_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_lang_id_seq OWNED BY res_lang.id;


--
-- Name: res_partner_bank; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_bank (
    id integer NOT NULL,
    create_uid integer,
    owner_name character varying,
    create_date timestamp without time zone,
    name character varying,
    zip character varying(24),
    sequence integer,
    footer boolean,
    country_id integer,
    company_id integer,
    bank_name character varying,
    write_uid integer,
    state character varying NOT NULL,
    street character varying,
    city character varying,
    write_date timestamp without time zone,
    state_id integer,
    bank_bic character varying(16),
    partner_id integer,
    bank integer,
    acc_number character varying(64) NOT NULL,
    journal_id integer
);


ALTER TABLE public.res_partner_bank OWNER TO odoo;

--
-- Name: TABLE res_partner_bank; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_bank IS 'Bank Accounts';


--
-- Name: COLUMN res_partner_bank.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner_bank.owner_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.owner_name IS 'Account Owner Name';


--
-- Name: COLUMN res_partner_bank.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.create_date IS 'Created on';


--
-- Name: COLUMN res_partner_bank.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.name IS 'Bank Account';


--
-- Name: COLUMN res_partner_bank.zip; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.zip IS 'Zip';


--
-- Name: COLUMN res_partner_bank.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.sequence IS 'Sequence';


--
-- Name: COLUMN res_partner_bank.footer; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.footer IS 'Display on Reports';


--
-- Name: COLUMN res_partner_bank.country_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.country_id IS 'Country';


--
-- Name: COLUMN res_partner_bank.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.company_id IS 'Company';


--
-- Name: COLUMN res_partner_bank.bank_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.bank_name IS 'Bank Name';


--
-- Name: COLUMN res_partner_bank.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner_bank.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.state IS 'Bank Account Type';


--
-- Name: COLUMN res_partner_bank.street; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.street IS 'Street';


--
-- Name: COLUMN res_partner_bank.city; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.city IS 'City';


--
-- Name: COLUMN res_partner_bank.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_partner_bank.state_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.state_id IS 'Fed. State';


--
-- Name: COLUMN res_partner_bank.bank_bic; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.bank_bic IS 'Bank Identifier Code';


--
-- Name: COLUMN res_partner_bank.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.partner_id IS 'Account Owner';


--
-- Name: COLUMN res_partner_bank.bank; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.bank IS 'Bank';


--
-- Name: COLUMN res_partner_bank.acc_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.acc_number IS 'Account Number';


--
-- Name: COLUMN res_partner_bank.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank.journal_id IS 'Account Journal';


--
-- Name: res_partner_bank_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_bank_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_bank_id_seq OWNER TO odoo;

--
-- Name: res_partner_bank_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_bank_id_seq OWNED BY res_partner_bank.id;


--
-- Name: res_partner_bank_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_bank_type (
    id integer NOT NULL,
    create_uid integer,
    code character varying(64) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    format_layout text,
    write_date timestamp without time zone
);


ALTER TABLE public.res_partner_bank_type OWNER TO odoo;

--
-- Name: TABLE res_partner_bank_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_bank_type IS 'Bank Account Type';


--
-- Name: COLUMN res_partner_bank_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner_bank_type.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.code IS 'Code';


--
-- Name: COLUMN res_partner_bank_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.create_date IS 'Created on';


--
-- Name: COLUMN res_partner_bank_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.name IS 'Name';


--
-- Name: COLUMN res_partner_bank_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner_bank_type.format_layout; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.format_layout IS 'Format Layout';


--
-- Name: COLUMN res_partner_bank_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type.write_date IS 'Last Updated on';


--
-- Name: res_partner_bank_type_field; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_bank_type_field (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    required boolean,
    write_uid integer,
    readonly boolean,
    write_date timestamp without time zone,
    bank_type_id integer NOT NULL,
    size integer
);


ALTER TABLE public.res_partner_bank_type_field OWNER TO odoo;

--
-- Name: TABLE res_partner_bank_type_field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_bank_type_field IS 'Bank type fields';


--
-- Name: COLUMN res_partner_bank_type_field.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner_bank_type_field.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.create_date IS 'Created on';


--
-- Name: COLUMN res_partner_bank_type_field.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.name IS 'Field Name';


--
-- Name: COLUMN res_partner_bank_type_field.required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.required IS 'Required';


--
-- Name: COLUMN res_partner_bank_type_field.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner_bank_type_field.readonly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.readonly IS 'Readonly';


--
-- Name: COLUMN res_partner_bank_type_field.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_partner_bank_type_field.bank_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.bank_type_id IS 'Bank Type';


--
-- Name: COLUMN res_partner_bank_type_field.size; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_bank_type_field.size IS 'Max. Size';


--
-- Name: res_partner_bank_type_field_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_bank_type_field_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_bank_type_field_id_seq OWNER TO odoo;

--
-- Name: res_partner_bank_type_field_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_bank_type_field_id_seq OWNED BY res_partner_bank_type_field.id;


--
-- Name: res_partner_bank_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_bank_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_bank_type_id_seq OWNER TO odoo;

--
-- Name: res_partner_bank_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_bank_type_id_seq OWNED BY res_partner_bank_type.id;


--
-- Name: res_partner_category; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_category (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    parent_id integer,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.res_partner_category OWNER TO odoo;

--
-- Name: TABLE res_partner_category; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_category IS 'Partner Tags';


--
-- Name: COLUMN res_partner_category.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner_category.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.create_date IS 'Created on';


--
-- Name: COLUMN res_partner_category.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.name IS 'Category Name';


--
-- Name: COLUMN res_partner_category.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner_category.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.parent_id IS 'Parent Category';


--
-- Name: COLUMN res_partner_category.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.write_date IS 'Last Updated on';


--
-- Name: COLUMN res_partner_category.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_category.active IS 'Active';


--
-- Name: res_partner_category_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_category_id_seq OWNER TO odoo;

--
-- Name: res_partner_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_category_id_seq OWNED BY res_partner_category.id;


--
-- Name: res_partner_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_id_seq OWNER TO odoo;

--
-- Name: res_partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_id_seq OWNED BY res_partner.id;


--
-- Name: res_partner_res_partner_category_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_res_partner_category_rel (
    category_id integer NOT NULL,
    partner_id integer NOT NULL
);


ALTER TABLE public.res_partner_res_partner_category_rel OWNER TO odoo;

--
-- Name: TABLE res_partner_res_partner_category_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_res_partner_category_rel IS 'RELATION BETWEEN res_partner_category AND res_partner';


--
-- Name: res_partner_title; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_partner_title (
    id integer NOT NULL,
    create_uid integer,
    domain character varying NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    shortcut character varying,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.res_partner_title OWNER TO odoo;

--
-- Name: TABLE res_partner_title; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_partner_title IS 'res.partner.title';


--
-- Name: COLUMN res_partner_title.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.create_uid IS 'Created by';


--
-- Name: COLUMN res_partner_title.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.domain IS 'Domain';


--
-- Name: COLUMN res_partner_title.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.create_date IS 'Created on';


--
-- Name: COLUMN res_partner_title.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.name IS 'Title';


--
-- Name: COLUMN res_partner_title.shortcut; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.shortcut IS 'Abbreviation';


--
-- Name: COLUMN res_partner_title.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_partner_title.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_partner_title.write_date IS 'Last Updated on';


--
-- Name: res_partner_title_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_partner_title_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_partner_title_id_seq OWNER TO odoo;

--
-- Name: res_partner_title_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_partner_title_id_seq OWNED BY res_partner_title.id;


--
-- Name: res_request_link; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE res_request_link (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    object character varying NOT NULL,
    write_uid integer,
    priority integer,
    write_date timestamp without time zone
);


ALTER TABLE public.res_request_link OWNER TO odoo;

--
-- Name: TABLE res_request_link; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE res_request_link IS 'res.request.link';


--
-- Name: COLUMN res_request_link.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.create_uid IS 'Created by';


--
-- Name: COLUMN res_request_link.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.create_date IS 'Created on';


--
-- Name: COLUMN res_request_link.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.name IS 'Name';


--
-- Name: COLUMN res_request_link.object; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.object IS 'Object';


--
-- Name: COLUMN res_request_link.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.write_uid IS 'Last Updated by';


--
-- Name: COLUMN res_request_link.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.priority IS 'Priority';


--
-- Name: COLUMN res_request_link.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN res_request_link.write_date IS 'Last Updated on';


--
-- Name: res_request_link_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_request_link_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_request_link_id_seq OWNER TO odoo;

--
-- Name: res_request_link_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_request_link_id_seq OWNED BY res_request_link.id;


--
-- Name: res_users_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE res_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.res_users_id_seq OWNER TO odoo;

--
-- Name: res_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE res_users_id_seq OWNED BY res_users.id;


--
-- Name: resource_calendar; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE resource_calendar (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    manager integer,
    write_date timestamp without time zone
);


ALTER TABLE public.resource_calendar OWNER TO odoo;

--
-- Name: TABLE resource_calendar; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE resource_calendar IS 'Resource Calendar';


--
-- Name: COLUMN resource_calendar.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.create_uid IS 'Created by';


--
-- Name: COLUMN resource_calendar.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.create_date IS 'Created on';


--
-- Name: COLUMN resource_calendar.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.name IS 'Name';


--
-- Name: COLUMN resource_calendar.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.company_id IS 'Company';


--
-- Name: COLUMN resource_calendar.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.write_uid IS 'Last Updated by';


--
-- Name: COLUMN resource_calendar.manager; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.manager IS 'Workgroup Manager';


--
-- Name: COLUMN resource_calendar.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar.write_date IS 'Last Updated on';


--
-- Name: resource_calendar_attendance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE resource_calendar_attendance (
    id integer NOT NULL,
    dayofweek character varying NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    date_from date,
    write_uid integer,
    hour_from double precision NOT NULL,
    hour_to double precision NOT NULL,
    write_date timestamp without time zone,
    calendar_id integer NOT NULL
);


ALTER TABLE public.resource_calendar_attendance OWNER TO odoo;

--
-- Name: TABLE resource_calendar_attendance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE resource_calendar_attendance IS 'Work Detail';


--
-- Name: COLUMN resource_calendar_attendance.dayofweek; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.dayofweek IS 'Day of Week';


--
-- Name: COLUMN resource_calendar_attendance.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.create_uid IS 'Created by';


--
-- Name: COLUMN resource_calendar_attendance.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.create_date IS 'Created on';


--
-- Name: COLUMN resource_calendar_attendance.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.name IS 'Name';


--
-- Name: COLUMN resource_calendar_attendance.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.date_from IS 'Starting Date';


--
-- Name: COLUMN resource_calendar_attendance.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.write_uid IS 'Last Updated by';


--
-- Name: COLUMN resource_calendar_attendance.hour_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.hour_from IS 'Work from';


--
-- Name: COLUMN resource_calendar_attendance.hour_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.hour_to IS 'Work to';


--
-- Name: COLUMN resource_calendar_attendance.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.write_date IS 'Last Updated on';


--
-- Name: COLUMN resource_calendar_attendance.calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_attendance.calendar_id IS 'Resource''s Calendar';


--
-- Name: resource_calendar_attendance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE resource_calendar_attendance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resource_calendar_attendance_id_seq OWNER TO odoo;

--
-- Name: resource_calendar_attendance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE resource_calendar_attendance_id_seq OWNED BY resource_calendar_attendance.id;


--
-- Name: resource_calendar_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE resource_calendar_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resource_calendar_id_seq OWNER TO odoo;

--
-- Name: resource_calendar_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE resource_calendar_id_seq OWNED BY resource_calendar.id;


--
-- Name: resource_calendar_leaves; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE resource_calendar_leaves (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    resource_id integer,
    date_from timestamp without time zone NOT NULL,
    company_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    date_to timestamp without time zone NOT NULL,
    calendar_id integer
);


ALTER TABLE public.resource_calendar_leaves OWNER TO odoo;

--
-- Name: TABLE resource_calendar_leaves; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE resource_calendar_leaves IS 'Leave Detail';


--
-- Name: COLUMN resource_calendar_leaves.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.create_uid IS 'Created by';


--
-- Name: COLUMN resource_calendar_leaves.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.create_date IS 'Created on';


--
-- Name: COLUMN resource_calendar_leaves.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.name IS 'Name';


--
-- Name: COLUMN resource_calendar_leaves.resource_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.resource_id IS 'Resource';


--
-- Name: COLUMN resource_calendar_leaves.date_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.date_from IS 'Start Date';


--
-- Name: COLUMN resource_calendar_leaves.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.company_id IS 'Company';


--
-- Name: COLUMN resource_calendar_leaves.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.write_uid IS 'Last Updated by';


--
-- Name: COLUMN resource_calendar_leaves.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.write_date IS 'Last Updated on';


--
-- Name: COLUMN resource_calendar_leaves.date_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.date_to IS 'End Date';


--
-- Name: COLUMN resource_calendar_leaves.calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_calendar_leaves.calendar_id IS 'Working Time';


--
-- Name: resource_calendar_leaves_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE resource_calendar_leaves_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resource_calendar_leaves_id_seq OWNER TO odoo;

--
-- Name: resource_calendar_leaves_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE resource_calendar_leaves_id_seq OWNED BY resource_calendar_leaves.id;


--
-- Name: resource_resource; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE resource_resource (
    id integer NOT NULL,
    create_uid integer,
    time_efficiency double precision NOT NULL,
    code character varying(16),
    user_id integer,
    name character varying NOT NULL,
    company_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    calendar_id integer,
    active boolean,
    create_date timestamp without time zone,
    resource_type character varying NOT NULL
);


ALTER TABLE public.resource_resource OWNER TO odoo;

--
-- Name: TABLE resource_resource; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE resource_resource IS 'Resource Detail';


--
-- Name: COLUMN resource_resource.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.create_uid IS 'Created by';


--
-- Name: COLUMN resource_resource.time_efficiency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.time_efficiency IS 'Efficiency Factor';


--
-- Name: COLUMN resource_resource.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.code IS 'Code';


--
-- Name: COLUMN resource_resource.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.user_id IS 'User';


--
-- Name: COLUMN resource_resource.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.name IS 'Name';


--
-- Name: COLUMN resource_resource.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.company_id IS 'Company';


--
-- Name: COLUMN resource_resource.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.write_uid IS 'Last Updated by';


--
-- Name: COLUMN resource_resource.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.write_date IS 'Last Updated on';


--
-- Name: COLUMN resource_resource.calendar_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.calendar_id IS 'Working Time';


--
-- Name: COLUMN resource_resource.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.active IS 'Active';


--
-- Name: COLUMN resource_resource.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.create_date IS 'Created on';


--
-- Name: COLUMN resource_resource.resource_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN resource_resource.resource_type IS 'Resource Type';


--
-- Name: resource_resource_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE resource_resource_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resource_resource_id_seq OWNER TO odoo;

--
-- Name: resource_resource_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE resource_resource_id_seq OWNED BY resource_resource.id;


--
-- Name: rule_group_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE rule_group_rel (
    rule_group_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.rule_group_rel OWNER TO odoo;

--
-- Name: TABLE rule_group_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE rule_group_rel IS 'RELATION BETWEEN ir_rule AND res_groups';


--
-- Name: sale_advance_payment_inv; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_advance_payment_inv (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer,
    advance_payment_method character varying NOT NULL,
    write_uid integer,
    amount numeric,
    write_date timestamp without time zone,
    qtty numeric NOT NULL
);


ALTER TABLE public.sale_advance_payment_inv OWNER TO odoo;

--
-- Name: TABLE sale_advance_payment_inv; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_advance_payment_inv IS 'Sales Advance Payment Invoice';


--
-- Name: COLUMN sale_advance_payment_inv.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.create_uid IS 'Created by';


--
-- Name: COLUMN sale_advance_payment_inv.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.create_date IS 'Created on';


--
-- Name: COLUMN sale_advance_payment_inv.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.product_id IS 'Advance Product';


--
-- Name: COLUMN sale_advance_payment_inv.advance_payment_method; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.advance_payment_method IS 'What do you want to invoice?';


--
-- Name: COLUMN sale_advance_payment_inv.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_advance_payment_inv.amount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.amount IS 'Advance Amount';


--
-- Name: COLUMN sale_advance_payment_inv.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_advance_payment_inv.qtty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_advance_payment_inv.qtty IS 'Quantity';


--
-- Name: sale_advance_payment_inv_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_advance_payment_inv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_advance_payment_inv_id_seq OWNER TO odoo;

--
-- Name: sale_advance_payment_inv_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_advance_payment_inv_id_seq OWNED BY sale_advance_payment_inv.id;


--
-- Name: sale_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_config_settings (
    id integer NOT NULL,
    create_uid integer,
    module_web_linkedin boolean,
    create_date timestamp without time zone,
    write_uid integer,
    module_sale boolean,
    write_date timestamp without time zone,
    module_crm boolean,
    module_mass_mailing boolean,
    group_multi_salesteams boolean,
    module_crm_helpdesk boolean,
    group_scheduled_calls boolean,
    alias_domain character varying,
    alias_prefix character varying,
    group_fund_raising boolean,
    module_crm_claim boolean,
    module_sale_stock boolean,
    module_account_analytic_analysis boolean,
    group_sale_pricelist boolean,
    module_sale_journal boolean,
    module_website_quote boolean,
    group_discount_per_so_line boolean,
    timesheet boolean,
    group_invoice_so_lines boolean,
    module_sale_margin boolean,
    group_uom boolean,
    module_project boolean,
    group_sale_delivery_address boolean,
    module_analytic_user_function boolean,
    module_warning boolean,
    time_unit integer,
    module_sale_service boolean,
    module_delivery boolean,
    group_invoice_deli_orders boolean,
    task_work boolean,
    group_route_so_lines boolean,
    default_picking_policy boolean,
    default_order_policy character varying,
    module_project_timesheet boolean,
    group_mrp_properties boolean,
    group_template_required boolean
);


ALTER TABLE public.sale_config_settings OWNER TO odoo;

--
-- Name: TABLE sale_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_config_settings IS 'sale.config.settings';


--
-- Name: COLUMN sale_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN sale_config_settings.module_web_linkedin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_web_linkedin IS 'Get contacts automatically from linkedIn';


--
-- Name: COLUMN sale_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN sale_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_config_settings.module_sale; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_sale IS 'SALE';


--
-- Name: COLUMN sale_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_config_settings.module_crm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_crm IS 'CRM';


--
-- Name: COLUMN sale_config_settings.module_mass_mailing; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_mass_mailing IS 'Manage mass mailing campaigns';


--
-- Name: COLUMN sale_config_settings.group_multi_salesteams; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_multi_salesteams IS 'Organize Sales activities into multiple Sales Teams';


--
-- Name: COLUMN sale_config_settings.module_crm_helpdesk; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_crm_helpdesk IS 'Manage Helpdesk and Support';


--
-- Name: COLUMN sale_config_settings.group_scheduled_calls; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_scheduled_calls IS 'Schedule calls to manage call center';


--
-- Name: COLUMN sale_config_settings.alias_domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.alias_domain IS 'Alias Domain';


--
-- Name: COLUMN sale_config_settings.alias_prefix; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.alias_prefix IS 'Default Alias Name for Leads';


--
-- Name: COLUMN sale_config_settings.group_fund_raising; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_fund_raising IS 'Manage Fund Raising';


--
-- Name: COLUMN sale_config_settings.module_crm_claim; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_crm_claim IS 'Manage Customer Claims';


--
-- Name: COLUMN sale_config_settings.module_sale_stock; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_sale_stock IS 'Trigger delivery orders automatically from sales orders';


--
-- Name: COLUMN sale_config_settings.module_account_analytic_analysis; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_account_analytic_analysis IS 'Use contracts management';


--
-- Name: COLUMN sale_config_settings.group_sale_pricelist; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_sale_pricelist IS 'Use pricelists to adapt your price per customers';


--
-- Name: COLUMN sale_config_settings.module_sale_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_sale_journal IS 'Allow batch invoicing of delivery orders through journals';


--
-- Name: COLUMN sale_config_settings.module_website_quote; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_website_quote IS 'Allow online quotations and templates';


--
-- Name: COLUMN sale_config_settings.group_discount_per_so_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_discount_per_so_line IS 'Allow setting a discount on the sales order lines';


--
-- Name: COLUMN sale_config_settings.timesheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.timesheet IS 'Prepare invoices based on timesheets';


--
-- Name: COLUMN sale_config_settings.group_invoice_so_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_invoice_so_lines IS 'Generate invoices based on the sales order lines';


--
-- Name: COLUMN sale_config_settings.module_sale_margin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_sale_margin IS 'Display margins on sales orders';


--
-- Name: COLUMN sale_config_settings.group_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_uom IS 'Allow using different units of measure';


--
-- Name: COLUMN sale_config_settings.module_project; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_project IS 'Project';


--
-- Name: COLUMN sale_config_settings.group_sale_delivery_address; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_sale_delivery_address IS 'Allow a different address for delivery and invoicing ';


--
-- Name: COLUMN sale_config_settings.module_analytic_user_function; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_analytic_user_function IS 'One employee can have different roles per contract';


--
-- Name: COLUMN sale_config_settings.module_warning; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_warning IS 'Allow configuring alerts by customer or products';


--
-- Name: COLUMN sale_config_settings.time_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.time_unit IS 'The default working time unit for services is';


--
-- Name: COLUMN sale_config_settings.module_sale_service; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_sale_service IS 'Sale Service';


--
-- Name: COLUMN sale_config_settings.module_delivery; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_delivery IS 'Allow adding shipping costs';


--
-- Name: COLUMN sale_config_settings.group_invoice_deli_orders; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_invoice_deli_orders IS 'Generate invoices after and based on delivery orders';


--
-- Name: COLUMN sale_config_settings.task_work; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.task_work IS 'Prepare invoices based on task''s activities';


--
-- Name: COLUMN sale_config_settings.group_route_so_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_route_so_lines IS 'Choose MTO, drop shipping,... on sales order lines';


--
-- Name: COLUMN sale_config_settings.default_picking_policy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.default_picking_policy IS 'Deliver all at once when all products are available.';


--
-- Name: COLUMN sale_config_settings.default_order_policy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.default_order_policy IS 'The default invoicing method is';


--
-- Name: COLUMN sale_config_settings.module_project_timesheet; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.module_project_timesheet IS 'Project Timesheet';


--
-- Name: COLUMN sale_config_settings.group_mrp_properties; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_mrp_properties IS 'Product properties on order lines';


--
-- Name: COLUMN sale_config_settings.group_template_required; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_config_settings.group_template_required IS 'Mandatory use of templates.';


--
-- Name: sale_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_config_settings_id_seq OWNER TO odoo;

--
-- Name: sale_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_config_settings_id_seq OWNED BY sale_config_settings.id;


--
-- Name: sale_exception; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_exception (
    id integer NOT NULL,
    create_uid integer,
    code text,
    create_date timestamp without time zone,
    description text,
    sequence integer,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean,
    model character varying NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE public.sale_exception OWNER TO odoo;

--
-- Name: TABLE sale_exception; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_exception IS 'Sale Exceptions';


--
-- Name: COLUMN sale_exception.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.create_uid IS 'Created by';


--
-- Name: COLUMN sale_exception.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.code IS 'Python Code';


--
-- Name: COLUMN sale_exception.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.create_date IS 'Created on';


--
-- Name: COLUMN sale_exception.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.description IS 'Description';


--
-- Name: COLUMN sale_exception.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.sequence IS 'Sequence';


--
-- Name: COLUMN sale_exception.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_exception.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_exception.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.active IS 'Active';


--
-- Name: COLUMN sale_exception.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.model IS 'Apply on';


--
-- Name: COLUMN sale_exception.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception.name IS 'Exception Name';


--
-- Name: sale_exception_confirm; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_exception_confirm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    sale_id integer,
    write_uid integer,
    ignore boolean,
    write_date timestamp without time zone
);


ALTER TABLE public.sale_exception_confirm OWNER TO odoo;

--
-- Name: TABLE sale_exception_confirm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_exception_confirm IS 'sale.exception.confirm';


--
-- Name: COLUMN sale_exception_confirm.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.create_uid IS 'Created by';


--
-- Name: COLUMN sale_exception_confirm.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.create_date IS 'Created on';


--
-- Name: COLUMN sale_exception_confirm.sale_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.sale_id IS 'Sale';


--
-- Name: COLUMN sale_exception_confirm.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_exception_confirm.ignore; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.ignore IS 'Ignore Exceptions';


--
-- Name: COLUMN sale_exception_confirm.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_exception_confirm.write_date IS 'Last Updated on';


--
-- Name: sale_exception_confirm_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_exception_confirm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_exception_confirm_id_seq OWNER TO odoo;

--
-- Name: sale_exception_confirm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_exception_confirm_id_seq OWNED BY sale_exception_confirm.id;


--
-- Name: sale_exception_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_exception_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_exception_id_seq OWNER TO odoo;

--
-- Name: sale_exception_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_exception_id_seq OWNED BY sale_exception.id;


--
-- Name: sale_exception_sale_exception_confirm_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_exception_sale_exception_confirm_rel (
    sale_exception_confirm_id integer NOT NULL,
    sale_exception_id integer NOT NULL
);


ALTER TABLE public.sale_exception_sale_exception_confirm_rel OWNER TO odoo;

--
-- Name: TABLE sale_exception_sale_exception_confirm_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_exception_sale_exception_confirm_rel IS 'RELATION BETWEEN sale_exception_confirm AND sale_exception';


--
-- Name: sale_make_invoice; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_make_invoice (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    invoice_date date,
    write_uid integer,
    grouped boolean,
    write_date timestamp without time zone
);


ALTER TABLE public.sale_make_invoice OWNER TO odoo;

--
-- Name: TABLE sale_make_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_make_invoice IS 'Sales Make Invoice';


--
-- Name: COLUMN sale_make_invoice.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.create_uid IS 'Created by';


--
-- Name: COLUMN sale_make_invoice.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.create_date IS 'Created on';


--
-- Name: COLUMN sale_make_invoice.invoice_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.invoice_date IS 'Invoice Date';


--
-- Name: COLUMN sale_make_invoice.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_make_invoice.grouped; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.grouped IS 'Group the invoices';


--
-- Name: COLUMN sale_make_invoice.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_make_invoice.write_date IS 'Last Updated on';


--
-- Name: sale_make_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_make_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_make_invoice_id_seq OWNER TO odoo;

--
-- Name: sale_make_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_make_invoice_id_seq OWNED BY sale_make_invoice.id;


--
-- Name: sale_member_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_member_rel (
    section_id integer NOT NULL,
    member_id integer NOT NULL
);


ALTER TABLE public.sale_member_rel OWNER TO odoo;

--
-- Name: TABLE sale_member_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_member_rel IS 'RELATION BETWEEN crm_case_section AND res_users';


--
-- Name: sale_order; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order (
    id integer NOT NULL,
    origin character varying,
    create_date timestamp without time zone,
    write_uid integer,
    client_order_ref character varying,
    date_order timestamp without time zone NOT NULL,
    partner_id integer NOT NULL,
    amount_tax numeric,
    procurement_group_id integer,
    fiscal_position integer,
    amount_untaxed numeric,
    payment_term integer,
    message_last_post timestamp without time zone,
    company_id integer,
    note text,
    state character varying,
    pricelist_id integer NOT NULL,
    create_uid integer,
    section_id integer,
    write_date timestamp without time zone,
    partner_invoice_id integer NOT NULL,
    user_id integer,
    date_confirm date,
    amount_total numeric,
    project_id integer,
    name character varying NOT NULL,
    partner_shipping_id integer NOT NULL,
    order_policy character varying NOT NULL,
    campaign_id integer,
    medium_id integer,
    source_id integer,
    picking_policy character varying NOT NULL,
    incoterm integer,
    warehouse_id integer NOT NULL,
    shipped boolean,
    carrier_id integer,
    x_order_type character varying,
    x_coordinator_approve boolean,
    x_road_permit character varying,
    ignore_exceptions boolean,
    main_exception_id integer,
    margin numeric,
    x_rental_start_date timestamp without time zone,
    x_rental_end_date timestamp without time zone,
    x_minimum_contract_period character varying,
    type_id integer,
    partner_order_id integer,
    x_recur_inv character varying,
    x_sales_manager_approved boolean,
    x_time_check boolean,
    default_end_date date,
    default_start_date date
);


ALTER TABLE public.sale_order OWNER TO odoo;

--
-- Name: TABLE sale_order; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order IS 'Sales Order';


--
-- Name: COLUMN sale_order.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.origin IS 'Source Document';


--
-- Name: COLUMN sale_order.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.create_date IS 'Creation Date';


--
-- Name: COLUMN sale_order.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_order.client_order_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.client_order_ref IS 'Reference/Description';


--
-- Name: COLUMN sale_order.date_order; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.date_order IS 'Date';


--
-- Name: COLUMN sale_order.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.partner_id IS 'Customer';


--
-- Name: COLUMN sale_order.amount_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.amount_tax IS 'Taxes';


--
-- Name: COLUMN sale_order.procurement_group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.procurement_group_id IS 'Procurement group';


--
-- Name: COLUMN sale_order.fiscal_position; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.fiscal_position IS 'Fiscal Position';


--
-- Name: COLUMN sale_order.amount_untaxed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.amount_untaxed IS 'Untaxed Amount';


--
-- Name: COLUMN sale_order.payment_term; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.payment_term IS 'Payment Term';


--
-- Name: COLUMN sale_order.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN sale_order.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.company_id IS 'Company';


--
-- Name: COLUMN sale_order.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.note IS 'Terms and conditions';


--
-- Name: COLUMN sale_order.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.state IS 'Status';


--
-- Name: COLUMN sale_order.pricelist_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.pricelist_id IS 'Pricelist';


--
-- Name: COLUMN sale_order.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.create_uid IS 'Created by';


--
-- Name: COLUMN sale_order.section_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.section_id IS 'Sales Team';


--
-- Name: COLUMN sale_order.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_order.partner_invoice_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.partner_invoice_id IS 'Invoice Address';


--
-- Name: COLUMN sale_order.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.user_id IS 'Salesperson';


--
-- Name: COLUMN sale_order.date_confirm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.date_confirm IS 'Confirmation Date';


--
-- Name: COLUMN sale_order.amount_total; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.amount_total IS 'Total';


--
-- Name: COLUMN sale_order.project_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.project_id IS 'Contract / Analytic';


--
-- Name: COLUMN sale_order.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.name IS 'Order Reference';


--
-- Name: COLUMN sale_order.partner_shipping_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.partner_shipping_id IS 'Delivery Address';


--
-- Name: COLUMN sale_order.order_policy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.order_policy IS 'Create Invoice';


--
-- Name: COLUMN sale_order.campaign_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.campaign_id IS 'Campaign';


--
-- Name: COLUMN sale_order.medium_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.medium_id IS 'Channel';


--
-- Name: COLUMN sale_order.source_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.source_id IS 'Source';


--
-- Name: COLUMN sale_order.picking_policy; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.picking_policy IS 'Shipping Policy';


--
-- Name: COLUMN sale_order.incoterm; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.incoterm IS 'Incoterm';


--
-- Name: COLUMN sale_order.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN sale_order.shipped; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.shipped IS 'Delivered';


--
-- Name: COLUMN sale_order.carrier_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.carrier_id IS 'Delivery Method';


--
-- Name: COLUMN sale_order.x_order_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_order_type IS 'Sale Type';


--
-- Name: COLUMN sale_order.x_coordinator_approve; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_coordinator_approve IS 'Sales Approved';


--
-- Name: COLUMN sale_order.x_road_permit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_road_permit IS 'Road Permit Availability';


--
-- Name: COLUMN sale_order.ignore_exceptions; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.ignore_exceptions IS 'Ignore Exceptions';


--
-- Name: COLUMN sale_order.main_exception_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.main_exception_id IS 'Main Exception';


--
-- Name: COLUMN sale_order.margin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.margin IS 'Margin';


--
-- Name: COLUMN sale_order.x_rental_start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_rental_start_date IS 'Rental Start Date';


--
-- Name: COLUMN sale_order.x_rental_end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_rental_end_date IS 'Rental End Date';


--
-- Name: COLUMN sale_order.x_minimum_contract_period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_minimum_contract_period IS 'Minimum Contract Period';


--
-- Name: COLUMN sale_order.type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.type_id IS 'Type';


--
-- Name: COLUMN sale_order.partner_order_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.partner_order_id IS 'Ordering Contact';


--
-- Name: COLUMN sale_order.x_recur_inv; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_recur_inv IS 'Recurring Invoice';


--
-- Name: COLUMN sale_order.x_sales_manager_approved; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_sales_manager_approved IS 'Sales Manager approved';


--
-- Name: COLUMN sale_order.x_time_check; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.x_time_check IS 'Time Updated for Sales Order';


--
-- Name: COLUMN sale_order.default_end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.default_end_date IS 'Default End Date';


--
-- Name: COLUMN sale_order.default_start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order.default_start_date IS 'Default Start Date';


--
-- Name: sale_order_category_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_category_rel (
    order_id integer NOT NULL,
    category_id integer NOT NULL
);


ALTER TABLE public.sale_order_category_rel OWNER TO odoo;

--
-- Name: TABLE sale_order_category_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_category_rel IS 'RELATION BETWEEN sale_order AND crm_case_categ';


--
-- Name: sale_order_exception_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_exception_rel (
    exception_id integer NOT NULL,
    sale_order_id integer NOT NULL
);


ALTER TABLE public.sale_order_exception_rel OWNER TO odoo;

--
-- Name: TABLE sale_order_exception_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_exception_rel IS 'RELATION BETWEEN sale_exception AND sale_order';


--
-- Name: sale_order_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_order_id_seq OWNER TO odoo;

--
-- Name: sale_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_order_id_seq OWNED BY sale_order.id;


--
-- Name: sale_order_invoice_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_invoice_rel (
    order_id integer NOT NULL,
    invoice_id integer NOT NULL
);


ALTER TABLE public.sale_order_invoice_rel OWNER TO odoo;

--
-- Name: TABLE sale_order_invoice_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_invoice_rel IS 'RELATION BETWEEN sale_order AND account_invoice';


--
-- Name: sale_order_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_line (
    id integer NOT NULL,
    product_uos_qty numeric,
    create_date timestamp without time zone,
    product_uom integer NOT NULL,
    sequence integer,
    price_unit numeric NOT NULL,
    product_uom_qty numeric NOT NULL,
    write_uid integer,
    product_uos integer,
    invoiced boolean,
    create_uid integer,
    company_id integer,
    name text NOT NULL,
    delay double precision NOT NULL,
    state character varying NOT NULL,
    order_partner_id integer,
    order_id integer NOT NULL,
    discount numeric,
    write_date timestamp without time zone,
    product_id integer,
    salesman_id integer,
    th_weight double precision,
    address_allotment_id integer,
    product_packaging integer,
    route_id integer,
    is_delivery boolean,
    purchase_price numeric,
    margin numeric,
    end_date date,
    must_have_dates boolean,
    start_date date,
    number_of_days integer
);


ALTER TABLE public.sale_order_line OWNER TO odoo;

--
-- Name: TABLE sale_order_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_line IS 'Sales Order Line';


--
-- Name: COLUMN sale_order_line.product_uos_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_uos_qty IS 'Quantity (UoS)';


--
-- Name: COLUMN sale_order_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.create_date IS 'Created on';


--
-- Name: COLUMN sale_order_line.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_uom IS 'Unit of Measure ';


--
-- Name: COLUMN sale_order_line.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.sequence IS 'Sequence';


--
-- Name: COLUMN sale_order_line.price_unit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.price_unit IS 'Unit Price';


--
-- Name: COLUMN sale_order_line.product_uom_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_uom_qty IS 'Quantity';


--
-- Name: COLUMN sale_order_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_order_line.product_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_uos IS 'Product UoS';


--
-- Name: COLUMN sale_order_line.invoiced; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.invoiced IS 'Invoiced';


--
-- Name: COLUMN sale_order_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.create_uid IS 'Created by';


--
-- Name: COLUMN sale_order_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.company_id IS 'Company';


--
-- Name: COLUMN sale_order_line.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.name IS 'Description';


--
-- Name: COLUMN sale_order_line.delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.delay IS 'Delivery Lead Time';


--
-- Name: COLUMN sale_order_line.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.state IS 'Status';


--
-- Name: COLUMN sale_order_line.order_partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.order_partner_id IS 'Customer';


--
-- Name: COLUMN sale_order_line.order_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.order_id IS 'Order Reference';


--
-- Name: COLUMN sale_order_line.discount; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.discount IS 'Discount (%)';


--
-- Name: COLUMN sale_order_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_order_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_id IS 'Product';


--
-- Name: COLUMN sale_order_line.salesman_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.salesman_id IS 'Salesperson';


--
-- Name: COLUMN sale_order_line.th_weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.th_weight IS 'Weight';


--
-- Name: COLUMN sale_order_line.address_allotment_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.address_allotment_id IS 'Allotment Partner';


--
-- Name: COLUMN sale_order_line.product_packaging; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.product_packaging IS 'Packaging';


--
-- Name: COLUMN sale_order_line.route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.route_id IS 'Route';


--
-- Name: COLUMN sale_order_line.is_delivery; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.is_delivery IS 'Is a Delivery';


--
-- Name: COLUMN sale_order_line.purchase_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.purchase_price IS 'Cost Price';


--
-- Name: COLUMN sale_order_line.margin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.margin IS 'Margin';


--
-- Name: COLUMN sale_order_line.end_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.end_date IS 'End Date';


--
-- Name: COLUMN sale_order_line.must_have_dates; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.must_have_dates IS 'Must Have Start and End Dates';


--
-- Name: COLUMN sale_order_line.start_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.start_date IS 'Start Date';


--
-- Name: COLUMN sale_order_line.number_of_days; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line.number_of_days IS 'Number of Days';


--
-- Name: sale_order_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_order_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_order_line_id_seq OWNER TO odoo;

--
-- Name: sale_order_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_order_line_id_seq OWNED BY sale_order_line.id;


--
-- Name: sale_order_line_invoice_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_line_invoice_rel (
    order_line_id integer NOT NULL,
    invoice_id integer NOT NULL
);


ALTER TABLE public.sale_order_line_invoice_rel OWNER TO odoo;

--
-- Name: TABLE sale_order_line_invoice_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_line_invoice_rel IS 'RELATION BETWEEN sale_order_line AND account_invoice_line';


--
-- Name: sale_order_line_make_invoice; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_line_make_invoice (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.sale_order_line_make_invoice OWNER TO odoo;

--
-- Name: TABLE sale_order_line_make_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_line_make_invoice IS 'Sale OrderLine Make_invoice';


--
-- Name: COLUMN sale_order_line_make_invoice.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line_make_invoice.create_uid IS 'Created by';


--
-- Name: COLUMN sale_order_line_make_invoice.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line_make_invoice.create_date IS 'Created on';


--
-- Name: COLUMN sale_order_line_make_invoice.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line_make_invoice.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_order_line_make_invoice.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_line_make_invoice.write_uid IS 'Last Updated by';


--
-- Name: sale_order_line_make_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_order_line_make_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_order_line_make_invoice_id_seq OWNER TO odoo;

--
-- Name: sale_order_line_make_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_order_line_make_invoice_id_seq OWNED BY sale_order_line_make_invoice.id;


--
-- Name: sale_order_line_property_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_line_property_rel (
    order_id integer NOT NULL,
    property_id integer NOT NULL
);


ALTER TABLE public.sale_order_line_property_rel OWNER TO odoo;

--
-- Name: TABLE sale_order_line_property_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_line_property_rel IS 'RELATION BETWEEN sale_order_line AND mrp_property';


--
-- Name: sale_order_tax; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_tax (
    order_line_id integer NOT NULL,
    tax_id integer NOT NULL
);


ALTER TABLE public.sale_order_tax OWNER TO odoo;

--
-- Name: TABLE sale_order_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_tax IS 'RELATION BETWEEN sale_order_line AND account_tax';


--
-- Name: sale_order_type; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE sale_order_type (
    id integer NOT NULL,
    create_uid integer,
    refund_journal_id integer,
    create_date timestamp without time zone,
    description text,
    journal_id integer,
    warehouse_id integer NOT NULL,
    sequence_id integer,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying NOT NULL
);


ALTER TABLE public.sale_order_type OWNER TO odoo;

--
-- Name: TABLE sale_order_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE sale_order_type IS 'Type of sale order';


--
-- Name: COLUMN sale_order_type.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.create_uid IS 'Created by';


--
-- Name: COLUMN sale_order_type.refund_journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.refund_journal_id IS 'Refund Billing Journal';


--
-- Name: COLUMN sale_order_type.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.create_date IS 'Created on';


--
-- Name: COLUMN sale_order_type.description; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.description IS 'Description';


--
-- Name: COLUMN sale_order_type.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.journal_id IS 'Billing Journal';


--
-- Name: COLUMN sale_order_type.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN sale_order_type.sequence_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.sequence_id IS 'Entry Sequence';


--
-- Name: COLUMN sale_order_type.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.write_date IS 'Last Updated on';


--
-- Name: COLUMN sale_order_type.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.write_uid IS 'Last Updated by';


--
-- Name: COLUMN sale_order_type.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN sale_order_type.name IS 'Name';


--
-- Name: sale_order_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE sale_order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_order_type_id_seq OWNER TO odoo;

--
-- Name: sale_order_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE sale_order_type_id_seq OWNED BY sale_order_type.id;


--
-- Name: sale_receipt_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW sale_receipt_report AS
 SELECT min(avl.id) AS id,
    av.date,
    av.partner_id,
    aj.currency AS currency_id,
    av.journal_id,
    rp.user_id,
    av.company_id,
    count(avl.*) AS nbr,
    av.type,
    av.state,
    av.pay_now,
    av.date_due,
    av.account_id,
    (sum((av.amount - av.tax_amount)) / (( SELECT count(l.id) AS count
           FROM (account_voucher_line l
             LEFT JOIN account_voucher a ON ((a.id = l.voucher_id)))
          WHERE (a.id = av.id)))::numeric) AS price_total,
    (sum(av.amount) / (( SELECT count(l.id) AS count
           FROM (account_voucher_line l
             LEFT JOIN account_voucher a ON ((a.id = l.voucher_id)))
          WHERE (a.id = av.id)))::numeric) AS price_total_tax,
    sum(( SELECT (date_part('epoch'::text, avg((date_trunc('day'::text, (aml.date_created)::timestamp with time zone) - (date_trunc('day'::text, l.create_date))::timestamp with time zone))) / ((((24 * 60) * 60))::numeric(16,2))::double precision)
           FROM ((account_move_line aml
             LEFT JOIN account_voucher a ON ((a.move_id = aml.move_id)))
             LEFT JOIN account_voucher_line l ON ((a.id = l.voucher_id)))
          WHERE (a.id = av.id))) AS delay_to_pay,
    sum(( SELECT (date_part('epoch'::text, avg((date_trunc('day'::text, (a.date_due)::timestamp with time zone) - date_trunc('day'::text, (a.date)::timestamp with time zone)))) / ((((24 * 60) * 60))::numeric(16,2))::double precision)
           FROM ((account_move_line aml
             LEFT JOIN account_voucher a ON ((a.move_id = aml.move_id)))
             LEFT JOIN account_voucher_line l ON ((a.id = l.voucher_id)))
          WHERE (a.id = av.id))) AS due_delay
   FROM (((account_voucher_line avl
     LEFT JOIN account_voucher av ON ((av.id = avl.voucher_id)))
     LEFT JOIN res_partner rp ON ((rp.id = av.partner_id)))
     LEFT JOIN account_journal aj ON ((aj.id = av.journal_id)))
  WHERE (((av.type)::text = 'sale'::text) AND ((aj.type)::text = ANY (ARRAY[('sale'::character varying)::text, ('sale_refund'::character varying)::text])))
  GROUP BY av.date, av.id, av.partner_id, aj.currency, av.journal_id, rp.user_id, av.company_id, av.type, av.state, av.date_due, av.account_id, av.tax_amount, av.amount, av.pay_now;


ALTER TABLE public.sale_receipt_report OWNER TO odoo;

--
-- Name: sale_report; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW sale_report AS
 SELECT min(l.id) AS id,
    l.product_id,
    t.uom_id AS product_uom,
    sum(((l.product_uom_qty / u.factor) * u2.factor)) AS product_uom_qty,
    sum((((l.product_uom_qty * l.price_unit) * (100.0 - l.discount)) / 100.0)) AS price_total,
    count(*) AS nbr,
    s.date_order AS date,
    s.date_confirm,
    s.partner_id,
    s.user_id,
    s.company_id,
    (date_part('epoch'::text, avg((date_trunc('day'::text, (s.date_confirm)::timestamp with time zone) - (date_trunc('day'::text, s.create_date))::timestamp with time zone))) / ((((24 * 60) * 60))::numeric(16,2))::double precision) AS delay,
    l.state,
    t.categ_id,
    s.pricelist_id,
    s.project_id AS analytic_account_id,
    s.section_id,
    s.warehouse_id,
    s.shipped,
    (s.shipped)::integer AS shipped_qty_1
   FROM (((((sale_order_line l
     JOIN sale_order s ON ((l.order_id = s.id)))
     LEFT JOIN product_product p ON ((l.product_id = p.id)))
     LEFT JOIN product_template t ON ((p.product_tmpl_id = t.id)))
     LEFT JOIN product_uom u ON ((u.id = l.product_uom)))
     LEFT JOIN product_uom u2 ON ((u2.id = t.uom_id)))
  GROUP BY l.product_id, l.order_id, t.uom_id, t.categ_id, s.date_order, s.date_confirm, s.partner_id, s.user_id, s.company_id, l.state, s.pricelist_id, s.project_id, s.section_id, s.warehouse_id, s.shipped;


ALTER TABLE public.sale_report OWNER TO odoo;

--
-- Name: section_claim_stage_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE section_claim_stage_rel (
    stage_id integer NOT NULL,
    section_id integer NOT NULL
);


ALTER TABLE public.section_claim_stage_rel OWNER TO odoo;

--
-- Name: TABLE section_claim_stage_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE section_claim_stage_rel IS 'RELATION BETWEEN crm_claim_stage AND crm_case_section';


--
-- Name: section_stage_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE section_stage_rel (
    stage_id integer NOT NULL,
    section_id integer NOT NULL
);


ALTER TABLE public.section_stage_rel OWNER TO odoo;

--
-- Name: TABLE section_stage_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE section_stage_rel IS 'RELATION BETWEEN crm_case_stage AND crm_case_section';


--
-- Name: share_wizard; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE share_wizard (
    id integer NOT NULL,
    domain character varying,
    create_date timestamp without time zone,
    user_type character varying NOT NULL,
    write_uid integer,
    email_2 character varying(64),
    email_3 character varying(64),
    email_1 character varying(64),
    record_name character varying,
    message text,
    create_uid integer,
    embed_option_title boolean,
    new_users text,
    access_mode character varying NOT NULL,
    action_id integer NOT NULL,
    invite boolean,
    view_type character varying NOT NULL,
    embed_option_search boolean,
    write_date timestamp without time zone,
    name character varying NOT NULL
);


ALTER TABLE public.share_wizard OWNER TO odoo;

--
-- Name: TABLE share_wizard; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE share_wizard IS 'Share Wizard';


--
-- Name: COLUMN share_wizard.domain; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.domain IS 'Domain';


--
-- Name: COLUMN share_wizard.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.create_date IS 'Created on';


--
-- Name: COLUMN share_wizard.user_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.user_type IS 'Sharing method';


--
-- Name: COLUMN share_wizard.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.write_uid IS 'Last Updated by';


--
-- Name: COLUMN share_wizard.email_2; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.email_2 IS 'New user email';


--
-- Name: COLUMN share_wizard.email_3; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.email_3 IS 'New user email';


--
-- Name: COLUMN share_wizard.email_1; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.email_1 IS 'New user email';


--
-- Name: COLUMN share_wizard.record_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.record_name IS 'Record name';


--
-- Name: COLUMN share_wizard.message; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.message IS 'Personal Message';


--
-- Name: COLUMN share_wizard.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.create_uid IS 'Created by';


--
-- Name: COLUMN share_wizard.embed_option_title; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.embed_option_title IS 'Display title';


--
-- Name: COLUMN share_wizard.new_users; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.new_users IS 'Emails';


--
-- Name: COLUMN share_wizard.access_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.access_mode IS 'Access Mode';


--
-- Name: COLUMN share_wizard.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.action_id IS 'Action to share';


--
-- Name: COLUMN share_wizard.invite; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.invite IS 'Invite users to OpenSocial record';


--
-- Name: COLUMN share_wizard.view_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.view_type IS 'Current View Type';


--
-- Name: COLUMN share_wizard.embed_option_search; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.embed_option_search IS 'Display search view';


--
-- Name: COLUMN share_wizard.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.write_date IS 'Last Updated on';


--
-- Name: COLUMN share_wizard.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard.name IS 'Share Title';


--
-- Name: share_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE share_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.share_wizard_id_seq OWNER TO odoo;

--
-- Name: share_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE share_wizard_id_seq OWNED BY share_wizard.id;


--
-- Name: share_wizard_result_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE share_wizard_result_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    newly_created boolean,
    write_uid integer,
    write_date timestamp without time zone,
    user_id integer NOT NULL,
    password character varying(64),
    share_wizard_id integer NOT NULL
);


ALTER TABLE public.share_wizard_result_line OWNER TO odoo;

--
-- Name: TABLE share_wizard_result_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE share_wizard_result_line IS 'share.wizard.result.line';


--
-- Name: COLUMN share_wizard_result_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.create_uid IS 'Created by';


--
-- Name: COLUMN share_wizard_result_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.create_date IS 'Created on';


--
-- Name: COLUMN share_wizard_result_line.newly_created; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.newly_created IS 'Newly created';


--
-- Name: COLUMN share_wizard_result_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN share_wizard_result_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN share_wizard_result_line.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.user_id IS 'unknown';


--
-- Name: COLUMN share_wizard_result_line.password; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.password IS 'Password';


--
-- Name: COLUMN share_wizard_result_line.share_wizard_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN share_wizard_result_line.share_wizard_id IS 'Share Wizard';


--
-- Name: share_wizard_result_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE share_wizard_result_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.share_wizard_result_line_id_seq OWNER TO odoo;

--
-- Name: share_wizard_result_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE share_wizard_result_line_id_seq OWNED BY share_wizard_result_line.id;


--
-- Name: stock_change_product_qty; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_change_product_qty (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    lot_id integer,
    new_quantity numeric NOT NULL,
    location_id integer NOT NULL
);


ALTER TABLE public.stock_change_product_qty OWNER TO odoo;

--
-- Name: TABLE stock_change_product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_change_product_qty IS 'Change Product Quantity';


--
-- Name: COLUMN stock_change_product_qty.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.create_uid IS 'Created by';


--
-- Name: COLUMN stock_change_product_qty.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.create_date IS 'Created on';


--
-- Name: COLUMN stock_change_product_qty.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.product_id IS 'Product';


--
-- Name: COLUMN stock_change_product_qty.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_change_product_qty.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_change_product_qty.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.lot_id IS 'Serial Number';


--
-- Name: COLUMN stock_change_product_qty.new_quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.new_quantity IS 'New Quantity on Hand';


--
-- Name: COLUMN stock_change_product_qty.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_product_qty.location_id IS 'Location';


--
-- Name: stock_change_product_qty_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_change_product_qty_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_change_product_qty_id_seq OWNER TO odoo;

--
-- Name: stock_change_product_qty_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_change_product_qty_id_seq OWNED BY stock_change_product_qty.id;


--
-- Name: stock_change_standard_price; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_change_standard_price (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    new_price numeric NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.stock_change_standard_price OWNER TO odoo;

--
-- Name: TABLE stock_change_standard_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_change_standard_price IS 'Change Standard Price';


--
-- Name: COLUMN stock_change_standard_price.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_standard_price.create_uid IS 'Created by';


--
-- Name: COLUMN stock_change_standard_price.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_standard_price.create_date IS 'Created on';


--
-- Name: COLUMN stock_change_standard_price.new_price; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_standard_price.new_price IS 'Price';


--
-- Name: COLUMN stock_change_standard_price.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_standard_price.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_change_standard_price.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_change_standard_price.write_date IS 'Last Updated on';


--
-- Name: stock_change_standard_price_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_change_standard_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_change_standard_price_id_seq OWNER TO odoo;

--
-- Name: stock_change_standard_price_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_change_standard_price_id_seq OWNED BY stock_change_standard_price.id;


--
-- Name: stock_config_settings; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_config_settings (
    id integer NOT NULL,
    group_uom boolean,
    create_uid integer,
    module_procurement_jit boolean,
    group_stock_packaging boolean,
    create_date timestamp without time zone,
    module_claim_from_delivery boolean,
    group_stock_multiple_locations boolean,
    module_stock_picking_wave boolean,
    decimal_precision integer,
    module_product_expiry boolean,
    company_id integer NOT NULL,
    write_uid integer,
    group_stock_adv_location boolean,
    group_stock_tracking_lot boolean,
    write_date timestamp without time zone,
    group_stock_production_lot boolean,
    module_stock_dropshipping boolean,
    group_stock_tracking_owner boolean,
    group_uos boolean,
    module_stock_landed_costs boolean,
    group_stock_inventory_valuation boolean,
    module_stock_invoice_directly boolean
);


ALTER TABLE public.stock_config_settings OWNER TO odoo;

--
-- Name: TABLE stock_config_settings; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_config_settings IS 'stock.config.settings';


--
-- Name: COLUMN stock_config_settings.group_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_uom IS 'Manage different units of measure for products';


--
-- Name: COLUMN stock_config_settings.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.create_uid IS 'Created by';


--
-- Name: COLUMN stock_config_settings.module_procurement_jit; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_procurement_jit IS 'Generate procurement in real time';


--
-- Name: COLUMN stock_config_settings.group_stock_packaging; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_packaging IS 'Allow to define several packaging methods on products';


--
-- Name: COLUMN stock_config_settings.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.create_date IS 'Created on';


--
-- Name: COLUMN stock_config_settings.module_claim_from_delivery; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_claim_from_delivery IS 'Allow claim on deliveries';


--
-- Name: COLUMN stock_config_settings.group_stock_multiple_locations; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_multiple_locations IS 'Manage multiple locations and warehouses';


--
-- Name: COLUMN stock_config_settings.module_stock_picking_wave; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_stock_picking_wave IS 'Manage picking wave';


--
-- Name: COLUMN stock_config_settings.decimal_precision; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.decimal_precision IS 'Decimal precision on weight';


--
-- Name: COLUMN stock_config_settings.module_product_expiry; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_product_expiry IS 'Expiry date on serial numbers';


--
-- Name: COLUMN stock_config_settings.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.company_id IS 'Company';


--
-- Name: COLUMN stock_config_settings.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_config_settings.group_stock_adv_location; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_adv_location IS 'Manage advanced routes for your warehouse';


--
-- Name: COLUMN stock_config_settings.group_stock_tracking_lot; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_tracking_lot IS 'Use packages: pallets, boxes, ...';


--
-- Name: COLUMN stock_config_settings.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_config_settings.group_stock_production_lot; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_production_lot IS 'Track lots or serial numbers';


--
-- Name: COLUMN stock_config_settings.module_stock_dropshipping; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_stock_dropshipping IS 'Manage dropshipping';


--
-- Name: COLUMN stock_config_settings.group_stock_tracking_owner; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_tracking_owner IS 'Manage owner on stock';


--
-- Name: COLUMN stock_config_settings.group_uos; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_uos IS 'Invoice products in a different unit of measure than the sales order';


--
-- Name: COLUMN stock_config_settings.module_stock_landed_costs; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_stock_landed_costs IS 'Calculate landed costs on products';


--
-- Name: COLUMN stock_config_settings.group_stock_inventory_valuation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.group_stock_inventory_valuation IS 'Generate accounting entries per stock movement';


--
-- Name: COLUMN stock_config_settings.module_stock_invoice_directly; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_config_settings.module_stock_invoice_directly IS 'Create and open the invoice when the user finish a delivery order';


--
-- Name: stock_config_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_config_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_config_settings_id_seq OWNER TO odoo;

--
-- Name: stock_config_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_config_settings_id_seq OWNED BY stock_config_settings.id;


--
-- Name: stock_fixed_putaway_strat; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_fixed_putaway_strat (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    putaway_id integer NOT NULL,
    sequence integer,
    write_uid integer,
    fixed_location_id integer NOT NULL,
    write_date timestamp without time zone,
    category_id integer NOT NULL
);


ALTER TABLE public.stock_fixed_putaway_strat OWNER TO odoo;

--
-- Name: TABLE stock_fixed_putaway_strat; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_fixed_putaway_strat IS 'stock.fixed.putaway.strat';


--
-- Name: COLUMN stock_fixed_putaway_strat.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.create_uid IS 'Created by';


--
-- Name: COLUMN stock_fixed_putaway_strat.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.create_date IS 'Created on';


--
-- Name: COLUMN stock_fixed_putaway_strat.putaway_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.putaway_id IS 'Put Away Method';


--
-- Name: COLUMN stock_fixed_putaway_strat.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.sequence IS 'Priority';


--
-- Name: COLUMN stock_fixed_putaway_strat.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_fixed_putaway_strat.fixed_location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.fixed_location_id IS 'Location';


--
-- Name: COLUMN stock_fixed_putaway_strat.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_fixed_putaway_strat.category_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_fixed_putaway_strat.category_id IS 'Product Category';


--
-- Name: stock_fixed_putaway_strat_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_fixed_putaway_strat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_fixed_putaway_strat_id_seq OWNER TO odoo;

--
-- Name: stock_fixed_putaway_strat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_fixed_putaway_strat_id_seq OWNED BY stock_fixed_putaway_strat.id;


--
-- Name: stock_quant; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_quant (
    id integer NOT NULL,
    create_date timestamp without time zone,
    qty double precision NOT NULL,
    propagated_from_id integer,
    package_id integer,
    cost double precision,
    lot_id integer,
    reservation_id integer,
    create_uid integer,
    location_id integer NOT NULL,
    company_id integer NOT NULL,
    owner_id integer,
    write_date timestamp without time zone,
    write_uid integer,
    product_id integer NOT NULL,
    packaging_type_id integer,
    negative_move_id integer,
    in_date timestamp without time zone
);


ALTER TABLE public.stock_quant OWNER TO odoo;

--
-- Name: TABLE stock_quant; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_quant IS 'Quants';


--
-- Name: COLUMN stock_quant.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.create_date IS 'Creation Date';


--
-- Name: COLUMN stock_quant.qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.qty IS 'Quantity';


--
-- Name: COLUMN stock_quant.propagated_from_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.propagated_from_id IS 'Linked Quant';


--
-- Name: COLUMN stock_quant.package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.package_id IS 'Package';


--
-- Name: COLUMN stock_quant.cost; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.cost IS 'Unit Cost';


--
-- Name: COLUMN stock_quant.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.lot_id IS 'Lot';


--
-- Name: COLUMN stock_quant.reservation_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.reservation_id IS 'Reserved for Move';


--
-- Name: COLUMN stock_quant.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.create_uid IS 'Created by';


--
-- Name: COLUMN stock_quant.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.location_id IS 'Location';


--
-- Name: COLUMN stock_quant.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.company_id IS 'Company';


--
-- Name: COLUMN stock_quant.owner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.owner_id IS 'Owner';


--
-- Name: COLUMN stock_quant.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_quant.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_quant.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.product_id IS 'Product';


--
-- Name: COLUMN stock_quant.packaging_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.packaging_type_id IS 'Type of packaging';


--
-- Name: COLUMN stock_quant.negative_move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.negative_move_id IS 'Move Negative Quant';


--
-- Name: COLUMN stock_quant.in_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant.in_date IS 'Incoming Date';


--
-- Name: stock_quant_move_rel; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_quant_move_rel (
    quant_id integer NOT NULL,
    move_id integer NOT NULL
);


ALTER TABLE public.stock_quant_move_rel OWNER TO odoo;

--
-- Name: TABLE stock_quant_move_rel; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_quant_move_rel IS 'RELATION BETWEEN stock_quant AND stock_move';


--
-- Name: stock_history; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW stock_history AS
 SELECT min(foo.id) AS id,
    foo.move_id,
    foo.location_id,
    foo.company_id,
    foo.product_id,
    foo.product_categ_id,
    sum(foo.quantity) AS quantity,
    foo.date,
    foo.price_unit_on_quant,
    foo.source
   FROM ( SELECT (((stock_move.id)::text || '-'::text) || (quant.id)::text) AS id,
            quant.id AS quant_id,
            stock_move.id AS move_id,
            dest_location.id AS location_id,
            dest_location.company_id,
            stock_move.product_id,
            product_template.categ_id AS product_categ_id,
            quant.qty AS quantity,
            stock_move.date,
            quant.cost AS price_unit_on_quant,
            stock_move.origin AS source
           FROM stock_quant quant,
            stock_quant_move_rel,
            ((((stock_move
             LEFT JOIN stock_location dest_location ON ((stock_move.location_dest_id = dest_location.id)))
             LEFT JOIN stock_location source_location ON ((stock_move.location_id = source_location.id)))
             LEFT JOIN product_product ON ((product_product.id = stock_move.product_id)))
             LEFT JOIN product_template ON ((product_template.id = product_product.product_tmpl_id)))
          WHERE ((((((quant.qty > (0)::double precision) AND ((stock_move.state)::text = 'done'::text)) AND ((dest_location.usage)::text = ANY (ARRAY[('internal'::character varying)::text, ('transit'::character varying)::text]))) AND (stock_quant_move_rel.quant_id = quant.id)) AND (stock_quant_move_rel.move_id = stock_move.id)) AND ((((source_location.company_id IS NULL) AND (dest_location.company_id IS NOT NULL)) OR ((source_location.company_id IS NOT NULL) AND (dest_location.company_id IS NULL))) OR (source_location.company_id <> dest_location.company_id)))
        UNION
         SELECT ((('-'::text || (stock_move.id)::text) || '-'::text) || (quant.id)::text) AS id,
            quant.id AS quant_id,
            stock_move.id AS move_id,
            source_location.id AS location_id,
            source_location.company_id,
            stock_move.product_id,
            product_template.categ_id AS product_categ_id,
            (- quant.qty) AS quantity,
            stock_move.date,
            quant.cost AS price_unit_on_quant,
            stock_move.origin AS source
           FROM stock_quant quant,
            stock_quant_move_rel,
            ((((stock_move
             LEFT JOIN stock_location source_location ON ((stock_move.location_id = source_location.id)))
             LEFT JOIN stock_location dest_location ON ((stock_move.location_dest_id = dest_location.id)))
             LEFT JOIN product_product ON ((product_product.id = stock_move.product_id)))
             LEFT JOIN product_template ON ((product_template.id = product_product.product_tmpl_id)))
          WHERE ((((((quant.qty > (0)::double precision) AND ((stock_move.state)::text = 'done'::text)) AND ((source_location.usage)::text = ANY (ARRAY[('internal'::character varying)::text, ('transit'::character varying)::text]))) AND (stock_quant_move_rel.quant_id = quant.id)) AND (stock_quant_move_rel.move_id = stock_move.id)) AND ((((dest_location.company_id IS NULL) AND (source_location.company_id IS NOT NULL)) OR ((dest_location.company_id IS NOT NULL) AND (source_location.company_id IS NULL))) OR (dest_location.company_id <> source_location.company_id)))) foo
  GROUP BY foo.move_id, foo.location_id, foo.company_id, foo.product_id, foo.product_categ_id, foo.date, foo.price_unit_on_quant, foo.source;


ALTER TABLE public.stock_history OWNER TO odoo;

--
-- Name: stock_incoterms; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_incoterms (
    id integer NOT NULL,
    create_uid integer,
    code character varying(3) NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    active boolean
);


ALTER TABLE public.stock_incoterms OWNER TO odoo;

--
-- Name: TABLE stock_incoterms; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_incoterms IS 'Incoterms';


--
-- Name: COLUMN stock_incoterms.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.create_uid IS 'Created by';


--
-- Name: COLUMN stock_incoterms.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.code IS 'Code';


--
-- Name: COLUMN stock_incoterms.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.create_date IS 'Created on';


--
-- Name: COLUMN stock_incoterms.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.name IS 'Name';


--
-- Name: COLUMN stock_incoterms.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_incoterms.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_incoterms.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_incoterms.active IS 'Active';


--
-- Name: stock_incoterms_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_incoterms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_incoterms_id_seq OWNER TO odoo;

--
-- Name: stock_incoterms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_incoterms_id_seq OWNED BY stock_incoterms.id;


--
-- Name: stock_inventory; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_inventory (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    location_id integer NOT NULL,
    company_id integer NOT NULL,
    write_uid integer,
    state character varying,
    write_date timestamp without time zone,
    lot_id integer,
    date timestamp without time zone NOT NULL,
    package_id integer,
    partner_id integer,
    filter character varying NOT NULL,
    product_id integer,
    period_id integer
);


ALTER TABLE public.stock_inventory OWNER TO odoo;

--
-- Name: TABLE stock_inventory; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_inventory IS 'Inventory';


--
-- Name: COLUMN stock_inventory.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.create_uid IS 'Created by';


--
-- Name: COLUMN stock_inventory.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.create_date IS 'Created on';


--
-- Name: COLUMN stock_inventory.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.name IS 'Inventory Reference';


--
-- Name: COLUMN stock_inventory.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.location_id IS 'Inventoried Location';


--
-- Name: COLUMN stock_inventory.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.company_id IS 'Company';


--
-- Name: COLUMN stock_inventory.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_inventory.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.state IS 'Status';


--
-- Name: COLUMN stock_inventory.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_inventory.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.lot_id IS 'Inventoried Lot/Serial Number';


--
-- Name: COLUMN stock_inventory.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.date IS 'Inventory Date';


--
-- Name: COLUMN stock_inventory.package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.package_id IS 'Inventoried Pack';


--
-- Name: COLUMN stock_inventory.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.partner_id IS 'Inventoried Owner';


--
-- Name: COLUMN stock_inventory.filter; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.filter IS 'Inventory of';


--
-- Name: COLUMN stock_inventory.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.product_id IS 'Inventoried Product';


--
-- Name: COLUMN stock_inventory.period_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory.period_id IS 'Force Valuation Period';


--
-- Name: stock_inventory_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_inventory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_inventory_id_seq OWNER TO odoo;

--
-- Name: stock_inventory_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_inventory_id_seq OWNED BY stock_inventory.id;


--
-- Name: stock_inventory_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_inventory_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    prodlot_name character varying,
    product_name character varying,
    location_id integer NOT NULL,
    prod_lot_id integer,
    location_name character varying,
    company_id integer,
    write_uid integer,
    inventory_id integer,
    package_id integer,
    write_date timestamp without time zone,
    product_qty numeric,
    theoretical_qty numeric,
    product_uom_id integer NOT NULL,
    product_code character varying,
    partner_id integer,
    product_id integer NOT NULL
);


ALTER TABLE public.stock_inventory_line OWNER TO odoo;

--
-- Name: TABLE stock_inventory_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_inventory_line IS 'Inventory Line';


--
-- Name: COLUMN stock_inventory_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.create_uid IS 'Created by';


--
-- Name: COLUMN stock_inventory_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.create_date IS 'Created on';


--
-- Name: COLUMN stock_inventory_line.prodlot_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.prodlot_name IS 'Serial Number Name';


--
-- Name: COLUMN stock_inventory_line.product_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.product_name IS 'Product Name';


--
-- Name: COLUMN stock_inventory_line.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.location_id IS 'Location';


--
-- Name: COLUMN stock_inventory_line.prod_lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.prod_lot_id IS 'Serial Number';


--
-- Name: COLUMN stock_inventory_line.location_name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.location_name IS 'Location Name';


--
-- Name: COLUMN stock_inventory_line.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.company_id IS 'Company';


--
-- Name: COLUMN stock_inventory_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_inventory_line.inventory_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.inventory_id IS 'Inventory';


--
-- Name: COLUMN stock_inventory_line.package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.package_id IS 'Pack';


--
-- Name: COLUMN stock_inventory_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_inventory_line.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.product_qty IS 'Checked Quantity';


--
-- Name: COLUMN stock_inventory_line.theoretical_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.theoretical_qty IS 'Theoretical Quantity';


--
-- Name: COLUMN stock_inventory_line.product_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.product_uom_id IS 'Product Unit of Measure';


--
-- Name: COLUMN stock_inventory_line.product_code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.product_code IS 'Product Code';


--
-- Name: COLUMN stock_inventory_line.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.partner_id IS 'Owner';


--
-- Name: COLUMN stock_inventory_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_inventory_line.product_id IS 'Product';


--
-- Name: stock_inventory_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_inventory_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_inventory_line_id_seq OWNER TO odoo;

--
-- Name: stock_inventory_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_inventory_line_id_seq OWNED BY stock_inventory_line.id;


--
-- Name: stock_invoice_onshipping; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_invoice_onshipping (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    journal_type character varying,
    invoice_date date,
    journal_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    "group" boolean
);


ALTER TABLE public.stock_invoice_onshipping OWNER TO odoo;

--
-- Name: TABLE stock_invoice_onshipping; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_invoice_onshipping IS 'Stock Invoice Onshipping';


--
-- Name: COLUMN stock_invoice_onshipping.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.create_uid IS 'Created by';


--
-- Name: COLUMN stock_invoice_onshipping.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.create_date IS 'Created on';


--
-- Name: COLUMN stock_invoice_onshipping.journal_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.journal_type IS 'Journal Type';


--
-- Name: COLUMN stock_invoice_onshipping.invoice_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.invoice_date IS 'Invoice Date';


--
-- Name: COLUMN stock_invoice_onshipping.journal_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.journal_id IS 'Destination Journal';


--
-- Name: COLUMN stock_invoice_onshipping.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_invoice_onshipping.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_invoice_onshipping."group"; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_invoice_onshipping."group" IS 'Group by partner';


--
-- Name: stock_invoice_onshipping_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_invoice_onshipping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_invoice_onshipping_id_seq OWNER TO odoo;

--
-- Name: stock_invoice_onshipping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_invoice_onshipping_id_seq OWNED BY stock_invoice_onshipping.id;


--
-- Name: stock_location_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_location_id_seq OWNER TO odoo;

--
-- Name: stock_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_location_id_seq OWNED BY stock_location.id;


--
-- Name: stock_location_path; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location_path (
    id integer NOT NULL,
    location_from_id integer NOT NULL,
    create_uid integer,
    route_sequence numeric,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    picking_type_id integer NOT NULL,
    auto character varying NOT NULL,
    sequence integer,
    company_id integer,
    warehouse_id integer,
    delay integer,
    route_id integer,
    location_dest_id integer NOT NULL,
    write_date timestamp without time zone,
    active boolean,
    propagate boolean,
    write_uid integer,
    invoice_state character varying
);


ALTER TABLE public.stock_location_path OWNER TO odoo;

--
-- Name: TABLE stock_location_path; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location_path IS 'Pushed Flows';


--
-- Name: COLUMN stock_location_path.location_from_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.location_from_id IS 'Source Location';


--
-- Name: COLUMN stock_location_path.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.create_uid IS 'Created by';


--
-- Name: COLUMN stock_location_path.route_sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.route_sequence IS 'Route Sequence';


--
-- Name: COLUMN stock_location_path.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.create_date IS 'Created on';


--
-- Name: COLUMN stock_location_path.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.name IS 'Operation Name';


--
-- Name: COLUMN stock_location_path.picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.picking_type_id IS 'Type of the new Operation';


--
-- Name: COLUMN stock_location_path.auto; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.auto IS 'Automatic Move';


--
-- Name: COLUMN stock_location_path.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.sequence IS 'Sequence';


--
-- Name: COLUMN stock_location_path.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.company_id IS 'Company';


--
-- Name: COLUMN stock_location_path.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN stock_location_path.delay; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.delay IS 'Delay (days)';


--
-- Name: COLUMN stock_location_path.route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.route_id IS 'Route';


--
-- Name: COLUMN stock_location_path.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.location_dest_id IS 'Destination Location';


--
-- Name: COLUMN stock_location_path.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_location_path.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.active IS 'Active';


--
-- Name: COLUMN stock_location_path.propagate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.propagate IS 'Propagate cancel and split';


--
-- Name: COLUMN stock_location_path.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_location_path.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_path.invoice_state IS 'Invoice Status';


--
-- Name: stock_location_path_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_location_path_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_location_path_id_seq OWNER TO odoo;

--
-- Name: stock_location_path_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_location_path_id_seq OWNED BY stock_location_path.id;


--
-- Name: stock_location_route; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location_route (
    id integer NOT NULL,
    supplier_wh_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    sequence integer,
    warehouse_selectable boolean,
    company_id integer,
    supplied_wh_id integer,
    product_selectable boolean,
    product_categ_selectable boolean,
    write_date timestamp without time zone,
    active boolean,
    write_uid integer,
    sale_selectable boolean
);


ALTER TABLE public.stock_location_route OWNER TO odoo;

--
-- Name: TABLE stock_location_route; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location_route IS 'Inventory Routes';


--
-- Name: COLUMN stock_location_route.supplier_wh_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.supplier_wh_id IS 'Supplier Warehouse';


--
-- Name: COLUMN stock_location_route.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.create_uid IS 'Created by';


--
-- Name: COLUMN stock_location_route.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.create_date IS 'Created on';


--
-- Name: COLUMN stock_location_route.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.name IS 'Route Name';


--
-- Name: COLUMN stock_location_route.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.sequence IS 'Sequence';


--
-- Name: COLUMN stock_location_route.warehouse_selectable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.warehouse_selectable IS 'Applicable on Warehouse';


--
-- Name: COLUMN stock_location_route.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.company_id IS 'Company';


--
-- Name: COLUMN stock_location_route.supplied_wh_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.supplied_wh_id IS 'Supplied Warehouse';


--
-- Name: COLUMN stock_location_route.product_selectable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.product_selectable IS 'Applicable on Product';


--
-- Name: COLUMN stock_location_route.product_categ_selectable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.product_categ_selectable IS 'Applicable on Product Category';


--
-- Name: COLUMN stock_location_route.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_location_route.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.active IS 'Active';


--
-- Name: COLUMN stock_location_route.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_location_route.sale_selectable; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_location_route.sale_selectable IS 'Selectable on Sales Order Line';


--
-- Name: stock_location_route_categ; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location_route_categ (
    categ_id integer NOT NULL,
    route_id integer NOT NULL
);


ALTER TABLE public.stock_location_route_categ OWNER TO odoo;

--
-- Name: TABLE stock_location_route_categ; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location_route_categ IS 'RELATION BETWEEN product_category AND stock_location_route';


--
-- Name: stock_location_route_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_location_route_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_location_route_id_seq OWNER TO odoo;

--
-- Name: stock_location_route_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_location_route_id_seq OWNED BY stock_location_route.id;


--
-- Name: stock_location_route_move; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location_route_move (
    move_id integer NOT NULL,
    route_id integer NOT NULL
);


ALTER TABLE public.stock_location_route_move OWNER TO odoo;

--
-- Name: TABLE stock_location_route_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location_route_move IS 'RELATION BETWEEN stock_move AND stock_location_route';


--
-- Name: stock_location_route_procurement; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_location_route_procurement (
    procurement_id integer NOT NULL,
    route_id integer NOT NULL
);


ALTER TABLE public.stock_location_route_procurement OWNER TO odoo;

--
-- Name: TABLE stock_location_route_procurement; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_location_route_procurement IS 'RELATION BETWEEN procurement_order AND stock_location_route';


--
-- Name: stock_move_consume; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_move_consume (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    product_uom integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL,
    location_id integer NOT NULL,
    restrict_lot_id integer
);


ALTER TABLE public.stock_move_consume OWNER TO odoo;

--
-- Name: TABLE stock_move_consume; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_move_consume IS 'Consume Products';


--
-- Name: COLUMN stock_move_consume.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.create_uid IS 'Created by';


--
-- Name: COLUMN stock_move_consume.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.create_date IS 'Created on';


--
-- Name: COLUMN stock_move_consume.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.product_id IS 'Product';


--
-- Name: COLUMN stock_move_consume.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN stock_move_consume.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_move_consume.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_move_consume.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.product_qty IS 'Quantity';


--
-- Name: COLUMN stock_move_consume.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.location_id IS 'Location';


--
-- Name: COLUMN stock_move_consume.restrict_lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_consume.restrict_lot_id IS 'Lot';


--
-- Name: stock_move_consume_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_move_consume_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_move_consume_id_seq OWNER TO odoo;

--
-- Name: stock_move_consume_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_move_consume_id_seq OWNED BY stock_move_consume.id;


--
-- Name: stock_move_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_move_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_move_id_seq OWNER TO odoo;

--
-- Name: stock_move_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_move_id_seq OWNED BY stock_move.id;


--
-- Name: stock_move_operation_link; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_move_operation_link (
    id integer NOT NULL,
    reserved_quant_id integer,
    create_date timestamp without time zone,
    create_uid integer,
    qty double precision,
    write_date timestamp without time zone,
    operation_id integer NOT NULL,
    write_uid integer,
    move_id integer NOT NULL
);


ALTER TABLE public.stock_move_operation_link OWNER TO odoo;

--
-- Name: TABLE stock_move_operation_link; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_move_operation_link IS 'Link between stock moves and pack operations';


--
-- Name: COLUMN stock_move_operation_link.reserved_quant_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.reserved_quant_id IS 'Reserved Quant';


--
-- Name: COLUMN stock_move_operation_link.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.create_date IS 'Created on';


--
-- Name: COLUMN stock_move_operation_link.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.create_uid IS 'Created by';


--
-- Name: COLUMN stock_move_operation_link.qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.qty IS 'Quantity';


--
-- Name: COLUMN stock_move_operation_link.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_move_operation_link.operation_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.operation_id IS 'Operation';


--
-- Name: COLUMN stock_move_operation_link.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_move_operation_link.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_operation_link.move_id IS 'Move';


--
-- Name: stock_move_operation_link_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_move_operation_link_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_move_operation_link_id_seq OWNER TO odoo;

--
-- Name: stock_move_operation_link_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_move_operation_link_id_seq OWNED BY stock_move_operation_link.id;


--
-- Name: stock_move_scrap; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_move_scrap (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    product_uom integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    product_qty numeric NOT NULL,
    location_id integer NOT NULL,
    restrict_lot_id integer
);


ALTER TABLE public.stock_move_scrap OWNER TO odoo;

--
-- Name: TABLE stock_move_scrap; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_move_scrap IS 'Scrap Products';


--
-- Name: COLUMN stock_move_scrap.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.create_uid IS 'Created by';


--
-- Name: COLUMN stock_move_scrap.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.create_date IS 'Created on';


--
-- Name: COLUMN stock_move_scrap.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.product_id IS 'Product';


--
-- Name: COLUMN stock_move_scrap.product_uom; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN stock_move_scrap.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_move_scrap.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_move_scrap.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.product_qty IS 'Quantity';


--
-- Name: COLUMN stock_move_scrap.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.location_id IS 'Location';


--
-- Name: COLUMN stock_move_scrap.restrict_lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_move_scrap.restrict_lot_id IS 'Lot';


--
-- Name: stock_move_scrap_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_move_scrap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_move_scrap_id_seq OWNER TO odoo;

--
-- Name: stock_move_scrap_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_move_scrap_id_seq OWNED BY stock_move_scrap.id;


--
-- Name: stock_pack_operation; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_pack_operation (
    id integer NOT NULL,
    create_date timestamp without time zone,
    result_package_id integer,
    write_uid integer,
    currency integer,
    package_id integer,
    cost double precision,
    product_qty numeric NOT NULL,
    lot_id integer,
    location_id integer NOT NULL,
    create_uid integer,
    qty_done numeric,
    owner_id integer,
    write_date timestamp without time zone,
    date timestamp without time zone NOT NULL,
    product_id integer,
    product_uom_id integer,
    location_dest_id integer NOT NULL,
    processed character varying NOT NULL,
    picking_id integer NOT NULL
);


ALTER TABLE public.stock_pack_operation OWNER TO odoo;

--
-- Name: TABLE stock_pack_operation; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_pack_operation IS 'Packing Operation';


--
-- Name: COLUMN stock_pack_operation.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.create_date IS 'Created on';


--
-- Name: COLUMN stock_pack_operation.result_package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.result_package_id IS 'Destination Package';


--
-- Name: COLUMN stock_pack_operation.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_pack_operation.currency; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.currency IS 'Currency';


--
-- Name: COLUMN stock_pack_operation.package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.package_id IS 'Source Package';


--
-- Name: COLUMN stock_pack_operation.cost; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.cost IS 'Cost';


--
-- Name: COLUMN stock_pack_operation.product_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.product_qty IS 'Quantity';


--
-- Name: COLUMN stock_pack_operation.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.lot_id IS 'Lot/Serial Number';


--
-- Name: COLUMN stock_pack_operation.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.location_id IS 'Source Location';


--
-- Name: COLUMN stock_pack_operation.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.create_uid IS 'Created by';


--
-- Name: COLUMN stock_pack_operation.qty_done; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.qty_done IS 'Quantity Processed';


--
-- Name: COLUMN stock_pack_operation.owner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.owner_id IS 'Owner';


--
-- Name: COLUMN stock_pack_operation.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_pack_operation.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.date IS 'Date';


--
-- Name: COLUMN stock_pack_operation.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.product_id IS 'Product';


--
-- Name: COLUMN stock_pack_operation.product_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.product_uom_id IS 'Product Unit of Measure';


--
-- Name: COLUMN stock_pack_operation.location_dest_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.location_dest_id IS 'Destination Location';


--
-- Name: COLUMN stock_pack_operation.processed; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.processed IS 'Has been processed?';


--
-- Name: COLUMN stock_pack_operation.picking_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_pack_operation.picking_id IS 'Stock Picking';


--
-- Name: stock_pack_operation_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_pack_operation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_pack_operation_id_seq OWNER TO odoo;

--
-- Name: stock_pack_operation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_pack_operation_id_seq OWNED BY stock_pack_operation.id;


--
-- Name: stock_picking; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_picking (
    id integer NOT NULL,
    origin character varying,
    create_date timestamp without time zone,
    date_done timestamp without time zone,
    write_uid integer,
    partner_id integer,
    priority character varying NOT NULL,
    backorder_id integer,
    picking_type_id integer NOT NULL,
    move_type character varying NOT NULL,
    message_last_post timestamp without time zone,
    company_id integer NOT NULL,
    note text,
    state character varying,
    owner_id integer,
    create_uid integer,
    min_date timestamp without time zone,
    write_date timestamp without time zone,
    date timestamp without time zone,
    name character varying,
    recompute_pack_op boolean,
    max_date timestamp without time zone,
    group_id integer,
    invoice_state character varying NOT NULL,
    reception_to_invoice boolean,
    carrier_tracking_ref character varying,
    number_of_packages integer,
    weight numeric,
    carrier_id integer,
    weight_uom_id integer NOT NULL,
    weight_net numeric,
    volume double precision
);


ALTER TABLE public.stock_picking OWNER TO odoo;

--
-- Name: TABLE stock_picking; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_picking IS 'Picking List';


--
-- Name: COLUMN stock_picking.origin; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.origin IS 'Source Document';


--
-- Name: COLUMN stock_picking.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.create_date IS 'Created on';


--
-- Name: COLUMN stock_picking.date_done; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.date_done IS 'Date of Transfer';


--
-- Name: COLUMN stock_picking.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_picking.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.partner_id IS 'Partner';


--
-- Name: COLUMN stock_picking.priority; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.priority IS 'Priority';


--
-- Name: COLUMN stock_picking.backorder_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.backorder_id IS 'Back Order of';


--
-- Name: COLUMN stock_picking.picking_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.picking_type_id IS 'Picking Type';


--
-- Name: COLUMN stock_picking.move_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.move_type IS 'Delivery Method';


--
-- Name: COLUMN stock_picking.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN stock_picking.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.company_id IS 'Company';


--
-- Name: COLUMN stock_picking.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.note IS 'Notes';


--
-- Name: COLUMN stock_picking.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.state IS 'Status';


--
-- Name: COLUMN stock_picking.owner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.owner_id IS 'Owner';


--
-- Name: COLUMN stock_picking.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.create_uid IS 'Created by';


--
-- Name: COLUMN stock_picking.min_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.min_date IS 'Scheduled Date';


--
-- Name: COLUMN stock_picking.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_picking.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.date IS 'Creation Date';


--
-- Name: COLUMN stock_picking.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.name IS 'Reference';


--
-- Name: COLUMN stock_picking.recompute_pack_op; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.recompute_pack_op IS 'Recompute pack operation?';


--
-- Name: COLUMN stock_picking.max_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.max_date IS 'Max. Expected Date';


--
-- Name: COLUMN stock_picking.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.group_id IS 'Procurement Group';


--
-- Name: COLUMN stock_picking.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.invoice_state IS 'Invoice Control';


--
-- Name: COLUMN stock_picking.reception_to_invoice; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.reception_to_invoice IS 'Invoiceable on incoming shipment?';


--
-- Name: COLUMN stock_picking.carrier_tracking_ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.carrier_tracking_ref IS 'Carrier Tracking Ref';


--
-- Name: COLUMN stock_picking.number_of_packages; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.number_of_packages IS 'Number of Packages';


--
-- Name: COLUMN stock_picking.weight; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.weight IS 'Weight';


--
-- Name: COLUMN stock_picking.carrier_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.carrier_id IS 'Carrier';


--
-- Name: COLUMN stock_picking.weight_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.weight_uom_id IS 'Unit of Measure';


--
-- Name: COLUMN stock_picking.weight_net; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.weight_net IS 'Net Weight';


--
-- Name: COLUMN stock_picking.volume; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_picking.volume IS 'Volume';


--
-- Name: stock_picking_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_picking_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_picking_id_seq OWNER TO odoo;

--
-- Name: stock_picking_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_picking_id_seq OWNED BY stock_picking.id;


--
-- Name: stock_picking_type_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_picking_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_picking_type_id_seq OWNER TO odoo;

--
-- Name: stock_picking_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_picking_type_id_seq OWNED BY stock_picking_type.id;


--
-- Name: stock_production_lot; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_production_lot (
    id integer NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    create_uid integer,
    message_last_post timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    ref character varying,
    product_id integer NOT NULL
);


ALTER TABLE public.stock_production_lot OWNER TO odoo;

--
-- Name: TABLE stock_production_lot; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_production_lot IS 'Lot/Serial';


--
-- Name: COLUMN stock_production_lot.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.create_date IS 'Creation Date';


--
-- Name: COLUMN stock_production_lot.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.name IS 'Serial Number';


--
-- Name: COLUMN stock_production_lot.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.create_uid IS 'Created by';


--
-- Name: COLUMN stock_production_lot.message_last_post; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.message_last_post IS 'Last Message Date';


--
-- Name: COLUMN stock_production_lot.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_production_lot.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_production_lot.ref; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.ref IS 'Internal Reference';


--
-- Name: COLUMN stock_production_lot.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_production_lot.product_id IS 'Product';


--
-- Name: stock_production_lot_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_production_lot_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_production_lot_id_seq OWNER TO odoo;

--
-- Name: stock_production_lot_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_production_lot_id_seq OWNED BY stock_production_lot.id;


--
-- Name: stock_quant_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_quant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_quant_id_seq OWNER TO odoo;

--
-- Name: stock_quant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_quant_id_seq OWNED BY stock_quant.id;


--
-- Name: stock_quant_package; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_quant_package (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying,
    company_id integer,
    write_uid integer,
    ul_id integer,
    parent_id integer,
    write_date timestamp without time zone,
    packaging_id integer,
    location_id integer,
    owner_id integer
);


ALTER TABLE public.stock_quant_package OWNER TO odoo;

--
-- Name: TABLE stock_quant_package; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_quant_package IS 'Physical Packages';


--
-- Name: COLUMN stock_quant_package.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.create_uid IS 'Created by';


--
-- Name: COLUMN stock_quant_package.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.create_date IS 'Created on';


--
-- Name: COLUMN stock_quant_package.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.name IS 'Package Reference';


--
-- Name: COLUMN stock_quant_package.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.company_id IS 'Company';


--
-- Name: COLUMN stock_quant_package.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_quant_package.ul_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.ul_id IS 'Logistic Unit';


--
-- Name: COLUMN stock_quant_package.parent_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.parent_id IS 'Parent Package';


--
-- Name: COLUMN stock_quant_package.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_quant_package.packaging_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.packaging_id IS 'Packaging';


--
-- Name: COLUMN stock_quant_package.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.location_id IS 'Location';


--
-- Name: COLUMN stock_quant_package.owner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_quant_package.owner_id IS 'Owner';


--
-- Name: stock_quant_package_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_quant_package_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_quant_package_id_seq OWNER TO odoo;

--
-- Name: stock_quant_package_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_quant_package_id_seq OWNED BY stock_quant_package.id;


--
-- Name: stock_return_picking; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_return_picking (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    move_dest_exists boolean,
    write_uid integer,
    write_date timestamp without time zone,
    invoice_state character varying NOT NULL
);


ALTER TABLE public.stock_return_picking OWNER TO odoo;

--
-- Name: TABLE stock_return_picking; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_return_picking IS 'Return Picking';


--
-- Name: COLUMN stock_return_picking.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.create_uid IS 'Created by';


--
-- Name: COLUMN stock_return_picking.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.create_date IS 'Created on';


--
-- Name: COLUMN stock_return_picking.move_dest_exists; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.move_dest_exists IS 'Chained Move Exists';


--
-- Name: COLUMN stock_return_picking.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_return_picking.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_return_picking.invoice_state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking.invoice_state IS 'Invoicing';


--
-- Name: stock_return_picking_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_return_picking_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_return_picking_id_seq OWNER TO odoo;

--
-- Name: stock_return_picking_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_return_picking_id_seq OWNED BY stock_return_picking.id;


--
-- Name: stock_return_picking_line; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_return_picking_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    product_id integer NOT NULL,
    wizard_id integer,
    write_uid integer,
    write_date timestamp without time zone,
    lot_id integer,
    move_id integer,
    quantity numeric NOT NULL
);


ALTER TABLE public.stock_return_picking_line OWNER TO odoo;

--
-- Name: TABLE stock_return_picking_line; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_return_picking_line IS 'stock.return.picking.line';


--
-- Name: COLUMN stock_return_picking_line.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.create_uid IS 'Created by';


--
-- Name: COLUMN stock_return_picking_line.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.create_date IS 'Created on';


--
-- Name: COLUMN stock_return_picking_line.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.product_id IS 'Product';


--
-- Name: COLUMN stock_return_picking_line.wizard_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.wizard_id IS 'Wizard';


--
-- Name: COLUMN stock_return_picking_line.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_return_picking_line.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_return_picking_line.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.lot_id IS 'Serial Number';


--
-- Name: COLUMN stock_return_picking_line.move_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.move_id IS 'Move';


--
-- Name: COLUMN stock_return_picking_line.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_return_picking_line.quantity IS 'Quantity';


--
-- Name: stock_return_picking_line_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_return_picking_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_return_picking_line_id_seq OWNER TO odoo;

--
-- Name: stock_return_picking_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_return_picking_line_id_seq OWNED BY stock_return_picking_line.id;


--
-- Name: stock_route_product; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_route_product (
    product_id integer NOT NULL,
    route_id integer NOT NULL
);


ALTER TABLE public.stock_route_product OWNER TO odoo;

--
-- Name: TABLE stock_route_product; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_route_product IS 'RELATION BETWEEN product_template AND stock_location_route';


--
-- Name: stock_route_warehouse; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_route_warehouse (
    warehouse_id integer NOT NULL,
    route_id integer NOT NULL
);


ALTER TABLE public.stock_route_warehouse OWNER TO odoo;

--
-- Name: TABLE stock_route_warehouse; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_route_warehouse IS 'RELATION BETWEEN stock_warehouse AND stock_location_route';


--
-- Name: stock_transfer_details; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_transfer_details (
    id integer NOT NULL,
    picking_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.stock_transfer_details OWNER TO odoo;

--
-- Name: TABLE stock_transfer_details; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_transfer_details IS 'Picking wizard';


--
-- Name: COLUMN stock_transfer_details.picking_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details.picking_id IS 'Picking';


--
-- Name: COLUMN stock_transfer_details.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details.create_uid IS 'Created by';


--
-- Name: COLUMN stock_transfer_details.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details.create_date IS 'Created on';


--
-- Name: COLUMN stock_transfer_details.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_transfer_details.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details.write_date IS 'Last Updated on';


--
-- Name: stock_transfer_details_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_transfer_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_transfer_details_id_seq OWNER TO odoo;

--
-- Name: stock_transfer_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_transfer_details_id_seq OWNED BY stock_transfer_details.id;


--
-- Name: stock_transfer_details_items; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_transfer_details_items (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    sourceloc_id integer NOT NULL,
    destinationloc_id integer NOT NULL,
    result_package_id integer,
    product_uom_id integer,
    owner_id integer,
    write_uid integer,
    date timestamp without time zone,
    package_id integer,
    packop_id integer,
    write_date timestamp without time zone,
    transfer_id integer,
    lot_id integer,
    quantity numeric,
    product_id integer
);


ALTER TABLE public.stock_transfer_details_items OWNER TO odoo;

--
-- Name: TABLE stock_transfer_details_items; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_transfer_details_items IS 'Picking wizard items';


--
-- Name: COLUMN stock_transfer_details_items.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.create_uid IS 'Created by';


--
-- Name: COLUMN stock_transfer_details_items.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.create_date IS 'Created on';


--
-- Name: COLUMN stock_transfer_details_items.sourceloc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.sourceloc_id IS 'Source Location';


--
-- Name: COLUMN stock_transfer_details_items.destinationloc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.destinationloc_id IS 'Destination Location';


--
-- Name: COLUMN stock_transfer_details_items.result_package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.result_package_id IS 'Destination package';


--
-- Name: COLUMN stock_transfer_details_items.product_uom_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.product_uom_id IS 'Product Unit of Measure';


--
-- Name: COLUMN stock_transfer_details_items.owner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.owner_id IS 'Owner';


--
-- Name: COLUMN stock_transfer_details_items.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_transfer_details_items.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.date IS 'Date';


--
-- Name: COLUMN stock_transfer_details_items.package_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.package_id IS 'Source package';


--
-- Name: COLUMN stock_transfer_details_items.packop_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.packop_id IS 'Operation';


--
-- Name: COLUMN stock_transfer_details_items.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_transfer_details_items.transfer_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.transfer_id IS 'Transfer';


--
-- Name: COLUMN stock_transfer_details_items.lot_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.lot_id IS 'Lot/Serial Number';


--
-- Name: COLUMN stock_transfer_details_items.quantity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.quantity IS 'Quantity';


--
-- Name: COLUMN stock_transfer_details_items.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_transfer_details_items.product_id IS 'Product';


--
-- Name: stock_transfer_details_items_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_transfer_details_items_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_transfer_details_items_id_seq OWNER TO odoo;

--
-- Name: stock_transfer_details_items_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_transfer_details_items_id_seq OWNED BY stock_transfer_details_items.id;


--
-- Name: stock_warehouse; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_warehouse (
    id integer NOT NULL,
    crossdock_route_id integer,
    create_date timestamp without time zone,
    lot_stock_id integer NOT NULL,
    wh_pack_stock_loc_id integer,
    company_id integer NOT NULL,
    pick_type_id integer,
    code character varying(5) NOT NULL,
    partner_id integer,
    create_uid integer,
    mto_pull_id integer,
    reception_route_id integer,
    wh_input_stock_loc_id integer,
    delivery_steps character varying NOT NULL,
    default_resupply_wh_id integer,
    view_location_id integer NOT NULL,
    wh_qc_stock_loc_id integer,
    reception_steps character varying NOT NULL,
    resupply_from_wh boolean,
    pack_type_id integer,
    wh_output_stock_loc_id integer,
    write_date timestamp without time zone,
    delivery_route_id integer,
    name character varying NOT NULL,
    write_uid integer,
    in_type_id integer,
    out_type_id integer,
    int_type_id integer,
    buy_pull_id integer,
    buy_to_resupply boolean,
    manufacture_pull_id integer,
    manufacture_to_resupply boolean
);


ALTER TABLE public.stock_warehouse OWNER TO odoo;

--
-- Name: TABLE stock_warehouse; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_warehouse IS 'Warehouse';


--
-- Name: COLUMN stock_warehouse.crossdock_route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.crossdock_route_id IS 'Crossdock Route';


--
-- Name: COLUMN stock_warehouse.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.create_date IS 'Created on';


--
-- Name: COLUMN stock_warehouse.lot_stock_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.lot_stock_id IS 'Location Stock';


--
-- Name: COLUMN stock_warehouse.wh_pack_stock_loc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.wh_pack_stock_loc_id IS 'Packing Location';


--
-- Name: COLUMN stock_warehouse.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.company_id IS 'Company';


--
-- Name: COLUMN stock_warehouse.pick_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.pick_type_id IS 'Pick Type';


--
-- Name: COLUMN stock_warehouse.code; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.code IS 'Short Name';


--
-- Name: COLUMN stock_warehouse.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.partner_id IS 'Address';


--
-- Name: COLUMN stock_warehouse.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.create_uid IS 'Created by';


--
-- Name: COLUMN stock_warehouse.mto_pull_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.mto_pull_id IS 'MTO rule';


--
-- Name: COLUMN stock_warehouse.reception_route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.reception_route_id IS 'Receipt Route';


--
-- Name: COLUMN stock_warehouse.wh_input_stock_loc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.wh_input_stock_loc_id IS 'Input Location';


--
-- Name: COLUMN stock_warehouse.delivery_steps; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.delivery_steps IS 'Outgoing Shippings';


--
-- Name: COLUMN stock_warehouse.default_resupply_wh_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.default_resupply_wh_id IS 'Default Resupply Warehouse';


--
-- Name: COLUMN stock_warehouse.view_location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.view_location_id IS 'View Location';


--
-- Name: COLUMN stock_warehouse.wh_qc_stock_loc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.wh_qc_stock_loc_id IS 'Quality Control Location';


--
-- Name: COLUMN stock_warehouse.reception_steps; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.reception_steps IS 'Incoming Shipments';


--
-- Name: COLUMN stock_warehouse.resupply_from_wh; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.resupply_from_wh IS 'Resupply From Other Warehouses';


--
-- Name: COLUMN stock_warehouse.pack_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.pack_type_id IS 'Pack Type';


--
-- Name: COLUMN stock_warehouse.wh_output_stock_loc_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.wh_output_stock_loc_id IS 'Output Location';


--
-- Name: COLUMN stock_warehouse.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_warehouse.delivery_route_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.delivery_route_id IS 'Delivery Route';


--
-- Name: COLUMN stock_warehouse.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.name IS 'Warehouse Name';


--
-- Name: COLUMN stock_warehouse.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_warehouse.in_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.in_type_id IS 'In Type';


--
-- Name: COLUMN stock_warehouse.out_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.out_type_id IS 'Out Type';


--
-- Name: COLUMN stock_warehouse.int_type_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.int_type_id IS 'Internal Type';


--
-- Name: COLUMN stock_warehouse.buy_pull_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.buy_pull_id IS 'BUY rule';


--
-- Name: COLUMN stock_warehouse.buy_to_resupply; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.buy_to_resupply IS 'Purchase to resupply this warehouse';


--
-- Name: COLUMN stock_warehouse.manufacture_pull_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.manufacture_pull_id IS 'Manufacture Rule';


--
-- Name: COLUMN stock_warehouse.manufacture_to_resupply; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse.manufacture_to_resupply IS 'Manufacture in this Warehouse';


--
-- Name: stock_warehouse_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_warehouse_id_seq OWNER TO odoo;

--
-- Name: stock_warehouse_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_warehouse_id_seq OWNED BY stock_warehouse.id;


--
-- Name: stock_warehouse_orderpoint; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_warehouse_orderpoint (
    id integer NOT NULL,
    product_max_qty numeric NOT NULL,
    create_uid integer,
    qty_multiple numeric NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    location_id integer NOT NULL,
    company_id integer NOT NULL,
    write_uid integer,
    write_date timestamp without time zone,
    logic character varying NOT NULL,
    active boolean,
    warehouse_id integer NOT NULL,
    product_min_qty numeric NOT NULL,
    group_id integer,
    product_id integer NOT NULL,
    CONSTRAINT stock_warehouse_orderpoint_qty_multiple_check CHECK ((qty_multiple >= (0)::numeric))
);


ALTER TABLE public.stock_warehouse_orderpoint OWNER TO odoo;

--
-- Name: TABLE stock_warehouse_orderpoint; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_warehouse_orderpoint IS 'Minimum Inventory Rule';


--
-- Name: COLUMN stock_warehouse_orderpoint.product_max_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.product_max_qty IS 'Maximum Quantity';


--
-- Name: COLUMN stock_warehouse_orderpoint.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.create_uid IS 'Created by';


--
-- Name: COLUMN stock_warehouse_orderpoint.qty_multiple; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.qty_multiple IS 'Qty Multiple';


--
-- Name: COLUMN stock_warehouse_orderpoint.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.create_date IS 'Created on';


--
-- Name: COLUMN stock_warehouse_orderpoint.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.name IS 'Name';


--
-- Name: COLUMN stock_warehouse_orderpoint.location_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.location_id IS 'Location';


--
-- Name: COLUMN stock_warehouse_orderpoint.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.company_id IS 'Company';


--
-- Name: COLUMN stock_warehouse_orderpoint.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.write_uid IS 'Last Updated by';


--
-- Name: COLUMN stock_warehouse_orderpoint.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.write_date IS 'Last Updated on';


--
-- Name: COLUMN stock_warehouse_orderpoint.logic; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.logic IS 'Reordering Mode';


--
-- Name: COLUMN stock_warehouse_orderpoint.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.active IS 'Active';


--
-- Name: COLUMN stock_warehouse_orderpoint.warehouse_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.warehouse_id IS 'Warehouse';


--
-- Name: COLUMN stock_warehouse_orderpoint.product_min_qty; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.product_min_qty IS 'Minimum Quantity';


--
-- Name: COLUMN stock_warehouse_orderpoint.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.group_id IS 'Procurement Group';


--
-- Name: COLUMN stock_warehouse_orderpoint.product_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN stock_warehouse_orderpoint.product_id IS 'Product';


--
-- Name: stock_warehouse_orderpoint_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE stock_warehouse_orderpoint_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_warehouse_orderpoint_id_seq OWNER TO odoo;

--
-- Name: stock_warehouse_orderpoint_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE stock_warehouse_orderpoint_id_seq OWNED BY stock_warehouse_orderpoint.id;


--
-- Name: stock_wh_resupply_table; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE stock_wh_resupply_table (
    supplied_wh_id integer NOT NULL,
    supplier_wh_id integer NOT NULL
);


ALTER TABLE public.stock_wh_resupply_table OWNER TO odoo;

--
-- Name: TABLE stock_wh_resupply_table; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE stock_wh_resupply_table IS 'RELATION BETWEEN stock_warehouse AND stock_warehouse';


--
-- Name: subscription_document; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE subscription_document (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    active boolean,
    model integer NOT NULL,
    write_date timestamp without time zone
);


ALTER TABLE public.subscription_document OWNER TO odoo;

--
-- Name: TABLE subscription_document; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE subscription_document IS 'Subscription Document';


--
-- Name: COLUMN subscription_document.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.create_uid IS 'Created by';


--
-- Name: COLUMN subscription_document.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.create_date IS 'Created on';


--
-- Name: COLUMN subscription_document.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.name IS 'Name';


--
-- Name: COLUMN subscription_document.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.write_uid IS 'Last Updated by';


--
-- Name: COLUMN subscription_document.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.active IS 'Active';


--
-- Name: COLUMN subscription_document.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.model IS 'Object';


--
-- Name: COLUMN subscription_document.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document.write_date IS 'Last Updated on';


--
-- Name: subscription_document_fields; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE subscription_document_fields (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    value character varying(40),
    write_uid integer,
    field integer NOT NULL,
    write_date timestamp without time zone,
    document_id integer
);


ALTER TABLE public.subscription_document_fields OWNER TO odoo;

--
-- Name: TABLE subscription_document_fields; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE subscription_document_fields IS 'Subscription Document Fields';


--
-- Name: COLUMN subscription_document_fields.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.create_uid IS 'Created by';


--
-- Name: COLUMN subscription_document_fields.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.create_date IS 'Created on';


--
-- Name: COLUMN subscription_document_fields.value; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.value IS 'Default Value';


--
-- Name: COLUMN subscription_document_fields.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.write_uid IS 'Last Updated by';


--
-- Name: COLUMN subscription_document_fields.field; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.field IS 'Field';


--
-- Name: COLUMN subscription_document_fields.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.write_date IS 'Last Updated on';


--
-- Name: COLUMN subscription_document_fields.document_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_document_fields.document_id IS 'Subscription Document';


--
-- Name: subscription_document_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE subscription_document_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.subscription_document_fields_id_seq OWNER TO odoo;

--
-- Name: subscription_document_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE subscription_document_fields_id_seq OWNED BY subscription_document_fields.id;


--
-- Name: subscription_document_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE subscription_document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.subscription_document_id_seq OWNER TO odoo;

--
-- Name: subscription_document_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE subscription_document_id_seq OWNED BY subscription_document.id;


--
-- Name: subscription_subscription; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE subscription_subscription (
    id integer NOT NULL,
    create_uid integer,
    cron_id integer,
    user_id integer NOT NULL,
    name character varying NOT NULL,
    date_init timestamp without time zone,
    notes text,
    interval_type character varying,
    write_uid integer,
    note text,
    exec_init integer,
    state character varying,
    write_date timestamp without time zone,
    doc_source character varying(128) NOT NULL,
    create_date timestamp without time zone,
    interval_number integer,
    partner_id integer,
    active boolean
);


ALTER TABLE public.subscription_subscription OWNER TO odoo;

--
-- Name: TABLE subscription_subscription; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE subscription_subscription IS 'Subscription';


--
-- Name: COLUMN subscription_subscription.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.create_uid IS 'Created by';


--
-- Name: COLUMN subscription_subscription.cron_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.cron_id IS 'Cron Job';


--
-- Name: COLUMN subscription_subscription.user_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.user_id IS 'User';


--
-- Name: COLUMN subscription_subscription.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.name IS 'Name';


--
-- Name: COLUMN subscription_subscription.date_init; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.date_init IS 'First Date';


--
-- Name: COLUMN subscription_subscription.notes; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.notes IS 'Internal Notes';


--
-- Name: COLUMN subscription_subscription.interval_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.interval_type IS 'Interval Unit';


--
-- Name: COLUMN subscription_subscription.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.write_uid IS 'Last Updated by';


--
-- Name: COLUMN subscription_subscription.note; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.note IS 'Notes';


--
-- Name: COLUMN subscription_subscription.exec_init; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.exec_init IS 'Number of documents';


--
-- Name: COLUMN subscription_subscription.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.state IS 'Status';


--
-- Name: COLUMN subscription_subscription.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.write_date IS 'Last Updated on';


--
-- Name: COLUMN subscription_subscription.doc_source; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.doc_source IS 'Source Document';


--
-- Name: COLUMN subscription_subscription.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.create_date IS 'Created on';


--
-- Name: COLUMN subscription_subscription.interval_number; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.interval_number IS 'Interval Qty';


--
-- Name: COLUMN subscription_subscription.partner_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.partner_id IS 'Partner';


--
-- Name: COLUMN subscription_subscription.active; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription.active IS 'Active';


--
-- Name: subscription_subscription_history; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE subscription_subscription_history (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    date timestamp without time zone,
    subscription_id integer,
    document_id character varying(128) NOT NULL
);


ALTER TABLE public.subscription_subscription_history OWNER TO odoo;

--
-- Name: TABLE subscription_subscription_history; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE subscription_subscription_history IS 'Subscription history';


--
-- Name: COLUMN subscription_subscription_history.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.create_uid IS 'Created by';


--
-- Name: COLUMN subscription_subscription_history.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.create_date IS 'Created on';


--
-- Name: COLUMN subscription_subscription_history.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.write_uid IS 'Last Updated by';


--
-- Name: COLUMN subscription_subscription_history.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.write_date IS 'Last Updated on';


--
-- Name: COLUMN subscription_subscription_history.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.date IS 'Date';


--
-- Name: COLUMN subscription_subscription_history.subscription_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.subscription_id IS 'Subscription';


--
-- Name: COLUMN subscription_subscription_history.document_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN subscription_subscription_history.document_id IS 'Source Document';


--
-- Name: subscription_subscription_history_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE subscription_subscription_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.subscription_subscription_history_id_seq OWNER TO odoo;

--
-- Name: subscription_subscription_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE subscription_subscription_history_id_seq OWNED BY subscription_subscription_history.id;


--
-- Name: subscription_subscription_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE subscription_subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.subscription_subscription_id_seq OWNER TO odoo;

--
-- Name: subscription_subscription_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE subscription_subscription_id_seq OWNED BY subscription_subscription.id;


--
-- Name: temp_range_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE temp_range_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.temp_range_id_seq OWNER TO odoo;

--
-- Name: temp_range_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE temp_range_id_seq OWNED BY temp_range.id;


--
-- Name: validate_account_move; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE validate_account_move (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.validate_account_move OWNER TO odoo;

--
-- Name: TABLE validate_account_move; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE validate_account_move IS 'Validate Account Move';


--
-- Name: COLUMN validate_account_move.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move.create_uid IS 'Created by';


--
-- Name: COLUMN validate_account_move.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move.create_date IS 'Created on';


--
-- Name: COLUMN validate_account_move.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move.write_uid IS 'Last Updated by';


--
-- Name: COLUMN validate_account_move.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move.write_date IS 'Last Updated on';


--
-- Name: validate_account_move_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE validate_account_move_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.validate_account_move_id_seq OWNER TO odoo;

--
-- Name: validate_account_move_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE validate_account_move_id_seq OWNED BY validate_account_move.id;


--
-- Name: validate_account_move_lines; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE validate_account_move_lines (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.validate_account_move_lines OWNER TO odoo;

--
-- Name: TABLE validate_account_move_lines; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE validate_account_move_lines IS 'Validate Account Move Lines';


--
-- Name: COLUMN validate_account_move_lines.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move_lines.create_uid IS 'Created by';


--
-- Name: COLUMN validate_account_move_lines.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move_lines.create_date IS 'Created on';


--
-- Name: COLUMN validate_account_move_lines.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move_lines.write_date IS 'Last Updated on';


--
-- Name: COLUMN validate_account_move_lines.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN validate_account_move_lines.write_uid IS 'Last Updated by';


--
-- Name: validate_account_move_lines_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE validate_account_move_lines_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.validate_account_move_lines_id_seq OWNER TO odoo;

--
-- Name: validate_account_move_lines_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE validate_account_move_lines_id_seq OWNED BY validate_account_move_lines.id;


--
-- Name: view_cjpl_user_name; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_user_name AS
 SELECT res_users.id,
    res_users.partner_id,
    res_users.active,
    res_users.login,
    res_partner.name,
    res_users.login_date,
    res_users.x_designation
   FROM (res_users
     JOIN res_partner ON ((res_users.partner_id = res_partner.id)));


ALTER TABLE public.view_cjpl_user_name OWNER TO postgres;

--
-- Name: view_cjpl_contract_basic; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_contract_basic AS
 SELECT account_analytic_account.name AS contract_number,
    account_analytic_account.id,
    account_analytic_account.code,
    account_analytic_account.state,
    account_analytic_account.type,
    account_analytic_account.date,
    res_partner.display_name AS partner_name,
    view_cjpl_user_name.name AS salesperson,
    account_journal.name AS sale_journal,
    account_analytic_account.x_kind_attn AS kind_attn,
    account_analytic_account.x_po_ref AS po_ref,
    account_analytic_account.recurring_invoices,
    account_analytic_account.recurring_next_date
   FROM account_analytic_account,
    res_partner,
    view_cjpl_user_name,
    account_journal
  WHERE (((account_analytic_account.partner_id = res_partner.id) AND (account_analytic_account.user_id = view_cjpl_user_name.id)) AND (account_journal.id = account_analytic_account.journal_id));


ALTER TABLE public.view_cjpl_contract_basic OWNER TO odoo;

--
-- Name: view_cjpl_invoice_list; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_invoice_list AS
 SELECT account_invoice.number AS invoice_number,
    account_invoice.date_invoice,
    account_invoice.amount_untaxed,
    account_invoice.amount_tax,
    account_invoice.amount_total,
    date(account_invoice.x_bill_period_from) AS bill_period_from,
    date(account_invoice.x_bill_period_to) AS bill_period_to,
    account_invoice.x_po_ref AS po_ref,
    res_partner.name AS customer,
    res_partner.x_core_code AS core_code,
    account_invoice.journal_id
   FROM (account_invoice
     JOIN res_partner ON ((account_invoice.partner_id = res_partner.id)))
  WHERE (((account_invoice.state)::text <> 'draft'::text) AND ((account_invoice.state)::text <> 'cancel'::text))
  ORDER BY account_invoice.journal_id, account_invoice.date_invoice, account_invoice.number;


ALTER TABLE public.view_cjpl_invoice_list OWNER TO postgres;

--
-- Name: view_cjpl_xxx_partner_is_a_company; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_xxx_partner_is_a_company AS
 SELECT a.id,
    a.name AS company_partner_name,
    a.name AS company_name,
    a.x_core_code,
    b.name AS company_state,
    a.parent_id,
    a.is_company
   FROM (res_partner a
     LEFT JOIN res_country_state b ON ((a.state_id = b.id)))
  WHERE a.is_company;


ALTER TABLE public.view_cjpl_xxx_partner_is_a_company OWNER TO odoo;

--
-- Name: view_cjpl_xxx_partner_is_not_company_but_has_parent; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_xxx_partner_is_not_company_but_has_parent AS
 SELECT a.id,
    a.name AS company_partner_name,
    b.company_name,
    b.x_core_code,
    b.company_state,
    a.parent_id,
    a.is_company
   FROM (res_partner a
     LEFT JOIN view_cjpl_xxx_partner_is_a_company b ON ((a.parent_id = b.id)))
  WHERE ((NOT a.is_company) AND (a.parent_id IS NOT NULL));


ALTER TABLE public.view_cjpl_xxx_partner_is_not_company_but_has_parent OWNER TO odoo;

--
-- Name: view_cjpl_xxx_partner_is_not_company_with_no_parent; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_xxx_partner_is_not_company_with_no_parent AS
 SELECT a.id,
    a.name AS company_partner_name,
    a.name AS company_name,
    a.x_core_code,
    b.name AS company_state,
    a.parent_id,
    a.is_company
   FROM (res_partner a
     LEFT JOIN res_country_state b ON ((a.state_id = b.id)))
  WHERE ((NOT a.is_company) AND (a.parent_id IS NULL));


ALTER TABLE public.view_cjpl_xxx_partner_is_not_company_with_no_parent OWNER TO odoo;

--
-- Name: view_cjpl_partner_all_companies; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_partner_all_companies AS
 SELECT a.id,
    a.company_partner_name,
    a.company_name,
    a.x_core_code,
    a.company_state,
    a.parent_id,
    a.is_company
   FROM view_cjpl_xxx_partner_is_a_company a
UNION
 SELECT b.id,
    b.company_partner_name,
    b.company_name,
    b.x_core_code,
    b.company_state,
    b.parent_id,
    b.is_company
   FROM view_cjpl_xxx_partner_is_not_company_but_has_parent b
UNION
 SELECT c.id,
    c.company_partner_name,
    c.company_name,
    c.x_core_code,
    c.company_state,
    c.parent_id,
    c.is_company
   FROM view_cjpl_xxx_partner_is_not_company_with_no_parent c;


ALTER TABLE public.view_cjpl_partner_all_companies OWNER TO odoo;

--
-- Name: view_cjpl_invoice_list_new; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_invoice_list_new AS
 SELECT a.number AS invoice_number,
    a.date_invoice,
    a.amount_untaxed,
    a.amount_tax,
    a.amount_total,
    date(a.x_bill_period_from) AS bill_period_from,
    date(a.x_bill_period_to) AS bill_period_to,
    a.x_po_ref AS po_ref,
    b.company_name AS customer,
    b.x_core_code AS core_code,
    a.journal_id
   FROM (account_invoice a
     LEFT JOIN view_cjpl_partner_all_companies b ON ((a.partner_id = b.id)))
  WHERE (((a.state)::text <> 'draft'::text) AND ((a.state)::text <> 'cancel'::text))
  ORDER BY a.journal_id, a.date_invoice, a.number;


ALTER TABLE public.view_cjpl_invoice_list_new OWNER TO postgres;

--
-- Name: view_cjpl_xxx_contract_to_invoice_sale_typology; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_xxx_contract_to_invoice_sale_typology AS
 SELECT date(sale_order.date_order) AS date_order,
    sale_order.name AS so_number,
    sale_order.id AS so_id,
    account_invoice.number AS invoice_number,
    account_invoice.id AS invoice_id,
    account_invoice.date_invoice,
    account_analytic_account.name AS contract_number,
    account_invoice.state AS invoice_status,
    account_journal.name AS journal_name,
    account_invoice.contract_id,
        CASE
            WHEN (sale_order.name IS NULL) THEN 'Rental'::character varying
            ELSE sale_order_type.name
        END AS sale_type,
        CASE
            WHEN (sale_order.name IS NULL) THEN quote_literal('Direct Contract'::text)
            ELSE quote_literal('Order Contract'::text)
        END AS invoice_type
   FROM ((((account_analytic_account
     JOIN account_invoice ON ((account_invoice.contract_id = account_analytic_account.id)))
     LEFT JOIN sale_order ON ((sale_order.project_id = account_analytic_account.id)))
     LEFT JOIN account_journal ON ((account_invoice.journal_id = account_journal.id)))
     LEFT JOIN sale_order_type ON ((sale_order.type_id = sale_order_type.id)));


ALTER TABLE public.view_cjpl_xxx_contract_to_invoice_sale_typology OWNER TO postgres;

--
-- Name: view_cjpl_xxx_direct_invoice_sale_typology; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_xxx_direct_invoice_sale_typology AS
 SELECT NULL::date AS date_order,
    NULL::character varying AS so_number,
    NULL::integer AS so_id,
    account_invoice.number AS invoice_number,
    account_invoice.id AS invoice_id,
    account_invoice.date_invoice,
    NULL::integer AS contract_id,
    NULL::character varying AS contract_number,
    account_invoice.state AS invoice_status,
    account_journal.name AS journal_name,
    NULL::character varying AS sale_type,
    quote_literal('Direct Sale'::text) AS invoice_type
   FROM (account_invoice
     JOIN account_journal ON ((account_invoice.journal_id = account_journal.id)))
  WHERE ((account_invoice.contract_id IS NULL) AND (NOT (account_invoice.id IN ( SELECT sale_order_invoice_rel.invoice_id
           FROM sale_order_invoice_rel))));


ALTER TABLE public.view_cjpl_xxx_direct_invoice_sale_typology OWNER TO postgres;

--
-- Name: view_cjpl_xxx_order_to_invoice_sale_typology; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_xxx_order_to_invoice_sale_typology AS
 SELECT date(sale_order.date_order) AS date_order,
    sale_order.name AS so_number,
    sale_order.id AS so_id,
    account_invoice.number AS invoice_number,
    account_invoice.id AS invoice_id,
    account_invoice.date_invoice,
    NULL::integer AS contract_id,
    NULL::character varying AS contract_number,
    account_invoice.state AS invoice_status,
    account_journal.name AS journal_name,
    sale_order_type.name AS sale_type,
    quote_literal('Sale Order'::text) AS invoice_type
   FROM ((((sale_order
     JOIN sale_order_invoice_rel ON ((sale_order_invoice_rel.order_id = sale_order.id)))
     JOIN account_invoice ON ((sale_order_invoice_rel.invoice_id = account_invoice.id)))
     LEFT JOIN account_journal ON ((account_invoice.journal_id = account_journal.id)))
     JOIN sale_order_type ON ((sale_order.type_id = sale_order_type.id)));


ALTER TABLE public.view_cjpl_xxx_order_to_invoice_sale_typology OWNER TO postgres;

--
-- Name: view_cjpl_invoice_sale_typology; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_invoice_sale_typology AS
 SELECT a.invoice_number,
    a.invoice_id,
    a.date_invoice,
    a.so_number,
    a.so_id,
    a.date_order,
    a.contract_number,
    a.contract_id,
    a.sale_type,
    a.invoice_type,
    a.invoice_status,
    a.journal_name
   FROM view_cjpl_xxx_order_to_invoice_sale_typology a
UNION ALL
 SELECT b.invoice_number,
    b.invoice_id,
    b.date_invoice,
    b.so_number,
    b.so_id,
    b.date_order,
    b.contract_number,
    b.contract_id,
    b.sale_type,
    b.invoice_type,
    b.invoice_status,
    b.journal_name
   FROM view_cjpl_xxx_contract_to_invoice_sale_typology b
UNION ALL
 SELECT c.invoice_number,
    c.invoice_id,
    c.date_invoice,
    c.so_number,
    c.so_id,
    c.date_order,
    c.contract_number,
    c.contract_id,
    c.sale_type,
    c.invoice_type,
    c.invoice_status,
    c.journal_name
   FROM view_cjpl_xxx_direct_invoice_sale_typology c;


ALTER TABLE public.view_cjpl_invoice_sale_typology OWNER TO postgres;

--
-- Name: view_cjpl_opportunity; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_opportunity AS
 SELECT view_cjpl_user_name.name AS salesperson,
    crm_lead.code AS lead_number,
    crm_lead.id AS opportunity_id,
    date(crm_lead.date_closed) AS date_closed,
    date(crm_lead.create_date) AS create_date,
    crm_lead.date_deadline,
    date(crm_lead.date_last_stage_update) AS date_last_stage_update,
    crm_lead.day_close,
    crm_lead.active,
    crm_lead.day_open,
    crm_lead.contact_name,
    crm_lead.city,
    crm_lead.opt_out,
    date(crm_lead.date_open) AS date_open,
    crm_lead.partner_name,
    crm_lead.planned_revenue,
    crm_lead.priority,
    crm_lead.ref,
    lpad(substr((crm_lead.ref)::text, ("position"((crm_lead.ref)::text, ','::text) + 1)), 4, '0'::text) AS so_number,
    ('SO'::text || lpad(substr((crm_lead.ref)::text, ("position"((crm_lead.ref)::text, ','::text) + 1)), 3, '0'::text)) AS so_number_full,
    crm_lead.description,
    crm_lead.street2,
    crm_case_section.name AS team_name,
    crm_lead.phone,
    crm_lead.probability,
    crm_lead.date_action,
    crm_lead.name,
    crm_lead.mobile,
    crm_lead.type,
    crm_lead.street,
    crm_lead.source_id,
    res_country_state.name AS state,
    crm_lead.email_from,
    crm_lead.referred,
    crm_lead.weighted_planned_revenue,
    crm_case_stage.name AS stage
   FROM ((((crm_lead
     JOIN crm_case_stage ON ((crm_lead.stage_id = crm_case_stage.id)))
     JOIN view_cjpl_user_name ON ((crm_lead.user_id = view_cjpl_user_name.id)))
     JOIN res_country_state ON ((crm_lead.state_id = res_country_state.id)))
     JOIN crm_case_section ON ((crm_lead.section_id = crm_case_section.id)))
  WHERE (crm_lead.active = true)
  ORDER BY view_cjpl_user_name.name, crm_case_stage.name;


ALTER TABLE public.view_cjpl_opportunity OWNER TO postgres;

--
-- Name: view_cjpl_order_basic; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_order_basic AS
 SELECT view_cjpl_user_name.name AS salesperson,
    crm_case_section.name AS team_name,
    sale_order.id,
    sale_order.origin,
    ("substring"((sale_order.origin)::text, ("position"((sale_order.origin)::text, ':'::text) + 1)))::integer AS opportunity_id,
    date(sale_order.create_date) AS create_date,
    sale_order.client_order_ref,
    sale_order.name AS so_number,
    date(sale_order.date_order) AS order_date,
    sale_order.state AS so_state,
    sale_order.project_id,
        CASE
            WHEN (sale_order.project_id IS NULL) THEN 'No Contract'::text
            ELSE 'Contract'::text
        END AS contract_status,
    sale_order.amount_tax,
    sale_order.amount_untaxed,
    sale_order.amount_total,
    sale_order.payment_term,
    sale_order.note,
    sale_order.date_confirm,
    sale_order.order_policy,
    sale_order.picking_policy,
    sale_order.shipped,
    sale_order.x_coordinator_approve,
    sale_order.x_road_permit,
    sale_order.margin,
    date(sale_order.x_rental_start_date) AS rental_start_date,
    date(sale_order.x_rental_end_date) AS rental_end_date,
    sale_order.x_minimum_contract_period,
    sale_order.x_recur_inv,
    sale_order_type.name AS order_type,
    sale_order.partner_id,
    res_partner.name AS order_party_name,
    res_partner.street,
    res_partner.city,
    res_partner.display_name
   FROM ((((sale_order
     JOIN sale_order_type ON ((sale_order.type_id = sale_order_type.id)))
     JOIN res_partner ON ((sale_order.partner_id = res_partner.id)))
     JOIN view_cjpl_user_name ON ((sale_order.user_id = view_cjpl_user_name.id)))
     JOIN crm_case_section ON ((sale_order.section_id = crm_case_section.id)))
  ORDER BY view_cjpl_user_name.name, sale_order.date_order, sale_order.name;


ALTER TABLE public.view_cjpl_order_basic OWNER TO postgres;

--
-- Name: view_cjpl_opportunity_sale_order; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_opportunity_sale_order AS
 SELECT a.salesperson,
    a.opportunity_id,
    b.opportunity_id AS order_opportunity_id,
    a.create_date,
    a.contact_name,
    a.partner_name,
    a.team_name,
    a.name,
    a.stage,
    a.planned_revenue,
    b.client_order_ref,
    b.so_number,
    b.order_date,
    b.so_state,
    b.contract_status,
    b.amount_tax,
    b.amount_untaxed,
    b.amount_total,
    b.date_confirm,
    b.rental_start_date,
    b.rental_end_date,
    b.order_type,
    b.order_party_name
   FROM (view_cjpl_opportunity a
     LEFT JOIN view_cjpl_order_basic b ON ((a.opportunity_id = b.opportunity_id)))
  ORDER BY a.salesperson, a.create_date;


ALTER TABLE public.view_cjpl_opportunity_sale_order OWNER TO postgres;

--
-- Name: view_cjpl_sale_orders_invoice_created_no_invoice_number; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_sale_orders_invoice_created_no_invoice_number AS
 SELECT a.salesperson,
    a.team_name,
    a.so_number,
    a.id,
    a.order_date,
    a.order_party_name,
    a.so_state,
    a.contract_status
   FROM view_cjpl_order_basic a
  WHERE (a.id IN ( SELECT b.so_id
           FROM view_cjpl_invoice_sale_typology b
          WHERE ((b.so_id IS NOT NULL) AND (b.invoice_number IS NULL))))
  ORDER BY a.so_number;


ALTER TABLE public.view_cjpl_sale_orders_invoice_created_no_invoice_number OWNER TO postgres;

--
-- Name: view_cjpl_sale_orders_with_no_invoices_created; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_sale_orders_with_no_invoices_created AS
 SELECT a.salesperson,
    a.team_name,
    a.so_number,
    a.id,
    a.order_date,
    a.order_party_name,
    a.so_state,
    a.contract_status
   FROM view_cjpl_order_basic a
  WHERE (NOT (a.id IN ( SELECT b.so_id
           FROM view_cjpl_invoice_sale_typology b
          WHERE (b.so_id IS NOT NULL))))
  ORDER BY a.so_number;


ALTER TABLE public.view_cjpl_sale_orders_with_no_invoices_created OWNER TO postgres;

--
-- Name: view_cjpl_xxx_contract_to_invoice_sale_type; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW view_cjpl_xxx_contract_to_invoice_sale_type AS
 SELECT date(sale_order.date_order) AS date_order,
    sale_order.name AS so_number,
    sale_order.id AS so_id,
    account_invoice.number AS invoice_number,
    account_invoice.id AS invoice_id,
    account_invoice.date_invoice,
    account_analytic_account.name AS contract_number,
    account_invoice.contract_id,
        CASE
            WHEN (sale_order.name IS NULL) THEN 'Rental'::character varying
            ELSE sale_order_type.name
        END AS sale_type,
        CASE
            WHEN (sale_order.name IS NULL) THEN quote_literal('Direct Contract'::text)
            ELSE quote_literal('Order Contract'::text)
        END AS invoice_type
   FROM (((account_analytic_account
     JOIN account_invoice ON ((account_invoice.contract_id = account_analytic_account.id)))
     LEFT JOIN sale_order ON ((sale_order.project_id = account_analytic_account.id)))
     LEFT JOIN sale_order_type ON ((sale_order.type_id = sale_order_type.id)))
  WHERE (account_invoice.number IS NOT NULL);


ALTER TABLE public.view_cjpl_xxx_contract_to_invoice_sale_type OWNER TO postgres;

--
-- Name: view_cjpl_xxx_partner_not_company_no_parent_company; Type: VIEW; Schema: public; Owner: odoo
--

CREATE VIEW view_cjpl_xxx_partner_not_company_no_parent_company AS
 SELECT a.id,
    a.name AS company_partner_name,
    c.name AS company_name,
    a.x_core_code,
    a.parent_id,
    a.is_company
   FROM (res_partner a
     LEFT JOIN res_partner c ON ((a.parent_id = c.id)))
  WHERE (((NOT a.is_company) AND (a.parent_id IS NOT NULL)) AND (NOT (a.parent_id IN ( SELECT b.id
           FROM view_cjpl_xxx_partner_is_a_company b))));


ALTER TABLE public.view_cjpl_xxx_partner_not_company_no_parent_company OWNER TO odoo;

--
-- Name: wizard_ir_model_menu_create; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wizard_ir_model_menu_create (
    id integer NOT NULL,
    menu_id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    write_uid integer,
    write_date timestamp without time zone
);


ALTER TABLE public.wizard_ir_model_menu_create OWNER TO odoo;

--
-- Name: TABLE wizard_ir_model_menu_create; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wizard_ir_model_menu_create IS 'wizard.ir.model.menu.create';


--
-- Name: COLUMN wizard_ir_model_menu_create.menu_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.menu_id IS 'Parent Menu';


--
-- Name: COLUMN wizard_ir_model_menu_create.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.create_uid IS 'Created by';


--
-- Name: COLUMN wizard_ir_model_menu_create.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.create_date IS 'Created on';


--
-- Name: COLUMN wizard_ir_model_menu_create.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.name IS 'Menu Name';


--
-- Name: COLUMN wizard_ir_model_menu_create.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.write_uid IS 'Last Updated by';


--
-- Name: COLUMN wizard_ir_model_menu_create.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_ir_model_menu_create.write_date IS 'Last Updated on';


--
-- Name: wizard_ir_model_menu_create_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wizard_ir_model_menu_create_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wizard_ir_model_menu_create_id_seq OWNER TO odoo;

--
-- Name: wizard_ir_model_menu_create_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wizard_ir_model_menu_create_id_seq OWNED BY wizard_ir_model_menu_create.id;


--
-- Name: wizard_multi_charts_accounts; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wizard_multi_charts_accounts (
    id integer NOT NULL,
    only_one_chart_template boolean,
    purchase_tax_rate double precision,
    complete_tax_set boolean,
    code_digits integer NOT NULL,
    create_date timestamp without time zone,
    create_uid integer,
    chart_template_id integer NOT NULL,
    sale_tax integer,
    company_id integer NOT NULL,
    purchase_tax integer,
    currency_id integer,
    write_date timestamp without time zone,
    sale_tax_rate double precision,
    write_uid integer
);


ALTER TABLE public.wizard_multi_charts_accounts OWNER TO odoo;

--
-- Name: TABLE wizard_multi_charts_accounts; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wizard_multi_charts_accounts IS 'wizard.multi.charts.accounts';


--
-- Name: COLUMN wizard_multi_charts_accounts.only_one_chart_template; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.only_one_chart_template IS 'Only One Chart Template Available';


--
-- Name: COLUMN wizard_multi_charts_accounts.purchase_tax_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.purchase_tax_rate IS 'Purchase Tax(%)';


--
-- Name: COLUMN wizard_multi_charts_accounts.complete_tax_set; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.complete_tax_set IS 'Complete Set of Taxes';


--
-- Name: COLUMN wizard_multi_charts_accounts.code_digits; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.code_digits IS '# of Digits';


--
-- Name: COLUMN wizard_multi_charts_accounts.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.create_date IS 'Created on';


--
-- Name: COLUMN wizard_multi_charts_accounts.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.create_uid IS 'Created by';


--
-- Name: COLUMN wizard_multi_charts_accounts.chart_template_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.chart_template_id IS 'Chart Template';


--
-- Name: COLUMN wizard_multi_charts_accounts.sale_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.sale_tax IS 'Default Sale Tax';


--
-- Name: COLUMN wizard_multi_charts_accounts.company_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.company_id IS 'Company';


--
-- Name: COLUMN wizard_multi_charts_accounts.purchase_tax; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.purchase_tax IS 'Default Purchase Tax';


--
-- Name: COLUMN wizard_multi_charts_accounts.currency_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.currency_id IS 'Currency';


--
-- Name: COLUMN wizard_multi_charts_accounts.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.write_date IS 'Last Updated on';


--
-- Name: COLUMN wizard_multi_charts_accounts.sale_tax_rate; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.sale_tax_rate IS 'Sales Tax(%)';


--
-- Name: COLUMN wizard_multi_charts_accounts.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_multi_charts_accounts.write_uid IS 'Last Updated by';


--
-- Name: wizard_multi_charts_accounts_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wizard_multi_charts_accounts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wizard_multi_charts_accounts_id_seq OWNER TO odoo;

--
-- Name: wizard_multi_charts_accounts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wizard_multi_charts_accounts_id_seq OWNED BY wizard_multi_charts_accounts.id;


--
-- Name: wizard_validate_account_move_journal; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wizard_validate_account_move_journal (
    wizard_id integer NOT NULL,
    journal_id integer NOT NULL
);


ALTER TABLE public.wizard_validate_account_move_journal OWNER TO odoo;

--
-- Name: TABLE wizard_validate_account_move_journal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wizard_validate_account_move_journal IS 'RELATION BETWEEN validate_account_move AND account_journal';


--
-- Name: wizard_validate_account_move_period; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wizard_validate_account_move_period (
    wizard_id integer NOT NULL,
    period_id integer NOT NULL
);


ALTER TABLE public.wizard_validate_account_move_period OWNER TO odoo;

--
-- Name: TABLE wizard_validate_account_move_period; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wizard_validate_account_move_period IS 'RELATION BETWEEN validate_account_move AND account_period';


--
-- Name: wizard_valuation_history; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wizard_valuation_history (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_uid integer,
    write_date timestamp without time zone,
    date timestamp without time zone NOT NULL,
    choose_date boolean
);


ALTER TABLE public.wizard_valuation_history OWNER TO odoo;

--
-- Name: TABLE wizard_valuation_history; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wizard_valuation_history IS 'Wizard that opens the stock valuation history table';


--
-- Name: COLUMN wizard_valuation_history.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.create_uid IS 'Created by';


--
-- Name: COLUMN wizard_valuation_history.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.create_date IS 'Created on';


--
-- Name: COLUMN wizard_valuation_history.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.write_uid IS 'Last Updated by';


--
-- Name: COLUMN wizard_valuation_history.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.write_date IS 'Last Updated on';


--
-- Name: COLUMN wizard_valuation_history.date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.date IS 'Date';


--
-- Name: COLUMN wizard_valuation_history.choose_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wizard_valuation_history.choose_date IS 'Choose a Particular Date';


--
-- Name: wizard_valuation_history_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wizard_valuation_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wizard_valuation_history_id_seq OWNER TO odoo;

--
-- Name: wizard_valuation_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wizard_valuation_history_id_seq OWNED BY wizard_valuation_history.id;


--
-- Name: wkf; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf (
    id integer NOT NULL,
    name character varying NOT NULL,
    osv character varying NOT NULL,
    on_create boolean DEFAULT false,
    create_date timestamp without time zone,
    create_uid integer,
    write_date timestamp without time zone,
    write_uid integer
);


ALTER TABLE public.wkf OWNER TO odoo;

--
-- Name: COLUMN wkf.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf.create_date IS 'Created on';


--
-- Name: COLUMN wkf.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf.create_uid IS 'Created by';


--
-- Name: COLUMN wkf.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf.write_date IS 'Last Updated on';


--
-- Name: COLUMN wkf.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf.write_uid IS 'Last Updated by';


--
-- Name: wkf_activity; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_activity (
    id integer NOT NULL,
    create_uid integer,
    kind character varying NOT NULL,
    create_date timestamp without time zone,
    name character varying NOT NULL,
    join_mode character varying(3) NOT NULL,
    flow_stop boolean,
    write_uid integer,
    subflow_id integer,
    split_mode character varying(3) NOT NULL,
    write_date timestamp without time zone,
    action text,
    wkf_id integer NOT NULL,
    signal_send character varying,
    flow_start boolean,
    action_id integer
);


ALTER TABLE public.wkf_activity OWNER TO odoo;

--
-- Name: TABLE wkf_activity; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_activity IS 'workflow.activity';


--
-- Name: COLUMN wkf_activity.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.create_uid IS 'Created by';


--
-- Name: COLUMN wkf_activity.kind; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.kind IS 'Kind';


--
-- Name: COLUMN wkf_activity.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.create_date IS 'Created on';


--
-- Name: COLUMN wkf_activity.name; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.name IS 'Name';


--
-- Name: COLUMN wkf_activity.join_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.join_mode IS 'Join Mode';


--
-- Name: COLUMN wkf_activity.flow_stop; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.flow_stop IS 'Flow Stop';


--
-- Name: COLUMN wkf_activity.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.write_uid IS 'Last Updated by';


--
-- Name: COLUMN wkf_activity.subflow_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.subflow_id IS 'Subflow';


--
-- Name: COLUMN wkf_activity.split_mode; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.split_mode IS 'Split Mode';


--
-- Name: COLUMN wkf_activity.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.write_date IS 'Last Updated on';


--
-- Name: COLUMN wkf_activity.action; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.action IS 'Python Action';


--
-- Name: COLUMN wkf_activity.wkf_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.wkf_id IS 'Workflow';


--
-- Name: COLUMN wkf_activity.signal_send; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.signal_send IS 'Signal (subflow.*)';


--
-- Name: COLUMN wkf_activity.flow_start; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.flow_start IS 'Flow Start';


--
-- Name: COLUMN wkf_activity.action_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_activity.action_id IS 'Server Action';


--
-- Name: wkf_activity_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_activity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_activity_id_seq OWNER TO odoo;

--
-- Name: wkf_activity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_activity_id_seq OWNED BY wkf_activity.id;


--
-- Name: wkf_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_id_seq OWNER TO odoo;

--
-- Name: wkf_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_id_seq OWNED BY wkf.id;


--
-- Name: wkf_instance; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_instance (
    id integer NOT NULL,
    res_type character varying,
    uid integer,
    wkf_id integer,
    state character varying,
    res_id integer
);


ALTER TABLE public.wkf_instance OWNER TO odoo;

--
-- Name: TABLE wkf_instance; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_instance IS 'workflow.instance';


--
-- Name: COLUMN wkf_instance.res_type; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_instance.res_type IS 'Resource Object';


--
-- Name: COLUMN wkf_instance.uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_instance.uid IS 'User';


--
-- Name: COLUMN wkf_instance.wkf_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_instance.wkf_id IS 'Workflow';


--
-- Name: COLUMN wkf_instance.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_instance.state IS 'Status';


--
-- Name: COLUMN wkf_instance.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_instance.res_id IS 'Resource ID';


--
-- Name: wkf_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_instance_id_seq OWNER TO odoo;

--
-- Name: wkf_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_instance_id_seq OWNED BY wkf_instance.id;


--
-- Name: wkf_transition; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_transition (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    trigger_model character varying,
    signal character varying,
    sequence integer,
    write_uid integer,
    act_from integer NOT NULL,
    condition character varying NOT NULL,
    write_date timestamp without time zone,
    trigger_expr_id character varying,
    group_id integer,
    act_to integer NOT NULL
);


ALTER TABLE public.wkf_transition OWNER TO odoo;

--
-- Name: TABLE wkf_transition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_transition IS 'workflow.transition';


--
-- Name: COLUMN wkf_transition.create_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.create_uid IS 'Created by';


--
-- Name: COLUMN wkf_transition.create_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.create_date IS 'Created on';


--
-- Name: COLUMN wkf_transition.trigger_model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.trigger_model IS 'Trigger Object';


--
-- Name: COLUMN wkf_transition.signal; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.signal IS 'Signal (Button Name)';


--
-- Name: COLUMN wkf_transition.sequence; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.sequence IS 'Sequence';


--
-- Name: COLUMN wkf_transition.write_uid; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.write_uid IS 'Last Updated by';


--
-- Name: COLUMN wkf_transition.act_from; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.act_from IS 'Source Activity';


--
-- Name: COLUMN wkf_transition.condition; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.condition IS 'Condition';


--
-- Name: COLUMN wkf_transition.write_date; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.write_date IS 'Last Updated on';


--
-- Name: COLUMN wkf_transition.trigger_expr_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.trigger_expr_id IS 'Trigger Expression';


--
-- Name: COLUMN wkf_transition.group_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.group_id IS 'Group Required';


--
-- Name: COLUMN wkf_transition.act_to; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_transition.act_to IS 'Destination Activity';


--
-- Name: wkf_transition_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_transition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_transition_id_seq OWNER TO odoo;

--
-- Name: wkf_transition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_transition_id_seq OWNED BY wkf_transition.id;


--
-- Name: wkf_triggers; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_triggers (
    id integer NOT NULL,
    instance_id integer,
    workitem_id integer NOT NULL,
    model character varying,
    res_id integer
);


ALTER TABLE public.wkf_triggers OWNER TO odoo;

--
-- Name: TABLE wkf_triggers; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_triggers IS 'workflow.triggers';


--
-- Name: COLUMN wkf_triggers.instance_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_triggers.instance_id IS 'Destination Instance';


--
-- Name: COLUMN wkf_triggers.workitem_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_triggers.workitem_id IS 'Workitem';


--
-- Name: COLUMN wkf_triggers.model; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_triggers.model IS 'Object';


--
-- Name: COLUMN wkf_triggers.res_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_triggers.res_id IS 'Resource ID';


--
-- Name: wkf_triggers_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_triggers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_triggers_id_seq OWNER TO odoo;

--
-- Name: wkf_triggers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_triggers_id_seq OWNED BY wkf_triggers.id;


--
-- Name: wkf_witm_trans; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_witm_trans (
    inst_id integer NOT NULL,
    trans_id integer NOT NULL
);


ALTER TABLE public.wkf_witm_trans OWNER TO odoo;

--
-- Name: TABLE wkf_witm_trans; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_witm_trans IS 'RELATION BETWEEN wkf_instance AND wkf_transition';


--
-- Name: wkf_workitem; Type: TABLE; Schema: public; Owner: odoo; Tablespace: 
--

CREATE TABLE wkf_workitem (
    id integer NOT NULL,
    act_id integer NOT NULL,
    inst_id integer NOT NULL,
    subflow_id integer,
    state character varying
);


ALTER TABLE public.wkf_workitem OWNER TO odoo;

--
-- Name: TABLE wkf_workitem; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON TABLE wkf_workitem IS 'workflow.workitem';


--
-- Name: COLUMN wkf_workitem.act_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_workitem.act_id IS 'Activity';


--
-- Name: COLUMN wkf_workitem.inst_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_workitem.inst_id IS 'Instance';


--
-- Name: COLUMN wkf_workitem.subflow_id; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_workitem.subflow_id IS 'Subflow';


--
-- Name: COLUMN wkf_workitem.state; Type: COMMENT; Schema: public; Owner: odoo
--

COMMENT ON COLUMN wkf_workitem.state IS 'Status';


--
-- Name: wkf_workitem_id_seq; Type: SEQUENCE; Schema: public; Owner: odoo
--

CREATE SEQUENCE wkf_workitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wkf_workitem_id_seq OWNER TO odoo;

--
-- Name: wkf_workitem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: odoo
--

ALTER SEQUENCE wkf_workitem_id_seq OWNED BY wkf_workitem.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account ALTER COLUMN id SET DEFAULT nextval('account_account_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template ALTER COLUMN id SET DEFAULT nextval('account_account_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_type ALTER COLUMN id SET DEFAULT nextval('account_account_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_addtmpl_wizard ALTER COLUMN id SET DEFAULT nextval('account_addtmpl_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance ALTER COLUMN id SET DEFAULT nextval('account_aged_trial_balance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account ALTER COLUMN id SET DEFAULT nextval('account_analytic_account_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_balance ALTER COLUMN id SET DEFAULT nextval('account_analytic_balance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_chart ALTER COLUMN id SET DEFAULT nextval('account_analytic_chart_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger ALTER COLUMN id SET DEFAULT nextval('account_analytic_cost_ledger_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger_journal_report ALTER COLUMN id SET DEFAULT nextval('account_analytic_cost_ledger_journal_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_inverted_balance ALTER COLUMN id SET DEFAULT nextval('account_analytic_inverted_balance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line ALTER COLUMN id SET DEFAULT nextval('account_analytic_invoice_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal ALTER COLUMN id SET DEFAULT nextval('account_analytic_journal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal_report ALTER COLUMN id SET DEFAULT nextval('account_analytic_journal_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line ALTER COLUMN id SET DEFAULT nextval('account_analytic_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile ALTER COLUMN id SET DEFAULT nextval('account_automatic_reconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report ALTER COLUMN id SET DEFAULT nextval('account_balance_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_accounts_wizard ALTER COLUMN id SET DEFAULT nextval('account_bank_accounts_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement ALTER COLUMN id SET DEFAULT nextval('account_bank_statement_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line ALTER COLUMN id SET DEFAULT nextval('account_bank_statement_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cashbox_line ALTER COLUMN id SET DEFAULT nextval('account_cashbox_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal ALTER COLUMN id SET DEFAULT nextval('account_central_journal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_change_currency ALTER COLUMN id SET DEFAULT nextval('account_change_currency_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart ALTER COLUMN id SET DEFAULT nextval('account_chart_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template ALTER COLUMN id SET DEFAULT nextval('account_chart_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report ALTER COLUMN id SET DEFAULT nextval('account_common_account_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report ALTER COLUMN id SET DEFAULT nextval('account_common_journal_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report ALTER COLUMN id SET DEFAULT nextval('account_common_partner_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report ALTER COLUMN id SET DEFAULT nextval('account_common_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings ALTER COLUMN id SET DEFAULT nextval('account_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff ALTER COLUMN id SET DEFAULT nextval('account_cutoff_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line ALTER COLUMN id SET DEFAULT nextval('account_cutoff_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping ALTER COLUMN id SET DEFAULT nextval('account_cutoff_mapping_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line ALTER COLUMN id SET DEFAULT nextval('account_cutoff_tax_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_financial_report ALTER COLUMN id SET DEFAULT nextval('account_financial_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_account_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_account_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_tax_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_tax_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_template ALTER COLUMN id SET DEFAULT nextval('account_fiscal_position_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear ALTER COLUMN id SET DEFAULT nextval('account_fiscalyear_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close ALTER COLUMN id SET DEFAULT nextval('account_fiscalyear_close_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close_state ALTER COLUMN id SET DEFAULT nextval('account_fiscalyear_close_state_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal ALTER COLUMN id SET DEFAULT nextval('account_general_journal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_installer ALTER COLUMN id SET DEFAULT nextval('account_installer_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice ALTER COLUMN id SET DEFAULT nextval('account_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_cancel ALTER COLUMN id SET DEFAULT nextval('account_invoice_cancel_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_confirm ALTER COLUMN id SET DEFAULT nextval('account_invoice_confirm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line ALTER COLUMN id SET DEFAULT nextval('account_invoice_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_refund ALTER COLUMN id SET DEFAULT nextval('account_invoice_refund_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax ALTER COLUMN id SET DEFAULT nextval('account_invoice_tax_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal ALTER COLUMN id SET DEFAULT nextval('account_journal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_cashbox_line ALTER COLUMN id SET DEFAULT nextval('account_journal_cashbox_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period ALTER COLUMN id SET DEFAULT nextval('account_journal_period_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_select ALTER COLUMN id SET DEFAULT nextval('account_journal_select_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model ALTER COLUMN id SET DEFAULT nextval('account_model_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line ALTER COLUMN id SET DEFAULT nextval('account_model_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move ALTER COLUMN id SET DEFAULT nextval('account_move_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_bank_reconcile ALTER COLUMN id SET DEFAULT nextval('account_move_bank_reconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line ALTER COLUMN id SET DEFAULT nextval('account_move_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile ALTER COLUMN id SET DEFAULT nextval('account_move_line_reconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_select ALTER COLUMN id SET DEFAULT nextval('account_move_line_reconcile_select_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff ALTER COLUMN id SET DEFAULT nextval('account_move_line_reconcile_writeoff_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_unreconcile_select ALTER COLUMN id SET DEFAULT nextval('account_move_line_unreconcile_select_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_reconcile ALTER COLUMN id SET DEFAULT nextval('account_move_reconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_open_closed_fiscalyear ALTER COLUMN id SET DEFAULT nextval('account_open_closed_fiscalyear_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance ALTER COLUMN id SET DEFAULT nextval('account_partner_balance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger ALTER COLUMN id SET DEFAULT nextval('account_partner_ledger_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_reconcile_process ALTER COLUMN id SET DEFAULT nextval('account_partner_reconcile_process_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term ALTER COLUMN id SET DEFAULT nextval('account_payment_term_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term_line ALTER COLUMN id SET DEFAULT nextval('account_payment_term_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period ALTER COLUMN id SET DEFAULT nextval('account_period_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period_close ALTER COLUMN id SET DEFAULT nextval('account_period_close_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal ALTER COLUMN id SET DEFAULT nextval('account_print_journal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger ALTER COLUMN id SET DEFAULT nextval('account_report_general_ledger_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear ALTER COLUMN id SET DEFAULT nextval('account_sequence_fiscalyear_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_state_open ALTER COLUMN id SET DEFAULT nextval('account_state_open_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_from_invoice_lines ALTER COLUMN id SET DEFAULT nextval('account_statement_from_invoice_lines_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template ALTER COLUMN id SET DEFAULT nextval('account_statement_operation_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription ALTER COLUMN id SET DEFAULT nextval('account_subscription_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_generate ALTER COLUMN id SET DEFAULT nextval('account_subscription_generate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_line ALTER COLUMN id SET DEFAULT nextval('account_subscription_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax ALTER COLUMN id SET DEFAULT nextval('account_tax_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_chart ALTER COLUMN id SET DEFAULT nextval('account_tax_chart_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code ALTER COLUMN id SET DEFAULT nextval('account_tax_code_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code_template ALTER COLUMN id SET DEFAULT nextval('account_tax_code_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template ALTER COLUMN id SET DEFAULT nextval('account_tax_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile ALTER COLUMN id SET DEFAULT nextval('account_unreconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile_reconcile ALTER COLUMN id SET DEFAULT nextval('account_unreconcile_reconcile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_use_model ALTER COLUMN id SET DEFAULT nextval('account_use_model_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration ALTER COLUMN id SET DEFAULT nextval('account_vat_declaration_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher ALTER COLUMN id SET DEFAULT nextval('account_voucher_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line ALTER COLUMN id SET DEFAULT nextval('account_voucher_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report ALTER COLUMN id SET DEFAULT nextval('accounting_report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule ALTER COLUMN id SET DEFAULT nextval('base_action_rule_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_lead_test ALTER COLUMN id SET DEFAULT nextval('base_action_rule_lead_test_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_config_settings ALTER COLUMN id SET DEFAULT nextval('base_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_import ALTER COLUMN id SET DEFAULT nextval('base_import_import_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_noreadonly ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_noreadonly_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_readonly ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_readonly_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_required ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_required_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_states ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_states_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_stillreadonly ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_char_stillreadonly_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_m2o_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_related ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_m2o_related_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_m2o_required_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required_related ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_m2o_required_related_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_o2m_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m_child ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_o2m_child_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_preview ALTER COLUMN id SET DEFAULT nextval('base_import_tests_models_preview_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_export ALTER COLUMN id SET DEFAULT nextval('base_language_export_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_import ALTER COLUMN id SET DEFAULT nextval('base_language_import_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_install ALTER COLUMN id SET DEFAULT nextval('base_language_install_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_configuration ALTER COLUMN id SET DEFAULT nextval('base_module_configuration_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_record ALTER COLUMN id SET DEFAULT nextval('base_module_record_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_update ALTER COLUMN id SET DEFAULT nextval('base_module_update_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_upgrade ALTER COLUMN id SET DEFAULT nextval('base_module_upgrade_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard ALTER COLUMN id SET DEFAULT nextval('base_partner_merge_automatic_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_line ALTER COLUMN id SET DEFAULT nextval('base_partner_merge_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_setup_terminology ALTER COLUMN id SET DEFAULT nextval('base_setup_terminology_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_update_translations ALTER COLUMN id SET DEFAULT nextval('base_update_translations_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY board_create ALTER COLUMN id SET DEFAULT nextval('board_create_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY bus_bus ALTER COLUMN id SET DEFAULT nextval('bus_bus_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_alarm ALTER COLUMN id SET DEFAULT nextval('calendar_alarm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_attendee ALTER COLUMN id SET DEFAULT nextval('calendar_attendee_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_contacts ALTER COLUMN id SET DEFAULT nextval('calendar_contacts_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event ALTER COLUMN id SET DEFAULT nextval('calendar_event_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event_type ALTER COLUMN id SET DEFAULT nextval('calendar_event_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_in ALTER COLUMN id SET DEFAULT nextval('cash_box_in_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_out ALTER COLUMN id SET DEFAULT nextval('cash_box_out_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_user ALTER COLUMN id SET DEFAULT nextval('change_password_user_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_wizard ALTER COLUMN id SET DEFAULT nextval('change_password_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_production_qty ALTER COLUMN id SET DEFAULT nextval('change_production_qty_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_categ ALTER COLUMN id SET DEFAULT nextval('crm_case_categ_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section ALTER COLUMN id SET DEFAULT nextval('crm_case_section_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_stage ALTER COLUMN id SET DEFAULT nextval('crm_case_stage_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim ALTER COLUMN id SET DEFAULT nextval('crm_claim_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim_stage ALTER COLUMN id SET DEFAULT nextval('crm_claim_stage_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk ALTER COLUMN id SET DEFAULT nextval('crm_helpdesk_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead ALTER COLUMN id SET DEFAULT nextval('crm_lead_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner ALTER COLUMN id SET DEFAULT nextval('crm_lead2opportunity_partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass ALTER COLUMN id SET DEFAULT nextval('crm_lead2opportunity_partner_mass_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_make_sale ALTER COLUMN id SET DEFAULT nextval('crm_make_sale_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_merge_opportunity ALTER COLUMN id SET DEFAULT nextval('crm_merge_opportunity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_partner_binding ALTER COLUMN id SET DEFAULT nextval('crm_partner_binding_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_payment_mode ALTER COLUMN id SET DEFAULT nextval('crm_payment_mode_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall ALTER COLUMN id SET DEFAULT nextval('crm_phonecall_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall ALTER COLUMN id SET DEFAULT nextval('crm_phonecall2phonecall_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation ALTER COLUMN id SET DEFAULT nextval('crm_segmentation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation_line ALTER COLUMN id SET DEFAULT nextval('crm_segmentation_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_campaign ALTER COLUMN id SET DEFAULT nextval('crm_tracking_campaign_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_medium ALTER COLUMN id SET DEFAULT nextval('crm_tracking_medium_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_source ALTER COLUMN id SET DEFAULT nextval('crm_tracking_source_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY db_backup ALTER COLUMN id SET DEFAULT nextval('db_backup_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision ALTER COLUMN id SET DEFAULT nextval('decimal_precision_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision_test ALTER COLUMN id SET DEFAULT nextval('decimal_precision_test_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_carrier ALTER COLUMN id SET DEFAULT nextval('delivery_carrier_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid ALTER COLUMN id SET DEFAULT nextval('delivery_grid_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_line ALTER COLUMN id SET DEFAULT nextval('delivery_grid_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template ALTER COLUMN id SET DEFAULT nextval('email_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview ALTER COLUMN id SET DEFAULT nextval('email_template_preview_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY export_wizard_ept ALTER COLUMN id SET DEFAULT nextval('export_wizard_ept_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_config_settings ALTER COLUMN id SET DEFAULT nextval('fetchmail_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_server ALTER COLUMN id SET DEFAULT nextval('fetchmail_server_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_action_reason ALTER COLUMN id SET DEFAULT nextval('hr_action_reason_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_analytic_timesheet ALTER COLUMN id SET DEFAULT nextval('hr_analytic_timesheet_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance ALTER COLUMN id SET DEFAULT nextval('hr_attendance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance_error ALTER COLUMN id SET DEFAULT nextval('hr_attendance_error_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_config_settings ALTER COLUMN id SET DEFAULT nextval('hr_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department ALTER COLUMN id SET DEFAULT nextval('hr_department_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee ALTER COLUMN id SET DEFAULT nextval('hr_employee_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee_category ALTER COLUMN id SET DEFAULT nextval('hr_employee_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_job ALTER COLUMN id SET DEFAULT nextval('hr_job_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_in_project ALTER COLUMN id SET DEFAULT nextval('hr_sign_in_project_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_out_project ALTER COLUMN id SET DEFAULT nextval('hr_sign_out_project_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_analytic_profit ALTER COLUMN id SET DEFAULT nextval('hr_timesheet_analytic_profit_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create ALTER COLUMN id SET DEFAULT nextval('hr_timesheet_invoice_create_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create_final ALTER COLUMN id SET DEFAULT nextval('hr_timesheet_invoice_create_final_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_factor ALTER COLUMN id SET DEFAULT nextval('hr_timesheet_invoice_factor_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_message ALTER COLUMN id SET DEFAULT nextval('im_chat_message_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_presence ALTER COLUMN id SET DEFAULT nextval('im_chat_presence_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session ALTER COLUMN id SET DEFAULT nextval('im_chat_session_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session_res_users_rel ALTER COLUMN id SET DEFAULT nextval('im_chat_session_res_users_rel_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY invoice_merge ALTER COLUMN id SET DEFAULT nextval('invoice_merge_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_client ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_report_xml ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_url ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_view ALTER COLUMN id SET DEFAULT nextval('ir_act_window_view_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions_todo ALTER COLUMN id SET DEFAULT nextval('ir_actions_todo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_attachment ALTER COLUMN id SET DEFAULT nextval('ir_attachment_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_config_parameter ALTER COLUMN id SET DEFAULT nextval('ir_config_parameter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_cron ALTER COLUMN id SET DEFAULT nextval('ir_cron_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_default ALTER COLUMN id SET DEFAULT nextval('ir_default_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports ALTER COLUMN id SET DEFAULT nextval('ir_exports_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports_line ALTER COLUMN id SET DEFAULT nextval('ir_exports_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_fields_converter ALTER COLUMN id SET DEFAULT nextval('ir_fields_converter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_filters ALTER COLUMN id SET DEFAULT nextval('ir_filters_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_logging ALTER COLUMN id SET DEFAULT nextval('ir_logging_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_mail_server ALTER COLUMN id SET DEFAULT nextval('ir_mail_server_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model ALTER COLUMN id SET DEFAULT nextval('ir_model_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_access ALTER COLUMN id SET DEFAULT nextval('ir_model_access_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_constraint ALTER COLUMN id SET DEFAULT nextval('ir_model_constraint_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_data ALTER COLUMN id SET DEFAULT nextval('ir_model_data_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields ALTER COLUMN id SET DEFAULT nextval('ir_model_fields_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_relation ALTER COLUMN id SET DEFAULT nextval('ir_model_relation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_category ALTER COLUMN id SET DEFAULT nextval('ir_module_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module ALTER COLUMN id SET DEFAULT nextval('ir_module_module_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module_dependency ALTER COLUMN id SET DEFAULT nextval('ir_module_module_dependency_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_property ALTER COLUMN id SET DEFAULT nextval('ir_property_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_rule ALTER COLUMN id SET DEFAULT nextval('ir_rule_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence ALTER COLUMN id SET DEFAULT nextval('ir_sequence_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence_type ALTER COLUMN id SET DEFAULT nextval('ir_sequence_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_server_object_lines ALTER COLUMN id SET DEFAULT nextval('ir_server_object_lines_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_translation ALTER COLUMN id SET DEFAULT nextval('ir_translation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu ALTER COLUMN id SET DEFAULT nextval('ir_ui_menu_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view ALTER COLUMN id SET DEFAULT nextval('ir_ui_view_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_custom ALTER COLUMN id SET DEFAULT nextval('ir_ui_view_custom_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values ALTER COLUMN id SET DEFAULT nextval('ir_values_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias ALTER COLUMN id SET DEFAULT nextval('mail_alias_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message ALTER COLUMN id SET DEFAULT nextval('mail_compose_message_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_followers ALTER COLUMN id SET DEFAULT nextval('mail_followers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group ALTER COLUMN id SET DEFAULT nextval('mail_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail ALTER COLUMN id SET DEFAULT nextval('mail_mail_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message ALTER COLUMN id SET DEFAULT nextval('mail_message_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_subtype ALTER COLUMN id SET DEFAULT nextval('mail_message_subtype_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_notification ALTER COLUMN id SET DEFAULT nextval('mail_notification_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_wizard_invite ALTER COLUMN id SET DEFAULT nextval('mail_wizard_invite_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement ALTER COLUMN id SET DEFAULT nextval('make_procurement_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom ALTER COLUMN id SET DEFAULT nextval('mrp_bom_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line ALTER COLUMN id SET DEFAULT nextval('mrp_bom_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_config_settings ALTER COLUMN id SET DEFAULT nextval('mrp_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_price ALTER COLUMN id SET DEFAULT nextval('mrp_product_price_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce ALTER COLUMN id SET DEFAULT nextval('mrp_product_produce_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line ALTER COLUMN id SET DEFAULT nextval('mrp_product_produce_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production ALTER COLUMN id SET DEFAULT nextval('mrp_production_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line ALTER COLUMN id SET DEFAULT nextval('mrp_production_product_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_workcenter_line ALTER COLUMN id SET DEFAULT nextval('mrp_production_workcenter_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property ALTER COLUMN id SET DEFAULT nextval('mrp_property_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property_group ALTER COLUMN id SET DEFAULT nextval('mrp_property_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair ALTER COLUMN id SET DEFAULT nextval('mrp_repair_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_cancel ALTER COLUMN id SET DEFAULT nextval('mrp_repair_cancel_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee ALTER COLUMN id SET DEFAULT nextval('mrp_repair_fee_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line ALTER COLUMN id SET DEFAULT nextval('mrp_repair_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_make_invoice ALTER COLUMN id SET DEFAULT nextval('mrp_repair_make_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing ALTER COLUMN id SET DEFAULT nextval('mrp_routing_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter ALTER COLUMN id SET DEFAULT nextval('mrp_routing_workcenter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct ALTER COLUMN id SET DEFAULT nextval('mrp_subproduct_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter ALTER COLUMN id SET DEFAULT nextval('mrp_workcenter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter_load ALTER COLUMN id SET DEFAULT nextval('mrp_workcenter_load_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default ALTER COLUMN id SET DEFAULT nextval('multi_company_default_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_note ALTER COLUMN id SET DEFAULT nextval('note_note_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage ALTER COLUMN id SET DEFAULT nextval('note_stage_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_tag ALTER COLUMN id SET DEFAULT nextval('note_tag_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY osv_memory_autovacuum ALTER COLUMN id SET DEFAULT nextval('osv_memory_autovacuum_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pad_common ALTER COLUMN id SET DEFAULT nextval('pad_common_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_acquirer ALTER COLUMN id SET DEFAULT nextval('payment_acquirer_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction ALTER COLUMN id SET DEFAULT nextval('payment_transaction_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pricelist_partnerinfo ALTER COLUMN id SET DEFAULT nextval('pricelist_partnerinfo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_group ALTER COLUMN id SET DEFAULT nextval('procurement_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order ALTER COLUMN id SET DEFAULT nextval('procurement_order_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order_compute_all ALTER COLUMN id SET DEFAULT nextval('procurement_order_compute_all_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_orderpoint_compute ALTER COLUMN id SET DEFAULT nextval('procurement_orderpoint_compute_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule ALTER COLUMN id SET DEFAULT nextval('procurement_rule_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute ALTER COLUMN id SET DEFAULT nextval('product_attribute_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line ALTER COLUMN id SET DEFAULT nextval('product_attribute_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_price ALTER COLUMN id SET DEFAULT nextval('product_attribute_price_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value ALTER COLUMN id SET DEFAULT nextval('product_attribute_value_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_category ALTER COLUMN id SET DEFAULT nextval('product_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging ALTER COLUMN id SET DEFAULT nextval('product_packaging_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_history ALTER COLUMN id SET DEFAULT nextval('product_price_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_list ALTER COLUMN id SET DEFAULT nextval('product_price_list_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_type ALTER COLUMN id SET DEFAULT nextval('product_price_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist ALTER COLUMN id SET DEFAULT nextval('product_pricelist_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item ALTER COLUMN id SET DEFAULT nextval('product_pricelist_item_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_type ALTER COLUMN id SET DEFAULT nextval('product_pricelist_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_version ALTER COLUMN id SET DEFAULT nextval('product_pricelist_version_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_product ALTER COLUMN id SET DEFAULT nextval('product_product_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_putaway ALTER COLUMN id SET DEFAULT nextval('product_putaway_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_removal ALTER COLUMN id SET DEFAULT nextval('product_removal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo ALTER COLUMN id SET DEFAULT nextval('product_supplierinfo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template ALTER COLUMN id SET DEFAULT nextval('product_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_ul ALTER COLUMN id SET DEFAULT nextval('product_ul_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom ALTER COLUMN id SET DEFAULT nextval('product_uom_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom_categ ALTER COLUMN id SET DEFAULT nextval('product_uom_categ_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_account_analytic_line ALTER COLUMN id SET DEFAULT nextval('project_account_analytic_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category ALTER COLUMN id SET DEFAULT nextval('project_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_config_settings ALTER COLUMN id SET DEFAULT nextval('project_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue ALTER COLUMN id SET DEFAULT nextval('project_issue_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue_version ALTER COLUMN id SET DEFAULT nextval('project_issue_version_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project ALTER COLUMN id SET DEFAULT nextval('project_project_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task ALTER COLUMN id SET DEFAULT nextval('project_task_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_delegate ALTER COLUMN id SET DEFAULT nextval('project_task_delegate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_history ALTER COLUMN id SET DEFAULT nextval('project_task_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_type ALTER COLUMN id SET DEFAULT nextval('project_task_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work ALTER COLUMN id SET DEFAULT nextval('project_task_work_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_config_settings ALTER COLUMN id SET DEFAULT nextval('purchase_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_group ALTER COLUMN id SET DEFAULT nextval('purchase_order_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line ALTER COLUMN id SET DEFAULT nextval('purchase_order_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line_invoice ALTER COLUMN id SET DEFAULT nextval('purchase_order_line_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report ALTER COLUMN id SET DEFAULT nextval('report_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report_paperformat ALTER COLUMN id SET DEFAULT nextval('report_paperformat_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_bank ALTER COLUMN id SET DEFAULT nextval('res_bank_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company ALTER COLUMN id SET DEFAULT nextval('res_company_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config ALTER COLUMN id SET DEFAULT nextval('res_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_installer ALTER COLUMN id SET DEFAULT nextval('res_config_installer_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_settings ALTER COLUMN id SET DEFAULT nextval('res_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country ALTER COLUMN id SET DEFAULT nextval('res_country_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_group ALTER COLUMN id SET DEFAULT nextval('res_country_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_state ALTER COLUMN id SET DEFAULT nextval('res_country_state_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency ALTER COLUMN id SET DEFAULT nextval('res_currency_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency_rate ALTER COLUMN id SET DEFAULT nextval('res_currency_rate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_font ALTER COLUMN id SET DEFAULT nextval('res_font_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups ALTER COLUMN id SET DEFAULT nextval('res_groups_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_lang ALTER COLUMN id SET DEFAULT nextval('res_lang_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner ALTER COLUMN id SET DEFAULT nextval('res_partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type_field ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_type_field_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_category ALTER COLUMN id SET DEFAULT nextval('res_partner_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_title ALTER COLUMN id SET DEFAULT nextval('res_partner_title_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_request_link ALTER COLUMN id SET DEFAULT nextval('res_request_link_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users ALTER COLUMN id SET DEFAULT nextval('res_users_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar ALTER COLUMN id SET DEFAULT nextval('resource_calendar_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_attendance ALTER COLUMN id SET DEFAULT nextval('resource_calendar_attendance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves ALTER COLUMN id SET DEFAULT nextval('resource_calendar_leaves_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource ALTER COLUMN id SET DEFAULT nextval('resource_resource_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_advance_payment_inv ALTER COLUMN id SET DEFAULT nextval('sale_advance_payment_inv_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_config_settings ALTER COLUMN id SET DEFAULT nextval('sale_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception ALTER COLUMN id SET DEFAULT nextval('sale_exception_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_confirm ALTER COLUMN id SET DEFAULT nextval('sale_exception_confirm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_make_invoice ALTER COLUMN id SET DEFAULT nextval('sale_make_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order ALTER COLUMN id SET DEFAULT nextval('sale_order_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line ALTER COLUMN id SET DEFAULT nextval('sale_order_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_make_invoice ALTER COLUMN id SET DEFAULT nextval('sale_order_line_make_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type ALTER COLUMN id SET DEFAULT nextval('sale_order_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard ALTER COLUMN id SET DEFAULT nextval('share_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard_result_line ALTER COLUMN id SET DEFAULT nextval('share_wizard_result_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty ALTER COLUMN id SET DEFAULT nextval('stock_change_product_qty_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_standard_price ALTER COLUMN id SET DEFAULT nextval('stock_change_standard_price_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_config_settings ALTER COLUMN id SET DEFAULT nextval('stock_config_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat ALTER COLUMN id SET DEFAULT nextval('stock_fixed_putaway_strat_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_incoterms ALTER COLUMN id SET DEFAULT nextval('stock_incoterms_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory ALTER COLUMN id SET DEFAULT nextval('stock_inventory_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line ALTER COLUMN id SET DEFAULT nextval('stock_inventory_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_invoice_onshipping ALTER COLUMN id SET DEFAULT nextval('stock_invoice_onshipping_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location ALTER COLUMN id SET DEFAULT nextval('stock_location_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path ALTER COLUMN id SET DEFAULT nextval('stock_location_path_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route ALTER COLUMN id SET DEFAULT nextval('stock_location_route_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move ALTER COLUMN id SET DEFAULT nextval('stock_move_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume ALTER COLUMN id SET DEFAULT nextval('stock_move_consume_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link ALTER COLUMN id SET DEFAULT nextval('stock_move_operation_link_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap ALTER COLUMN id SET DEFAULT nextval('stock_move_scrap_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation ALTER COLUMN id SET DEFAULT nextval('stock_pack_operation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking ALTER COLUMN id SET DEFAULT nextval('stock_picking_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type ALTER COLUMN id SET DEFAULT nextval('stock_picking_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_production_lot ALTER COLUMN id SET DEFAULT nextval('stock_production_lot_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant ALTER COLUMN id SET DEFAULT nextval('stock_quant_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package ALTER COLUMN id SET DEFAULT nextval('stock_quant_package_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking ALTER COLUMN id SET DEFAULT nextval('stock_return_picking_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line ALTER COLUMN id SET DEFAULT nextval('stock_return_picking_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details ALTER COLUMN id SET DEFAULT nextval('stock_transfer_details_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items ALTER COLUMN id SET DEFAULT nextval('stock_transfer_details_items_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse ALTER COLUMN id SET DEFAULT nextval('stock_warehouse_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint ALTER COLUMN id SET DEFAULT nextval('stock_warehouse_orderpoint_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document ALTER COLUMN id SET DEFAULT nextval('subscription_document_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document_fields ALTER COLUMN id SET DEFAULT nextval('subscription_document_fields_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription ALTER COLUMN id SET DEFAULT nextval('subscription_subscription_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription_history ALTER COLUMN id SET DEFAULT nextval('subscription_subscription_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY temp_range ALTER COLUMN id SET DEFAULT nextval('temp_range_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move ALTER COLUMN id SET DEFAULT nextval('validate_account_move_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move_lines ALTER COLUMN id SET DEFAULT nextval('validate_account_move_lines_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_ir_model_menu_create ALTER COLUMN id SET DEFAULT nextval('wizard_ir_model_menu_create_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts ALTER COLUMN id SET DEFAULT nextval('wizard_multi_charts_accounts_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_valuation_history ALTER COLUMN id SET DEFAULT nextval('wizard_valuation_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf ALTER COLUMN id SET DEFAULT nextval('wkf_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity ALTER COLUMN id SET DEFAULT nextval('wkf_activity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_instance ALTER COLUMN id SET DEFAULT nextval('wkf_instance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition ALTER COLUMN id SET DEFAULT nextval('wkf_transition_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_triggers ALTER COLUMN id SET DEFAULT nextval('wkf_triggers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_workitem ALTER COLUMN id SET DEFAULT nextval('wkf_workitem_id_seq'::regclass);


--
-- Name: account_account_code_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_code_company_uniq UNIQUE (code, company_id);


--
-- Name: account_account_consol_rel_child_id_parent_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_consol_rel
    ADD CONSTRAINT account_account_consol_rel_child_id_parent_id_key UNIQUE (child_id, parent_id);


--
-- Name: account_account_financial_report__report_id_account_type_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_financial_report_type
    ADD CONSTRAINT account_account_financial_report__report_id_account_type_id_key UNIQUE (report_id, account_type_id);


--
-- Name: account_account_financial_report_account_id_report_line_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_financial_report
    ADD CONSTRAINT account_account_financial_report_account_id_report_line_id_key UNIQUE (account_id, report_line_id);


--
-- Name: account_account_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_pkey PRIMARY KEY (id);


--
-- Name: account_account_tax_default_rel_account_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_tax_default_rel
    ADD CONSTRAINT account_account_tax_default_rel_account_id_tax_id_key UNIQUE (account_id, tax_id);


--
-- Name: account_account_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_pkey PRIMARY KEY (id);


--
-- Name: account_account_template_tax_rel_account_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_template_tax_rel
    ADD CONSTRAINT account_account_template_tax_rel_account_id_tax_id_key UNIQUE (account_id, tax_id);


--
-- Name: account_account_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_type
    ADD CONSTRAINT account_account_type_pkey PRIMARY KEY (id);


--
-- Name: account_account_type_rel_journal_id_account_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_account_type_rel
    ADD CONSTRAINT account_account_type_rel_journal_id_account_id_key UNIQUE (journal_id, account_id);


--
-- Name: account_addtmpl_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_addtmpl_wizard
    ADD CONSTRAINT account_addtmpl_wizard_pkey PRIMARY KEY (id);


--
-- Name: account_aged_trial_balance_journal_re_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_aged_trial_balance_journal_rel
    ADD CONSTRAINT account_aged_trial_balance_journal_re_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_aged_trial_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_account_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_balance
    ADD CONSTRAINT account_analytic_balance_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_chart_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_chart
    ADD CONSTRAINT account_analytic_chart_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_cost_ledger_journal_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_cost_ledger_journal_report
    ADD CONSTRAINT account_analytic_cost_ledger_journal_report_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_cost_ledger_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_cost_ledger
    ADD CONSTRAINT account_analytic_cost_ledger_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_inverted_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_inverted_balance
    ADD CONSTRAINT account_analytic_inverted_balance_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_invoice_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_journal_name_journal_line_id_journal_print_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_journal_name
    ADD CONSTRAINT account_analytic_journal_name_journal_line_id_journal_print_key UNIQUE (journal_line_id, journal_print_id);


--
-- Name: account_analytic_journal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_journal
    ADD CONSTRAINT account_analytic_journal_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_journal_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_journal_report
    ADD CONSTRAINT account_analytic_journal_report_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_pkey PRIMARY KEY (id);


--
-- Name: account_automatic_reconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_pkey PRIMARY KEY (id);


--
-- Name: account_balance_report_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_balance_report_journal_rel
    ADD CONSTRAINT account_balance_report_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_balance_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_pkey PRIMARY KEY (id);


--
-- Name: account_bank_accounts_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_bank_accounts_wizard
    ADD CONSTRAINT account_bank_accounts_wizard_pkey PRIMARY KEY (id);


--
-- Name: account_bank_statement_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_pkey PRIMARY KEY (id);


--
-- Name: account_bank_statement_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_pkey PRIMARY KEY (id);


--
-- Name: account_cashbox_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cashbox_line
    ADD CONSTRAINT account_cashbox_line_pkey PRIMARY KEY (id);


--
-- Name: account_central_journal_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_central_journal_journal_rel
    ADD CONSTRAINT account_central_journal_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_central_journal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_pkey PRIMARY KEY (id);


--
-- Name: account_change_currency_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_change_currency
    ADD CONSTRAINT account_change_currency_pkey PRIMARY KEY (id);


--
-- Name: account_chart_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_pkey PRIMARY KEY (id);


--
-- Name: account_chart_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_pkey PRIMARY KEY (id);


--
-- Name: account_common_account_report_account_common_account_report_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_account_report_account_journal_rel
    ADD CONSTRAINT account_common_account_report_account_common_account_report_key UNIQUE (account_common_account_report_id, account_journal_id);


--
-- Name: account_common_account_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_pkey PRIMARY KEY (id);


--
-- Name: account_common_journal_report_account_common_journal_report_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_journal_report_account_journal_rel
    ADD CONSTRAINT account_common_journal_report_account_common_journal_report_key UNIQUE (account_common_journal_report_id, account_journal_id);


--
-- Name: account_common_journal_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_pkey PRIMARY KEY (id);


--
-- Name: account_common_partner_report_account_common_partner_report_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_partner_report_account_journal_rel
    ADD CONSTRAINT account_common_partner_report_account_common_partner_report_key UNIQUE (account_common_partner_report_id, account_journal_id);


--
-- Name: account_common_partner_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_pkey PRIMARY KEY (id);


--
-- Name: account_common_report_account_account_common_report_id_acco_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_report_account_journal_rel
    ADD CONSTRAINT account_common_report_account_account_common_report_id_acco_key UNIQUE (account_common_report_id, account_journal_id);


--
-- Name: account_common_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_pkey PRIMARY KEY (id);


--
-- Name: account_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_pkey PRIMARY KEY (id);


--
-- Name: account_cutoff_account_journal_rel_cutoff_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff_account_journal_rel
    ADD CONSTRAINT account_cutoff_account_journal_rel_cutoff_id_journal_id_key UNIQUE (cutoff_id, journal_id);


--
-- Name: account_cutoff_date_type_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_date_type_company_uniq UNIQUE (cutoff_date, company_id, type);


--
-- Name: account_cutoff_line_account_tax_rel_cutoff_line_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff_line_account_tax_rel
    ADD CONSTRAINT account_cutoff_line_account_tax_rel_cutoff_line_id_tax_id_key UNIQUE (cutoff_line_id, tax_id);


--
-- Name: account_cutoff_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_pkey PRIMARY KEY (id);


--
-- Name: account_cutoff_mapping_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_pkey PRIMARY KEY (id);


--
-- Name: account_cutoff_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_pkey PRIMARY KEY (id);


--
-- Name: account_cutoff_tax_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_pkey PRIMARY KEY (id);


--
-- Name: account_financial_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_financial_report
    ADD CONSTRAINT account_financial_report_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_account_account_src_dest_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_account_src_dest_uniq UNIQUE (position_id, account_src_id, account_dest_id);


--
-- Name: account_fiscal_position_account_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_account_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_tax_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_tax_tax_src_dest_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_tax_src_dest_uniq UNIQUE (position_id, tax_src_id, tax_dest_id);


--
-- Name: account_fiscal_position_tax_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_pkey PRIMARY KEY (id);


--
-- Name: account_fiscal_position_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscal_position_template
    ADD CONSTRAINT account_fiscal_position_template_pkey PRIMARY KEY (id);


--
-- Name: account_fiscalyear_close_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_pkey PRIMARY KEY (id);


--
-- Name: account_fiscalyear_close_state_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscalyear_close_state
    ADD CONSTRAINT account_fiscalyear_close_state_pkey PRIMARY KEY (id);


--
-- Name: account_fiscalyear_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_fiscalyear
    ADD CONSTRAINT account_fiscalyear_pkey PRIMARY KEY (id);


--
-- Name: account_general_journal_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_general_journal_journal_rel
    ADD CONSTRAINT account_general_journal_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_general_journal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_pkey PRIMARY KEY (id);


--
-- Name: account_installer_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_installer
    ADD CONSTRAINT account_installer_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_cancel_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_cancel
    ADD CONSTRAINT account_invoice_cancel_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_confirm_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_confirm
    ADD CONSTRAINT account_invoice_confirm_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_line_tax_invoice_line_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_line_tax
    ADD CONSTRAINT account_invoice_line_tax_invoice_line_id_tax_id_key UNIQUE (invoice_line_id, tax_id);


--
-- Name: account_invoice_number_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_number_uniq UNIQUE (number, company_id, journal_id, type);


--
-- Name: account_invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_refund_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_refund
    ADD CONSTRAINT account_invoice_refund_pkey PRIMARY KEY (id);


--
-- Name: account_invoice_tax_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_pkey PRIMARY KEY (id);


--
-- Name: account_journal_account_vat_d_account_vat_declaration_id_ac_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_account_vat_declaration_rel
    ADD CONSTRAINT account_journal_account_vat_d_account_vat_declaration_id_ac_key UNIQUE (account_vat_declaration_id, account_journal_id);


--
-- Name: account_journal_accounting_re_accounting_report_id_account__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_accounting_report_rel
    ADD CONSTRAINT account_journal_accounting_re_accounting_report_id_account__key UNIQUE (accounting_report_id, account_journal_id);


--
-- Name: account_journal_cashbox_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_cashbox_line
    ADD CONSTRAINT account_journal_cashbox_line_pkey PRIMARY KEY (id);


--
-- Name: account_journal_code_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_code_company_uniq UNIQUE (code, company_id);


--
-- Name: account_journal_group_rel_journal_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_group_rel
    ADD CONSTRAINT account_journal_group_rel_journal_id_group_id_key UNIQUE (journal_id, group_id);


--
-- Name: account_journal_name_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_name_company_uniq UNIQUE (name, company_id);


--
-- Name: account_journal_period_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_pkey PRIMARY KEY (id);


--
-- Name: account_journal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_pkey PRIMARY KEY (id);


--
-- Name: account_journal_select_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_select
    ADD CONSTRAINT account_journal_select_pkey PRIMARY KEY (id);


--
-- Name: account_journal_type_rel_journal_id_type_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_journal_type_rel
    ADD CONSTRAINT account_journal_type_rel_journal_id_type_id_key UNIQUE (journal_id, type_id);


--
-- Name: account_model_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_pkey PRIMARY KEY (id);


--
-- Name: account_model_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_model
    ADD CONSTRAINT account_model_pkey PRIMARY KEY (id);


--
-- Name: account_move_bank_reconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_bank_reconcile
    ADD CONSTRAINT account_move_bank_reconcile_pkey PRIMARY KEY (id);


--
-- Name: account_move_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_pkey PRIMARY KEY (id);


--
-- Name: account_move_line_reconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line_reconcile
    ADD CONSTRAINT account_move_line_reconcile_pkey PRIMARY KEY (id);


--
-- Name: account_move_line_reconcile_select_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line_reconcile_select
    ADD CONSTRAINT account_move_line_reconcile_select_pkey PRIMARY KEY (id);


--
-- Name: account_move_line_reconcile_writeoff_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_pkey PRIMARY KEY (id);


--
-- Name: account_move_line_relation_move_id_line_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line_relation
    ADD CONSTRAINT account_move_line_relation_move_id_line_id_key UNIQUE (move_id, line_id);


--
-- Name: account_move_line_unreconcile_select_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_line_unreconcile_select
    ADD CONSTRAINT account_move_line_unreconcile_select_pkey PRIMARY KEY (id);


--
-- Name: account_move_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_pkey PRIMARY KEY (id);


--
-- Name: account_move_reconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_move_reconcile
    ADD CONSTRAINT account_move_reconcile_pkey PRIMARY KEY (id);


--
-- Name: account_open_closed_fiscalyear_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_open_closed_fiscalyear
    ADD CONSTRAINT account_open_closed_fiscalyear_pkey PRIMARY KEY (id);


--
-- Name: account_partner_balance_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_partner_balance_journal_rel
    ADD CONSTRAINT account_partner_balance_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_partner_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_pkey PRIMARY KEY (id);


--
-- Name: account_partner_ledger_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_partner_ledger_journal_rel
    ADD CONSTRAINT account_partner_ledger_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_partner_ledger_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_pkey PRIMARY KEY (id);


--
-- Name: account_partner_reconcile_process_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_partner_reconcile_process
    ADD CONSTRAINT account_partner_reconcile_process_pkey PRIMARY KEY (id);


--
-- Name: account_payment_term_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_payment_term_line
    ADD CONSTRAINT account_payment_term_line_pkey PRIMARY KEY (id);


--
-- Name: account_payment_term_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_payment_term
    ADD CONSTRAINT account_payment_term_pkey PRIMARY KEY (id);


--
-- Name: account_period_close_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_period_close
    ADD CONSTRAINT account_period_close_pkey PRIMARY KEY (id);


--
-- Name: account_period_name_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_name_company_uniq UNIQUE (name, company_id);


--
-- Name: account_period_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_pkey PRIMARY KEY (id);


--
-- Name: account_print_journal_journal_rel_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_print_journal_journal_rel
    ADD CONSTRAINT account_print_journal_journal_rel_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_print_journal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_pkey PRIMARY KEY (id);


--
-- Name: account_report_general_ledger_journal_account_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_report_general_ledger_journal_rel
    ADD CONSTRAINT account_report_general_ledger_journal_account_id_journal_id_key UNIQUE (account_id, journal_id);


--
-- Name: account_report_general_ledger_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_pkey PRIMARY KEY (id);


--
-- Name: account_sequence_fiscalyear_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_pkey PRIMARY KEY (id);


--
-- Name: account_state_open_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_state_open
    ADD CONSTRAINT account_state_open_pkey PRIMARY KEY (id);


--
-- Name: account_statement_from_invoice_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_statement_from_invoice_lines
    ADD CONSTRAINT account_statement_from_invoice_lines_pkey PRIMARY KEY (id);


--
-- Name: account_statement_operation_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_pkey PRIMARY KEY (id);


--
-- Name: account_subscription_generate_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_subscription_generate
    ADD CONSTRAINT account_subscription_generate_pkey PRIMARY KEY (id);


--
-- Name: account_subscription_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_subscription_line
    ADD CONSTRAINT account_subscription_line_pkey PRIMARY KEY (id);


--
-- Name: account_subscription_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_subscription
    ADD CONSTRAINT account_subscription_pkey PRIMARY KEY (id);


--
-- Name: account_tax_chart_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax_chart
    ADD CONSTRAINT account_tax_chart_pkey PRIMARY KEY (id);


--
-- Name: account_tax_code_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax_code
    ADD CONSTRAINT account_tax_code_pkey PRIMARY KEY (id);


--
-- Name: account_tax_code_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax_code_template
    ADD CONSTRAINT account_tax_code_template_pkey PRIMARY KEY (id);


--
-- Name: account_tax_name_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_name_company_uniq UNIQUE (name, company_id);


--
-- Name: account_tax_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_pkey PRIMARY KEY (id);


--
-- Name: account_tax_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_pkey PRIMARY KEY (id);


--
-- Name: account_template_financial_re_account_template_id_report_li_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_template_financial_report
    ADD CONSTRAINT account_template_financial_re_account_template_id_report_li_key UNIQUE (account_template_id, report_line_id);


--
-- Name: account_unreconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_unreconcile
    ADD CONSTRAINT account_unreconcile_pkey PRIMARY KEY (id);


--
-- Name: account_unreconcile_reconcile_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_unreconcile_reconcile
    ADD CONSTRAINT account_unreconcile_reconcile_pkey PRIMARY KEY (id);


--
-- Name: account_use_model_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_use_model
    ADD CONSTRAINT account_use_model_pkey PRIMARY KEY (id);


--
-- Name: account_use_model_relation_account_id_model_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_use_model_relation
    ADD CONSTRAINT account_use_model_relation_account_id_model_id_key UNIQUE (account_id, model_id);


--
-- Name: account_vat_declaration_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_pkey PRIMARY KEY (id);


--
-- Name: account_voucher_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_pkey PRIMARY KEY (id);


--
-- Name: account_voucher_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_pkey PRIMARY KEY (id);


--
-- Name: accounting_report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_pkey PRIMARY KEY (id);


--
-- Name: analytic_profit_emp_rel_analytic_id_emp_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY analytic_profit_emp_rel
    ADD CONSTRAINT analytic_profit_emp_rel_analytic_id_emp_id_key UNIQUE (analytic_id, emp_id);


--
-- Name: analytic_profit_journal_rel_analytic_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY analytic_profit_journal_rel
    ADD CONSTRAINT analytic_profit_journal_rel_analytic_id_journal_id_key UNIQUE (analytic_id, journal_id);


--
-- Name: base_action_rule_ir_act_serve_base_action_rule_id_ir_act_se_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_action_rule_ir_act_server_rel
    ADD CONSTRAINT base_action_rule_ir_act_serve_base_action_rule_id_ir_act_se_key UNIQUE (base_action_rule_id, ir_act_server_id);


--
-- Name: base_action_rule_lead_test_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_action_rule_lead_test
    ADD CONSTRAINT base_action_rule_lead_test_pkey PRIMARY KEY (id);


--
-- Name: base_action_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_pkey PRIMARY KEY (id);


--
-- Name: base_action_rule_res_partner__base_action_rule_id_res_partn_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_action_rule_res_partner_rel
    ADD CONSTRAINT base_action_rule_res_partner__base_action_rule_id_res_partn_key UNIQUE (base_action_rule_id, res_partner_id);


--
-- Name: base_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_config_settings
    ADD CONSTRAINT base_config_settings_pkey PRIMARY KEY (id);


--
-- Name: base_import_import_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_import
    ADD CONSTRAINT base_import_import_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_noreadonly_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char_noreadonly
    ADD CONSTRAINT base_import_tests_models_char_noreadonly_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char
    ADD CONSTRAINT base_import_tests_models_char_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_readonly_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char_readonly
    ADD CONSTRAINT base_import_tests_models_char_readonly_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_required_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char_required
    ADD CONSTRAINT base_import_tests_models_char_required_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_states_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char_states
    ADD CONSTRAINT base_import_tests_models_char_states_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_char_stillreadonly_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_char_stillreadonly
    ADD CONSTRAINT base_import_tests_models_char_stillreadonly_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_m2o_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_m2o
    ADD CONSTRAINT base_import_tests_models_m2o_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_m2o_related_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_m2o_related
    ADD CONSTRAINT base_import_tests_models_m2o_related_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_m2o_required_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_m2o_required
    ADD CONSTRAINT base_import_tests_models_m2o_required_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_m2o_required_related_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_m2o_required_related
    ADD CONSTRAINT base_import_tests_models_m2o_required_related_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_o2m_child_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_o2m_child
    ADD CONSTRAINT base_import_tests_models_o2m_child_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_o2m_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_o2m
    ADD CONSTRAINT base_import_tests_models_o2m_pkey PRIMARY KEY (id);


--
-- Name: base_import_tests_models_preview_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_import_tests_models_preview
    ADD CONSTRAINT base_import_tests_models_preview_pkey PRIMARY KEY (id);


--
-- Name: base_language_export_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_pkey PRIMARY KEY (id);


--
-- Name: base_language_import_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_pkey PRIMARY KEY (id);


--
-- Name: base_language_install_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_pkey PRIMARY KEY (id);


--
-- Name: base_module_configuration_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_pkey PRIMARY KEY (id);


--
-- Name: base_module_record_model_rel_wizard_id_model_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_module_record_model_rel
    ADD CONSTRAINT base_module_record_model_rel_wizard_id_model_id_key UNIQUE (wizard_id, model_id);


--
-- Name: base_module_record_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_module_record
    ADD CONSTRAINT base_module_record_pkey PRIMARY KEY (id);


--
-- Name: base_module_update_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_pkey PRIMARY KEY (id);


--
-- Name: base_module_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_pkey PRIMARY KEY (id);


--
-- Name: base_partner_merge_automatic__base_partner_merge_automatic__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard_res_partner_rel
    ADD CONSTRAINT base_partner_merge_automatic__base_partner_merge_automatic__key UNIQUE (base_partner_merge_automatic_wizard_id, res_partner_id);


--
-- Name: base_partner_merge_automatic_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard
    ADD CONSTRAINT base_partner_merge_automatic_wizard_pkey PRIMARY KEY (id);


--
-- Name: base_partner_merge_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_partner_merge_line
    ADD CONSTRAINT base_partner_merge_line_pkey PRIMARY KEY (id);


--
-- Name: base_setup_terminology_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_pkey PRIMARY KEY (id);


--
-- Name: base_update_translations_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_pkey PRIMARY KEY (id);


--
-- Name: board_create_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY board_create
    ADD CONSTRAINT board_create_pkey PRIMARY KEY (id);


--
-- Name: bus_bus_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY bus_bus
    ADD CONSTRAINT bus_bus_pkey PRIMARY KEY (id);


--
-- Name: calendar_alarm_calendar_event_calendar_event_id_calendar_al_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_alarm_calendar_event_rel
    ADD CONSTRAINT calendar_alarm_calendar_event_calendar_event_id_calendar_al_key UNIQUE (calendar_event_id, calendar_alarm_id);


--
-- Name: calendar_alarm_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_pkey PRIMARY KEY (id);


--
-- Name: calendar_attendee_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_pkey PRIMARY KEY (id);


--
-- Name: calendar_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_contacts
    ADD CONSTRAINT calendar_contacts_pkey PRIMARY KEY (id);


--
-- Name: calendar_event_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_pkey PRIMARY KEY (id);


--
-- Name: calendar_event_res_partner_re_calendar_event_id_res_partner_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_event_res_partner_rel
    ADD CONSTRAINT calendar_event_res_partner_re_calendar_event_id_res_partner_key UNIQUE (calendar_event_id, res_partner_id);


--
-- Name: calendar_event_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY calendar_event_type
    ADD CONSTRAINT calendar_event_type_pkey PRIMARY KEY (id);


--
-- Name: cash_box_in_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY cash_box_in
    ADD CONSTRAINT cash_box_in_pkey PRIMARY KEY (id);


--
-- Name: cash_box_out_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY cash_box_out
    ADD CONSTRAINT cash_box_out_pkey PRIMARY KEY (id);


--
-- Name: change_password_user_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY change_password_user
    ADD CONSTRAINT change_password_user_pkey PRIMARY KEY (id);


--
-- Name: change_password_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY change_password_wizard
    ADD CONSTRAINT change_password_wizard_pkey PRIMARY KEY (id);


--
-- Name: change_production_qty_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY change_production_qty
    ADD CONSTRAINT change_production_qty_pkey PRIMARY KEY (id);


--
-- Name: crm_case_categ_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_pkey PRIMARY KEY (id);


--
-- Name: crm_case_section_code_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_code_uniq UNIQUE (code);


--
-- Name: crm_case_section_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_pkey PRIMARY KEY (id);


--
-- Name: crm_case_stage_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_pkey PRIMARY KEY (id);


--
-- Name: crm_claim_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_pkey PRIMARY KEY (id);


--
-- Name: crm_claim_stage_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_claim_stage
    ADD CONSTRAINT crm_claim_stage_pkey PRIMARY KEY (id);


--
-- Name: crm_helpdesk_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_pkey PRIMARY KEY (id);


--
-- Name: crm_lead2opportunity_partner__crm_lead2opportunity_partner__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner__crm_lead2opportunity_partner__key UNIQUE (crm_lead2opportunity_partner_mass_id, res_users_id);


--
-- Name: crm_lead2opportunity_partner_mass_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_pkey PRIMARY KEY (id);


--
-- Name: crm_lead2opportunity_partner_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_pkey PRIMARY KEY (id);


--
-- Name: crm_lead_category_rel_lead_id_category_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead_category_rel
    ADD CONSTRAINT crm_lead_category_rel_lead_id_category_id_key UNIQUE (lead_id, category_id);


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner__key UNIQUE (crm_lead2opportunity_partner_id, crm_lead_id);


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_key1; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_key1 UNIQUE (crm_lead2opportunity_partner_mass_id, crm_lead_id);


--
-- Name: crm_lead_crm_lead_unique_code; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_crm_lead_unique_code UNIQUE (code);


--
-- Name: crm_lead_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_pkey PRIMARY KEY (id);


--
-- Name: crm_make_sale_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_make_sale
    ADD CONSTRAINT crm_make_sale_pkey PRIMARY KEY (id);


--
-- Name: crm_merge_opportunity_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_pkey PRIMARY KEY (id);


--
-- Name: crm_partner_binding_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_partner_binding
    ADD CONSTRAINT crm_partner_binding_pkey PRIMARY KEY (id);


--
-- Name: crm_payment_mode_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_payment_mode
    ADD CONSTRAINT crm_payment_mode_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall2phonecall_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_pkey PRIMARY KEY (id);


--
-- Name: crm_segmentation_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_pkey PRIMARY KEY (id);


--
-- Name: crm_segmentation_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_pkey PRIMARY KEY (id);


--
-- Name: crm_tracking_campaign_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_tracking_campaign
    ADD CONSTRAINT crm_tracking_campaign_pkey PRIMARY KEY (id);


--
-- Name: crm_tracking_medium_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_tracking_medium
    ADD CONSTRAINT crm_tracking_medium_pkey PRIMARY KEY (id);


--
-- Name: crm_tracking_source_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY crm_tracking_source
    ADD CONSTRAINT crm_tracking_source_pkey PRIMARY KEY (id);


--
-- Name: db_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY db_backup
    ADD CONSTRAINT db_backup_pkey PRIMARY KEY (id);


--
-- Name: decimal_precision_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_name_uniq UNIQUE (name);


--
-- Name: decimal_precision_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_pkey PRIMARY KEY (id);


--
-- Name: decimal_precision_test_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY decimal_precision_test
    ADD CONSTRAINT decimal_precision_test_pkey PRIMARY KEY (id);


--
-- Name: delivery_carrier_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY delivery_carrier
    ADD CONSTRAINT delivery_carrier_pkey PRIMARY KEY (id);


--
-- Name: delivery_grid_country_rel_grid_id_country_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY delivery_grid_country_rel
    ADD CONSTRAINT delivery_grid_country_rel_grid_id_country_id_key UNIQUE (grid_id, country_id);


--
-- Name: delivery_grid_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY delivery_grid_line
    ADD CONSTRAINT delivery_grid_line_pkey PRIMARY KEY (id);


--
-- Name: delivery_grid_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY delivery_grid
    ADD CONSTRAINT delivery_grid_pkey PRIMARY KEY (id);


--
-- Name: delivery_grid_state_rel_grid_id_state_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY delivery_grid_state_rel
    ADD CONSTRAINT delivery_grid_state_rel_grid_id_state_id_key UNIQUE (grid_id, state_id);


--
-- Name: email_template_attachment_rel_email_template_id_attachment__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY email_template_attachment_rel
    ADD CONSTRAINT email_template_attachment_rel_email_template_id_attachment__key UNIQUE (email_template_id, attachment_id);


--
-- Name: email_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_pkey PRIMARY KEY (id);


--
-- Name: email_template_preview_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_pkey PRIMARY KEY (id);


--
-- Name: email_template_preview_res_pa_email_template_preview_id_res_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY email_template_preview_res_partner_rel
    ADD CONSTRAINT email_template_preview_res_pa_email_template_preview_id_res_key UNIQUE (email_template_preview_id, res_partner_id);


--
-- Name: employee_category_rel_category_id_emp_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY employee_category_rel
    ADD CONSTRAINT employee_category_rel_category_id_emp_id_key UNIQUE (category_id, emp_id);


--
-- Name: export_wizard_ept_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY export_wizard_ept
    ADD CONSTRAINT export_wizard_ept_pkey PRIMARY KEY (id);


--
-- Name: fetchmail_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY fetchmail_config_settings
    ADD CONSTRAINT fetchmail_config_settings_pkey PRIMARY KEY (id);


--
-- Name: fetchmail_server_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_pkey PRIMARY KEY (id);


--
-- Name: hr_action_reason_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_action_reason
    ADD CONSTRAINT hr_action_reason_pkey PRIMARY KEY (id);


--
-- Name: hr_analytic_timesheet_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_analytic_timesheet
    ADD CONSTRAINT hr_analytic_timesheet_pkey PRIMARY KEY (id);


--
-- Name: hr_attendance_error_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_attendance_error
    ADD CONSTRAINT hr_attendance_error_pkey PRIMARY KEY (id);


--
-- Name: hr_attendance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_attendance
    ADD CONSTRAINT hr_attendance_pkey PRIMARY KEY (id);


--
-- Name: hr_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_config_settings
    ADD CONSTRAINT hr_config_settings_pkey PRIMARY KEY (id);


--
-- Name: hr_department_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_pkey PRIMARY KEY (id);


--
-- Name: hr_employee_category_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_employee_category
    ADD CONSTRAINT hr_employee_category_pkey PRIMARY KEY (id);


--
-- Name: hr_employee_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_pkey PRIMARY KEY (id);


--
-- Name: hr_job_name_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_name_company_uniq UNIQUE (name, company_id, department_id);


--
-- Name: hr_job_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_pkey PRIMARY KEY (id);


--
-- Name: hr_sign_in_project_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_sign_in_project
    ADD CONSTRAINT hr_sign_in_project_pkey PRIMARY KEY (id);


--
-- Name: hr_sign_out_project_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_sign_out_project
    ADD CONSTRAINT hr_sign_out_project_pkey PRIMARY KEY (id);


--
-- Name: hr_timesheet_analytic_profit_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_timesheet_analytic_profit
    ADD CONSTRAINT hr_timesheet_analytic_profit_pkey PRIMARY KEY (id);


--
-- Name: hr_timesheet_invoice_create_final_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_timesheet_invoice_create_final
    ADD CONSTRAINT hr_timesheet_invoice_create_final_pkey PRIMARY KEY (id);


--
-- Name: hr_timesheet_invoice_create_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_timesheet_invoice_create
    ADD CONSTRAINT hr_timesheet_invoice_create_pkey PRIMARY KEY (id);


--
-- Name: hr_timesheet_invoice_factor_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY hr_timesheet_invoice_factor
    ADD CONSTRAINT hr_timesheet_invoice_factor_pkey PRIMARY KEY (id);


--
-- Name: im_chat_message_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY im_chat_message
    ADD CONSTRAINT im_chat_message_pkey PRIMARY KEY (id);


--
-- Name: im_chat_presence_im_chat_user_status_unique; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY im_chat_presence
    ADD CONSTRAINT im_chat_presence_im_chat_user_status_unique UNIQUE (user_id);


--
-- Name: im_chat_presence_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY im_chat_presence
    ADD CONSTRAINT im_chat_presence_pkey PRIMARY KEY (id);


--
-- Name: im_chat_session_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY im_chat_session
    ADD CONSTRAINT im_chat_session_pkey PRIMARY KEY (id);


--
-- Name: im_chat_session_res_users_rel_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY im_chat_session_res_users_rel
    ADD CONSTRAINT im_chat_session_res_users_rel_pkey PRIMARY KEY (id);


--
-- Name: invoice_merge_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY invoice_merge
    ADD CONSTRAINT invoice_merge_pkey PRIMARY KEY (id);


--
-- Name: ir_act_client_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_client
    ADD CONSTRAINT ir_act_client_pkey PRIMARY KEY (id);


--
-- Name: ir_act_report_xml_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_report_xml
    ADD CONSTRAINT ir_act_report_xml_pkey PRIMARY KEY (id);


--
-- Name: ir_act_server_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_pkey PRIMARY KEY (id);


--
-- Name: ir_act_url_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_url
    ADD CONSTRAINT ir_act_url_pkey PRIMARY KEY (id);


--
-- Name: ir_act_window_group_rel_act_id_gid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_act_id_gid_key UNIQUE (act_id, gid);


--
-- Name: ir_act_window_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_pkey PRIMARY KEY (id);


--
-- Name: ir_act_window_view_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_todo_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_pkey PRIMARY KEY (id);


--
-- Name: ir_attachment_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_pkey PRIMARY KEY (id);


--
-- Name: ir_config_parameter_groups_rel_icp_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_config_parameter_groups_rel
    ADD CONSTRAINT ir_config_parameter_groups_rel_icp_id_group_id_key UNIQUE (icp_id, group_id);


--
-- Name: ir_config_parameter_key_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_key_uniq UNIQUE (key);


--
-- Name: ir_config_parameter_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_pkey PRIMARY KEY (id);


--
-- Name: ir_cron_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_pkey PRIMARY KEY (id);


--
-- Name: ir_default_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_pkey PRIMARY KEY (id);


--
-- Name: ir_exports_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_pkey PRIMARY KEY (id);


--
-- Name: ir_exports_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_pkey PRIMARY KEY (id);


--
-- Name: ir_fields_converter_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_fields_converter
    ADD CONSTRAINT ir_fields_converter_pkey PRIMARY KEY (id);


--
-- Name: ir_filters_name_model_uid_unique; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_name_model_uid_unique UNIQUE (name, model_id, user_id, action_id);


--
-- Name: ir_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_pkey PRIMARY KEY (id);


--
-- Name: ir_logging_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_logging
    ADD CONSTRAINT ir_logging_pkey PRIMARY KEY (id);


--
-- Name: ir_mail_server_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_pkey PRIMARY KEY (id);


--
-- Name: ir_model_access_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_pkey PRIMARY KEY (id);


--
-- Name: ir_model_constraint_module_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_module_name_uniq UNIQUE (name, module);


--
-- Name: ir_model_constraint_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_pkey PRIMARY KEY (id);


--
-- Name: ir_model_data_module_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_module_name_uniq UNIQUE (name, module);


--
-- Name: ir_model_data_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_pkey PRIMARY KEY (id);


--
-- Name: ir_model_fields_group_rel_field_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_field_id_group_id_key UNIQUE (field_id, group_id);


--
-- Name: ir_model_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_pkey PRIMARY KEY (id);


--
-- Name: ir_model_obj_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_obj_name_uniq UNIQUE (model);


--
-- Name: ir_model_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_pkey PRIMARY KEY (id);


--
-- Name: ir_model_relation_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_model_relation
    ADD CONSTRAINT ir_model_relation_pkey PRIMARY KEY (id);


--
-- Name: ir_module_category_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_pkey PRIMARY KEY (id);


--
-- Name: ir_module_module_dependency_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_pkey PRIMARY KEY (id);


--
-- Name: ir_module_module_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_name_uniq UNIQUE (name);


--
-- Name: ir_module_module_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_pkey PRIMARY KEY (id);


--
-- Name: ir_property_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_pkey PRIMARY KEY (id);


--
-- Name: ir_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_pkey PRIMARY KEY (id);


--
-- Name: ir_sequence_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_pkey PRIMARY KEY (id);


--
-- Name: ir_sequence_type_code_unique; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_code_unique UNIQUE (code);


--
-- Name: ir_sequence_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_pkey PRIMARY KEY (id);


--
-- Name: ir_server_object_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_pkey PRIMARY KEY (id);


--
-- Name: ir_translation_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_translation
    ADD CONSTRAINT ir_translation_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_menu_group_rel_menu_id_gid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_menu_id_gid_key UNIQUE (menu_id, gid);


--
-- Name: ir_ui_menu_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_custom_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_group_rel_view_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view_group_rel
    ADD CONSTRAINT ir_ui_view_group_rel_view_id_group_id_key UNIQUE (view_id, group_id);


--
-- Name: ir_ui_view_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_pkey PRIMARY KEY (id);


--
-- Name: ir_values_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_pkey PRIMARY KEY (id);


--
-- Name: ledger_journal_rel_ledger_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ledger_journal_rel
    ADD CONSTRAINT ledger_journal_rel_ledger_id_journal_id_key UNIQUE (ledger_id, journal_id);


--
-- Name: mail_alias_alias_unique; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_alias_unique UNIQUE (alias_name);


--
-- Name: mail_alias_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_pkey PRIMARY KEY (id);


--
-- Name: mail_compose_message_ir_attachments_wizard_id_attachment_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_compose_message_ir_attachments_rel
    ADD CONSTRAINT mail_compose_message_ir_attachments_wizard_id_attachment_id_key UNIQUE (wizard_id, attachment_id);


--
-- Name: mail_compose_message_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_pkey PRIMARY KEY (id);


--
-- Name: mail_compose_message_res_partner_rel_wizard_id_partner_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_compose_message_res_partner_rel
    ADD CONSTRAINT mail_compose_message_res_partner_rel_wizard_id_partner_id_key UNIQUE (wizard_id, partner_id);


--
-- Name: mail_followers_mail_followers_res_partner_res_model_id_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_followers
    ADD CONSTRAINT mail_followers_mail_followers_res_partner_res_model_id_uniq UNIQUE (res_model, res_id, partner_id);


--
-- Name: mail_followers_mail_message_s_mail_followers_id_mail_messag_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_followers_mail_message_subtype_rel
    ADD CONSTRAINT mail_followers_mail_message_s_mail_followers_id_mail_messag_key UNIQUE (mail_followers_id, mail_message_subtype_id);


--
-- Name: mail_followers_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_followers
    ADD CONSTRAINT mail_followers_pkey PRIMARY KEY (id);


--
-- Name: mail_group_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_pkey PRIMARY KEY (id);


--
-- Name: mail_group_res_group_rel_mail_group_id_groups_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_group_res_group_rel
    ADD CONSTRAINT mail_group_res_group_rel_mail_group_id_groups_id_key UNIQUE (mail_group_id, groups_id);


--
-- Name: mail_mail_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_mail
    ADD CONSTRAINT mail_mail_pkey PRIMARY KEY (id);


--
-- Name: mail_mail_res_partner_rel_mail_mail_id_res_partner_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_mail_res_partner_rel
    ADD CONSTRAINT mail_mail_res_partner_rel_mail_mail_id_res_partner_id_key UNIQUE (mail_mail_id, res_partner_id);


--
-- Name: mail_message_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_pkey PRIMARY KEY (id);


--
-- Name: mail_message_res_partner_rel_mail_message_id_res_partner_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_message_res_partner_rel
    ADD CONSTRAINT mail_message_res_partner_rel_mail_message_id_res_partner_id_key UNIQUE (mail_message_id, res_partner_id);


--
-- Name: mail_message_subtype_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_message_subtype
    ADD CONSTRAINT mail_message_subtype_pkey PRIMARY KEY (id);


--
-- Name: mail_notification_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_notification
    ADD CONSTRAINT mail_notification_pkey PRIMARY KEY (id);


--
-- Name: mail_vote_message_id_user_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_vote
    ADD CONSTRAINT mail_vote_message_id_user_id_key UNIQUE (message_id, user_id);


--
-- Name: mail_wizard_invite_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_wizard_invite
    ADD CONSTRAINT mail_wizard_invite_pkey PRIMARY KEY (id);


--
-- Name: mail_wizard_invite_res_partne_mail_wizard_invite_id_res_par_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mail_wizard_invite_res_partner_rel
    ADD CONSTRAINT mail_wizard_invite_res_partne_mail_wizard_invite_id_res_par_key UNIQUE (mail_wizard_invite_id, res_partner_id);


--
-- Name: make_procurement_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_pkey PRIMARY KEY (id);


--
-- Name: meeting_category_rel_event_id_type_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY meeting_category_rel
    ADD CONSTRAINT meeting_category_rel_event_id_type_id_key UNIQUE (event_id, type_id);


--
-- Name: merge_opportunity_rel_merge_id_opportunity_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_merge_id_opportunity_id_key UNIQUE (merge_id, opportunity_id);


--
-- Name: message_attachment_rel_message_id_attachment_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_message_id_attachment_id_key UNIQUE (message_id, attachment_id);


--
-- Name: mrp_bom_line_mrp_property_rel_mrp_bom_line_id_mrp_property__key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_bom_line_mrp_property_rel
    ADD CONSTRAINT mrp_bom_line_mrp_property_rel_mrp_bom_line_id_mrp_property__key UNIQUE (mrp_bom_line_id, mrp_property_id);


--
-- Name: mrp_bom_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_pkey PRIMARY KEY (id);


--
-- Name: mrp_bom_line_product_attribut_mrp_bom_line_id_product_attri_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_bom_line_product_attribute_value_rel
    ADD CONSTRAINT mrp_bom_line_product_attribut_mrp_bom_line_id_product_attri_key UNIQUE (mrp_bom_line_id, product_attribute_value_id);


--
-- Name: mrp_bom_mrp_property_rel_mrp_bom_id_mrp_property_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_bom_mrp_property_rel
    ADD CONSTRAINT mrp_bom_mrp_property_rel_mrp_bom_id_mrp_property_id_key UNIQUE (mrp_bom_id, mrp_property_id);


--
-- Name: mrp_bom_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_pkey PRIMARY KEY (id);


--
-- Name: mrp_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_config_settings
    ADD CONSTRAINT mrp_config_settings_pkey PRIMARY KEY (id);


--
-- Name: mrp_product_price_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_product_price
    ADD CONSTRAINT mrp_product_price_pkey PRIMARY KEY (id);


--
-- Name: mrp_product_produce_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_pkey PRIMARY KEY (id);


--
-- Name: mrp_product_produce_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_product_produce
    ADD CONSTRAINT mrp_product_produce_pkey PRIMARY KEY (id);


--
-- Name: mrp_production_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_name_uniq UNIQUE (name, company_id);


--
-- Name: mrp_production_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_pkey PRIMARY KEY (id);


--
-- Name: mrp_production_product_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_pkey PRIMARY KEY (id);


--
-- Name: mrp_production_workcenter_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_production_workcenter_line
    ADD CONSTRAINT mrp_production_workcenter_line_pkey PRIMARY KEY (id);


--
-- Name: mrp_property_group_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_property_group
    ADD CONSTRAINT mrp_property_group_pkey PRIMARY KEY (id);


--
-- Name: mrp_property_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_property
    ADD CONSTRAINT mrp_property_pkey PRIMARY KEY (id);


--
-- Name: mrp_repair_cancel_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair_cancel
    ADD CONSTRAINT mrp_repair_cancel_pkey PRIMARY KEY (id);


--
-- Name: mrp_repair_fee_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_pkey PRIMARY KEY (id);


--
-- Name: mrp_repair_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_pkey PRIMARY KEY (id);


--
-- Name: mrp_repair_make_invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair_make_invoice
    ADD CONSTRAINT mrp_repair_make_invoice_pkey PRIMARY KEY (id);


--
-- Name: mrp_repair_name; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_name UNIQUE (name);


--
-- Name: mrp_repair_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_pkey PRIMARY KEY (id);


--
-- Name: mrp_routing_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_routing
    ADD CONSTRAINT mrp_routing_pkey PRIMARY KEY (id);


--
-- Name: mrp_routing_workcenter_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_pkey PRIMARY KEY (id);


--
-- Name: mrp_subproduct_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_pkey PRIMARY KEY (id);


--
-- Name: mrp_workcenter_load_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_workcenter_load
    ADD CONSTRAINT mrp_workcenter_load_pkey PRIMARY KEY (id);


--
-- Name: mrp_workcenter_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_pkey PRIMARY KEY (id);


--
-- Name: multi_company_default_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_pkey PRIMARY KEY (id);


--
-- Name: name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT name_uniq UNIQUE (name);


--
-- Name: note_note_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY note_note
    ADD CONSTRAINT note_note_pkey PRIMARY KEY (id);


--
-- Name: note_stage_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY note_stage
    ADD CONSTRAINT note_stage_pkey PRIMARY KEY (id);


--
-- Name: note_stage_rel_note_id_stage_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY note_stage_rel
    ADD CONSTRAINT note_stage_rel_note_id_stage_id_key UNIQUE (note_id, stage_id);


--
-- Name: note_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY note_tag
    ADD CONSTRAINT note_tag_pkey PRIMARY KEY (id);


--
-- Name: note_tags_rel_note_id_tag_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY note_tags_rel
    ADD CONSTRAINT note_tags_rel_note_id_tag_id_key UNIQUE (note_id, tag_id);


--
-- Name: osv_memory_autovacuum_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_pkey PRIMARY KEY (id);


--
-- Name: pad_common_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY pad_common
    ADD CONSTRAINT pad_common_pkey PRIMARY KEY (id);


--
-- Name: payment_acquirer_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY payment_acquirer
    ADD CONSTRAINT payment_acquirer_pkey PRIMARY KEY (id);


--
-- Name: payment_transaction_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_pkey PRIMARY KEY (id);


--
-- Name: pricelist_partnerinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_pkey PRIMARY KEY (id);


--
-- Name: procurement_group_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_group
    ADD CONSTRAINT procurement_group_pkey PRIMARY KEY (id);


--
-- Name: procurement_order_compute_all_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_order_compute_all
    ADD CONSTRAINT procurement_order_compute_all_pkey PRIMARY KEY (id);


--
-- Name: procurement_order_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_pkey PRIMARY KEY (id);


--
-- Name: procurement_orderpoint_compute_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_orderpoint_compute
    ADD CONSTRAINT procurement_orderpoint_compute_pkey PRIMARY KEY (id);


--
-- Name: procurement_property_rel_procurement_id_property_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_property_rel
    ADD CONSTRAINT procurement_property_rel_procurement_id_property_id_key UNIQUE (procurement_id, property_id);


--
-- Name: procurement_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_pkey PRIMARY KEY (id);


--
-- Name: product_attribute_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_line
    ADD CONSTRAINT product_attribute_line_pkey PRIMARY KEY (id);


--
-- Name: product_attribute_line_product_attribute_val_line_id_val_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_line_product_attribute_value_rel
    ADD CONSTRAINT product_attribute_line_product_attribute_val_line_id_val_id_key UNIQUE (line_id, val_id);


--
-- Name: product_attribute_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute
    ADD CONSTRAINT product_attribute_pkey PRIMARY KEY (id);


--
-- Name: product_attribute_price_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_price
    ADD CONSTRAINT product_attribute_price_pkey PRIMARY KEY (id);


--
-- Name: product_attribute_value_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_value
    ADD CONSTRAINT product_attribute_value_pkey PRIMARY KEY (id);


--
-- Name: product_attribute_value_product_product_rel_att_id_prod_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_value_product_product_rel
    ADD CONSTRAINT product_attribute_value_product_product_rel_att_id_prod_id_key UNIQUE (att_id, prod_id);


--
-- Name: product_attribute_value_value_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_attribute_value
    ADD CONSTRAINT product_attribute_value_value_company_uniq UNIQUE (name, attribute_id);


--
-- Name: product_category_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_pkey PRIMARY KEY (id);


--
-- Name: product_packaging_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_pkey PRIMARY KEY (id);


--
-- Name: product_price_history_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_price_history
    ADD CONSTRAINT product_price_history_pkey PRIMARY KEY (id);


--
-- Name: product_price_list_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_pkey PRIMARY KEY (id);


--
-- Name: product_price_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_item_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_version_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_pkey PRIMARY KEY (id);


--
-- Name: product_product_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_pkey PRIMARY KEY (id);


--
-- Name: product_putaway_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_putaway
    ADD CONSTRAINT product_putaway_pkey PRIMARY KEY (id);


--
-- Name: product_removal_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_removal
    ADD CONSTRAINT product_removal_pkey PRIMARY KEY (id);


--
-- Name: product_supplier_taxes_rel_prod_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_supplier_taxes_rel
    ADD CONSTRAINT product_supplier_taxes_rel_prod_id_tax_id_key UNIQUE (prod_id, tax_id);


--
-- Name: product_supplierinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_pkey PRIMARY KEY (id);


--
-- Name: product_taxes_rel_prod_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_taxes_rel
    ADD CONSTRAINT product_taxes_rel_prod_id_tax_id_key UNIQUE (prod_id, tax_id);


--
-- Name: product_template_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_pkey PRIMARY KEY (id);


--
-- Name: product_ul_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_pkey PRIMARY KEY (id);


--
-- Name: product_uom_categ_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_pkey PRIMARY KEY (id);


--
-- Name: product_uom_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_pkey PRIMARY KEY (id);


--
-- Name: project_account_analytic_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_account_analytic_line
    ADD CONSTRAINT project_account_analytic_line_pkey PRIMARY KEY (id);


--
-- Name: project_category_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_category
    ADD CONSTRAINT project_category_pkey PRIMARY KEY (id);


--
-- Name: project_category_project_issu_project_issue_id_project_cate_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_category_project_issue_rel
    ADD CONSTRAINT project_category_project_issu_project_issue_id_project_cate_key UNIQUE (project_issue_id, project_category_id);


--
-- Name: project_category_project_task_project_task_id_project_categ_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_category_project_task_rel
    ADD CONSTRAINT project_category_project_task_project_task_id_project_categ_key UNIQUE (project_task_id, project_category_id);


--
-- Name: project_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_config_settings
    ADD CONSTRAINT project_config_settings_pkey PRIMARY KEY (id);


--
-- Name: project_issue_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_pkey PRIMARY KEY (id);


--
-- Name: project_issue_version_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_issue_version
    ADD CONSTRAINT project_issue_version_pkey PRIMARY KEY (id);


--
-- Name: project_project_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_pkey PRIMARY KEY (id);


--
-- Name: project_task_delegate_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_pkey PRIMARY KEY (id);


--
-- Name: project_task_history_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_pkey PRIMARY KEY (id);


--
-- Name: project_task_parent_rel_parent_id_task_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_parent_id_task_id_key UNIQUE (parent_id, task_id);


--
-- Name: project_task_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_pkey PRIMARY KEY (id);


--
-- Name: project_task_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_pkey PRIMARY KEY (id);


--
-- Name: project_task_type_rel_type_id_project_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_type_id_project_id_key UNIQUE (type_id, project_id);


--
-- Name: project_task_work_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_pkey PRIMARY KEY (id);


--
-- Name: project_user_rel_project_id_uid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_project_id_uid_key UNIQUE (project_id, uid);


--
-- Name: purchase_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_config_settings
    ADD CONSTRAINT purchase_config_settings_pkey PRIMARY KEY (id);


--
-- Name: purchase_invoice_rel_purchase_id_invoice_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_invoice_rel
    ADD CONSTRAINT purchase_invoice_rel_purchase_id_invoice_id_key UNIQUE (purchase_id, invoice_id);


--
-- Name: purchase_order_group_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order_group
    ADD CONSTRAINT purchase_order_group_pkey PRIMARY KEY (id);


--
-- Name: purchase_order_line_invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order_line_invoice
    ADD CONSTRAINT purchase_order_line_invoice_pkey PRIMARY KEY (id);


--
-- Name: purchase_order_line_invoice_rel_order_line_id_invoice_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order_line_invoice_rel
    ADD CONSTRAINT purchase_order_line_invoice_rel_order_line_id_invoice_id_key UNIQUE (order_line_id, invoice_id);


--
-- Name: purchase_order_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_pkey PRIMARY KEY (id);


--
-- Name: purchase_order_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_name_uniq UNIQUE (name, company_id);


--
-- Name: purchase_order_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);


--
-- Name: purchase_order_taxe_ord_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY purchase_order_taxe
    ADD CONSTRAINT purchase_order_taxe_ord_id_tax_id_key UNIQUE (ord_id, tax_id);


--
-- Name: reconcile_account_rel_reconcile_id_account_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY reconcile_account_rel
    ADD CONSTRAINT reconcile_account_rel_reconcile_id_account_id_key UNIQUE (reconcile_id, account_id);


--
-- Name: rel_modules_langexport_wiz_id_module_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_wiz_id_module_id_key UNIQUE (wiz_id, module_id);


--
-- Name: rel_server_actions_server_id_action_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_server_id_action_id_key UNIQUE (server_id, action_id);


--
-- Name: repair_fee_line_tax_repair_fee_line_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY repair_fee_line_tax
    ADD CONSTRAINT repair_fee_line_tax_repair_fee_line_id_tax_id_key UNIQUE (repair_fee_line_id, tax_id);


--
-- Name: repair_operation_line_tax_repair_operation_line_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY repair_operation_line_tax
    ADD CONSTRAINT repair_operation_line_tax_repair_operation_line_id_tax_id_key UNIQUE (repair_operation_line_id, tax_id);


--
-- Name: report_paperformat_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY report_paperformat
    ADD CONSTRAINT report_paperformat_pkey PRIMARY KEY (id);


--
-- Name: report_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY report
    ADD CONSTRAINT report_pkey PRIMARY KEY (id);


--
-- Name: res_bank_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_pkey PRIMARY KEY (id);


--
-- Name: res_company_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_name_uniq UNIQUE (name);


--
-- Name: res_company_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_pkey PRIMARY KEY (id);


--
-- Name: res_company_users_rel_cid_user_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_cid_user_id_key UNIQUE (cid, user_id);


--
-- Name: res_config_installer_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_pkey PRIMARY KEY (id);


--
-- Name: res_config_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_pkey PRIMARY KEY (id);


--
-- Name: res_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_config_settings
    ADD CONSTRAINT res_config_settings_pkey PRIMARY KEY (id);


--
-- Name: res_country_code_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_code_uniq UNIQUE (code);


--
-- Name: res_country_group_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country_group
    ADD CONSTRAINT res_country_group_pkey PRIMARY KEY (id);


--
-- Name: res_country_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_name_uniq UNIQUE (name);


--
-- Name: res_country_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_pkey PRIMARY KEY (id);


--
-- Name: res_country_res_country_group_res_country_id_res_country_gr_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country_res_country_group_rel
    ADD CONSTRAINT res_country_res_country_group_res_country_id_res_country_gr_key UNIQUE (res_country_id, res_country_group_id);


--
-- Name: res_country_state_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_pkey PRIMARY KEY (id);


--
-- Name: res_currency_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_pkey PRIMARY KEY (id);


--
-- Name: res_currency_rate_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_pkey PRIMARY KEY (id);


--
-- Name: res_currency_unique_name_company_id; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_unique_name_company_id UNIQUE (name, company_id);


--
-- Name: res_font_name_font_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_font
    ADD CONSTRAINT res_font_name_font_uniq UNIQUE (family, name);


--
-- Name: res_font_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_font
    ADD CONSTRAINT res_font_pkey PRIMARY KEY (id);


--
-- Name: res_groups_action_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_groups_implied_rel_gid_hid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_gid_hid_key UNIQUE (gid, hid);


--
-- Name: res_groups_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_name_uniq UNIQUE (category_id, name);


--
-- Name: res_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_pkey PRIMARY KEY (id);


--
-- Name: res_groups_report_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_groups_users_rel_gid_uid_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_gid_uid_key UNIQUE (gid, uid);


--
-- Name: res_lang_code_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_code_key UNIQUE (code);


--
-- Name: res_lang_code_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_code_uniq UNIQUE (code);


--
-- Name: res_lang_name_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_name_key UNIQUE (name);


--
-- Name: res_lang_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_name_uniq UNIQUE (name);


--
-- Name: res_lang_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_type_field_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_pkey PRIMARY KEY (id);


--
-- Name: res_partner_category_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_pkey PRIMARY KEY (id);


--
-- Name: res_partner_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_pkey PRIMARY KEY (id);


--
-- Name: res_partner_res_partner_category_rel_category_id_partner_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_res_partner_category_rel
    ADD CONSTRAINT res_partner_res_partner_category_rel_category_id_partner_id_key UNIQUE (category_id, partner_id);


--
-- Name: res_partner_title_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_pkey PRIMARY KEY (id);


--
-- Name: res_request_link_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_pkey PRIMARY KEY (id);


--
-- Name: res_users_login_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_login_key UNIQUE (login);


--
-- Name: res_users_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_pkey PRIMARY KEY (id);


--
-- Name: resource_calendar_attendance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_pkey PRIMARY KEY (id);


--
-- Name: resource_calendar_leaves_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_pkey PRIMARY KEY (id);


--
-- Name: resource_calendar_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_pkey PRIMARY KEY (id);


--
-- Name: resource_resource_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_pkey PRIMARY KEY (id);


--
-- Name: rule_group_rel_rule_group_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_rule_group_id_group_id_key UNIQUE (rule_group_id, group_id);


--
-- Name: sale_advance_payment_inv_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_advance_payment_inv
    ADD CONSTRAINT sale_advance_payment_inv_pkey PRIMARY KEY (id);


--
-- Name: sale_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_config_settings
    ADD CONSTRAINT sale_config_settings_pkey PRIMARY KEY (id);


--
-- Name: sale_exception_confirm_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_exception_confirm
    ADD CONSTRAINT sale_exception_confirm_pkey PRIMARY KEY (id);


--
-- Name: sale_exception_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_exception
    ADD CONSTRAINT sale_exception_pkey PRIMARY KEY (id);


--
-- Name: sale_exception_sale_exception_sale_exception_confirm_id_sal_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_exception_sale_exception_confirm_rel
    ADD CONSTRAINT sale_exception_sale_exception_sale_exception_confirm_id_sal_key UNIQUE (sale_exception_confirm_id, sale_exception_id);


--
-- Name: sale_make_invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_make_invoice
    ADD CONSTRAINT sale_make_invoice_pkey PRIMARY KEY (id);


--
-- Name: sale_member_rel_section_id_member_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_section_id_member_id_key UNIQUE (section_id, member_id);


--
-- Name: sale_order_category_rel_order_id_category_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_category_rel
    ADD CONSTRAINT sale_order_category_rel_order_id_category_id_key UNIQUE (order_id, category_id);


--
-- Name: sale_order_exception_rel_exception_id_sale_order_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_exception_rel
    ADD CONSTRAINT sale_order_exception_rel_exception_id_sale_order_id_key UNIQUE (exception_id, sale_order_id);


--
-- Name: sale_order_invoice_rel_order_id_invoice_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_invoice_rel
    ADD CONSTRAINT sale_order_invoice_rel_order_id_invoice_id_key UNIQUE (order_id, invoice_id);


--
-- Name: sale_order_line_invoice_rel_order_line_id_invoice_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_line_invoice_rel
    ADD CONSTRAINT sale_order_line_invoice_rel_order_line_id_invoice_id_key UNIQUE (order_line_id, invoice_id);


--
-- Name: sale_order_line_make_invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_line_make_invoice
    ADD CONSTRAINT sale_order_line_make_invoice_pkey PRIMARY KEY (id);


--
-- Name: sale_order_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_pkey PRIMARY KEY (id);


--
-- Name: sale_order_line_property_rel_order_id_property_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_line_property_rel
    ADD CONSTRAINT sale_order_line_property_rel_order_id_property_id_key UNIQUE (order_id, property_id);


--
-- Name: sale_order_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_name_uniq UNIQUE (name, company_id);


--
-- Name: sale_order_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_pkey PRIMARY KEY (id);


--
-- Name: sale_order_tax_order_line_id_tax_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_tax
    ADD CONSTRAINT sale_order_tax_order_line_id_tax_id_key UNIQUE (order_line_id, tax_id);


--
-- Name: sale_order_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_pkey PRIMARY KEY (id);


--
-- Name: section_claim_stage_rel_stage_id_section_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY section_claim_stage_rel
    ADD CONSTRAINT section_claim_stage_rel_stage_id_section_id_key UNIQUE (stage_id, section_id);


--
-- Name: section_stage_rel_stage_id_section_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_stage_id_section_id_key UNIQUE (stage_id, section_id);


--
-- Name: share_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY share_wizard
    ADD CONSTRAINT share_wizard_pkey PRIMARY KEY (id);


--
-- Name: share_wizard_result_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY share_wizard_result_line
    ADD CONSTRAINT share_wizard_result_line_pkey PRIMARY KEY (id);


--
-- Name: stock_change_product_qty_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_pkey PRIMARY KEY (id);


--
-- Name: stock_change_standard_price_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_change_standard_price
    ADD CONSTRAINT stock_change_standard_price_pkey PRIMARY KEY (id);


--
-- Name: stock_config_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_config_settings
    ADD CONSTRAINT stock_config_settings_pkey PRIMARY KEY (id);


--
-- Name: stock_fixed_putaway_strat_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_pkey PRIMARY KEY (id);


--
-- Name: stock_incoterms_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_incoterms
    ADD CONSTRAINT stock_incoterms_pkey PRIMARY KEY (id);


--
-- Name: stock_inventory_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_pkey PRIMARY KEY (id);


--
-- Name: stock_inventory_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_pkey PRIMARY KEY (id);


--
-- Name: stock_invoice_onshipping_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_invoice_onshipping
    ADD CONSTRAINT stock_invoice_onshipping_pkey PRIMARY KEY (id);


--
-- Name: stock_location_loc_barcode_company_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_loc_barcode_company_uniq UNIQUE (loc_barcode, company_id);


--
-- Name: stock_location_path_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_pkey PRIMARY KEY (id);


--
-- Name: stock_location_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_pkey PRIMARY KEY (id);


--
-- Name: stock_location_route_categ_categ_id_route_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location_route_categ
    ADD CONSTRAINT stock_location_route_categ_categ_id_route_id_key UNIQUE (categ_id, route_id);


--
-- Name: stock_location_route_move_move_id_route_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location_route_move
    ADD CONSTRAINT stock_location_route_move_move_id_route_id_key UNIQUE (move_id, route_id);


--
-- Name: stock_location_route_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_pkey PRIMARY KEY (id);


--
-- Name: stock_location_route_procurement_procurement_id_route_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_location_route_procurement
    ADD CONSTRAINT stock_location_route_procurement_procurement_id_route_id_key UNIQUE (procurement_id, route_id);


--
-- Name: stock_move_consume_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_pkey PRIMARY KEY (id);


--
-- Name: stock_move_operation_link_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_pkey PRIMARY KEY (id);


--
-- Name: stock_move_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_pkey PRIMARY KEY (id);


--
-- Name: stock_move_scrap_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_pkey PRIMARY KEY (id);


--
-- Name: stock_pack_operation_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_pkey PRIMARY KEY (id);


--
-- Name: stock_picking_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_name_uniq UNIQUE (name, company_id);


--
-- Name: stock_picking_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_pkey PRIMARY KEY (id);


--
-- Name: stock_picking_type_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_pkey PRIMARY KEY (id);


--
-- Name: stock_production_lot_name_ref_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_production_lot
    ADD CONSTRAINT stock_production_lot_name_ref_uniq UNIQUE (name, ref, product_id);


--
-- Name: stock_production_lot_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_production_lot
    ADD CONSTRAINT stock_production_lot_pkey PRIMARY KEY (id);


--
-- Name: stock_quant_move_rel_quant_id_move_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_quant_move_rel
    ADD CONSTRAINT stock_quant_move_rel_quant_id_move_id_key UNIQUE (quant_id, move_id);


--
-- Name: stock_quant_package_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_pkey PRIMARY KEY (id);


--
-- Name: stock_quant_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_pkey PRIMARY KEY (id);


--
-- Name: stock_return_picking_line_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_pkey PRIMARY KEY (id);


--
-- Name: stock_return_picking_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_return_picking
    ADD CONSTRAINT stock_return_picking_pkey PRIMARY KEY (id);


--
-- Name: stock_route_product_product_id_route_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_route_product
    ADD CONSTRAINT stock_route_product_product_id_route_id_key UNIQUE (product_id, route_id);


--
-- Name: stock_route_warehouse_warehouse_id_route_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_route_warehouse
    ADD CONSTRAINT stock_route_warehouse_warehouse_id_route_id_key UNIQUE (warehouse_id, route_id);


--
-- Name: stock_transfer_details_items_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_pkey PRIMARY KEY (id);


--
-- Name: stock_transfer_details_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_transfer_details
    ADD CONSTRAINT stock_transfer_details_pkey PRIMARY KEY (id);


--
-- Name: stock_warehouse_orderpoint_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_pkey PRIMARY KEY (id);


--
-- Name: stock_warehouse_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_pkey PRIMARY KEY (id);


--
-- Name: stock_warehouse_warehouse_code_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_warehouse_code_uniq UNIQUE (code, company_id);


--
-- Name: stock_warehouse_warehouse_name_uniq; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_warehouse_name_uniq UNIQUE (name, company_id);


--
-- Name: stock_wh_resupply_table_supplied_wh_id_supplier_wh_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY stock_wh_resupply_table
    ADD CONSTRAINT stock_wh_resupply_table_supplied_wh_id_supplier_wh_id_key UNIQUE (supplied_wh_id, supplier_wh_id);


--
-- Name: subscription_document_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY subscription_document_fields
    ADD CONSTRAINT subscription_document_fields_pkey PRIMARY KEY (id);


--
-- Name: subscription_document_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY subscription_document
    ADD CONSTRAINT subscription_document_pkey PRIMARY KEY (id);


--
-- Name: subscription_subscription_history_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY subscription_subscription_history
    ADD CONSTRAINT subscription_subscription_history_pkey PRIMARY KEY (id);


--
-- Name: subscription_subscription_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY subscription_subscription
    ADD CONSTRAINT subscription_subscription_pkey PRIMARY KEY (id);


--
-- Name: temp_range_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY temp_range
    ADD CONSTRAINT temp_range_pkey PRIMARY KEY (id);


--
-- Name: validate_account_move_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY validate_account_move_lines
    ADD CONSTRAINT validate_account_move_lines_pkey PRIMARY KEY (id);


--
-- Name: validate_account_move_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY validate_account_move
    ADD CONSTRAINT validate_account_move_pkey PRIMARY KEY (id);


--
-- Name: wizard_ir_model_menu_create_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_pkey PRIMARY KEY (id);


--
-- Name: wizard_multi_charts_accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_pkey PRIMARY KEY (id);


--
-- Name: wizard_validate_account_move_journal_wizard_id_journal_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wizard_validate_account_move_journal
    ADD CONSTRAINT wizard_validate_account_move_journal_wizard_id_journal_id_key UNIQUE (wizard_id, journal_id);


--
-- Name: wizard_validate_account_move_period_wizard_id_period_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wizard_validate_account_move_period
    ADD CONSTRAINT wizard_validate_account_move_period_wizard_id_period_id_key UNIQUE (wizard_id, period_id);


--
-- Name: wizard_valuation_history_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wizard_valuation_history
    ADD CONSTRAINT wizard_valuation_history_pkey PRIMARY KEY (id);


--
-- Name: wkf_activity_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_pkey PRIMARY KEY (id);


--
-- Name: wkf_instance_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_instance
    ADD CONSTRAINT wkf_instance_pkey PRIMARY KEY (id);


--
-- Name: wkf_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_pkey PRIMARY KEY (id);


--
-- Name: wkf_transition_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_pkey PRIMARY KEY (id);


--
-- Name: wkf_triggers_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_pkey PRIMARY KEY (id);


--
-- Name: wkf_witm_trans_inst_id_trans_id_key; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_witm_trans
    ADD CONSTRAINT wkf_witm_trans_inst_id_trans_id_key UNIQUE (inst_id, trans_id);


--
-- Name: wkf_workitem_pkey; Type: CONSTRAINT; Schema: public; Owner: odoo; Tablespace: 
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_pkey PRIMARY KEY (id);


--
-- Name: account_account_active_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_active_index ON account_account USING btree (active);


--
-- Name: account_account_code_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_code_index ON account_account USING btree (code);


--
-- Name: account_account_consol_rel_child_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_consol_rel_child_id_index ON account_account_consol_rel USING btree (child_id);


--
-- Name: account_account_consol_rel_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_consol_rel_parent_id_index ON account_account_consol_rel USING btree (parent_id);


--
-- Name: account_account_financial_report_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_financial_report_account_id_index ON account_account_financial_report USING btree (account_id);


--
-- Name: account_account_financial_report_report_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_financial_report_report_line_id_index ON account_account_financial_report USING btree (report_line_id);


--
-- Name: account_account_financial_report_type_account_type_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_financial_report_type_account_type_id_index ON account_account_financial_report_type USING btree (account_type_id);


--
-- Name: account_account_financial_report_type_report_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_financial_report_type_report_id_index ON account_account_financial_report_type USING btree (report_id);


--
-- Name: account_account_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_name_index ON account_account USING btree (name);


--
-- Name: account_account_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_parent_left_index ON account_account USING btree (parent_left);


--
-- Name: account_account_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_parent_right_index ON account_account USING btree (parent_right);


--
-- Name: account_account_tax_default_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_tax_default_rel_account_id_index ON account_account_tax_default_rel USING btree (account_id);


--
-- Name: account_account_tax_default_rel_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_tax_default_rel_tax_id_index ON account_account_tax_default_rel USING btree (tax_id);


--
-- Name: account_account_template_code_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_template_code_index ON account_account_template USING btree (code);


--
-- Name: account_account_template_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_template_name_index ON account_account_template USING btree (name);


--
-- Name: account_account_template_tax_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_template_tax_rel_account_id_index ON account_account_template_tax_rel USING btree (account_id);


--
-- Name: account_account_template_tax_rel_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_template_tax_rel_tax_id_index ON account_account_template_tax_rel USING btree (tax_id);


--
-- Name: account_account_type_code_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_type_code_index ON account_account_type USING btree (code);


--
-- Name: account_account_type_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_type_rel_account_id_index ON account_account_type_rel USING btree (account_id);


--
-- Name: account_account_type_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_account_type_rel_journal_id_index ON account_account_type_rel USING btree (journal_id);


--
-- Name: account_aged_trial_balance_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_aged_trial_balance_journal_rel_account_id_index ON account_aged_trial_balance_journal_rel USING btree (account_id);


--
-- Name: account_aged_trial_balance_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_aged_trial_balance_journal_rel_journal_id_index ON account_aged_trial_balance_journal_rel USING btree (journal_id);


--
-- Name: account_analytic_account_code_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_account_code_index ON account_analytic_account USING btree (code);


--
-- Name: account_analytic_account_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_account_date_index ON account_analytic_account USING btree (date);


--
-- Name: account_analytic_account_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_account_parent_id_index ON account_analytic_account USING btree (parent_id);


--
-- Name: account_analytic_journal_name_journal_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_journal_name_journal_line_id_index ON account_analytic_journal_name USING btree (journal_line_id);


--
-- Name: account_analytic_journal_name_journal_print_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_journal_name_journal_print_id_index ON account_analytic_journal_name USING btree (journal_print_id);


--
-- Name: account_analytic_line_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_line_account_id_index ON account_analytic_line USING btree (account_id);


--
-- Name: account_analytic_line_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_line_date_index ON account_analytic_line USING btree (date);


--
-- Name: account_analytic_line_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_line_journal_id_index ON account_analytic_line USING btree (journal_id);


--
-- Name: account_analytic_line_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_analytic_line_move_id_index ON account_analytic_line USING btree (move_id);


--
-- Name: account_balance_report_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_balance_report_journal_rel_account_id_index ON account_balance_report_journal_rel USING btree (account_id);


--
-- Name: account_balance_report_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_balance_report_journal_rel_journal_id_index ON account_balance_report_journal_rel USING btree (journal_id);


--
-- Name: account_bank_statement_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_bank_statement_date_index ON account_bank_statement USING btree (date);


--
-- Name: account_bank_statement_line_sequence_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_bank_statement_line_sequence_index ON account_bank_statement_line USING btree (sequence);


--
-- Name: account_bank_statement_line_statement_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_bank_statement_line_statement_id_index ON account_bank_statement_line USING btree (statement_id);


--
-- Name: account_central_journal_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_central_journal_journal_rel_account_id_index ON account_central_journal_journal_rel USING btree (account_id);


--
-- Name: account_central_journal_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_central_journal_journal_rel_journal_id_index ON account_central_journal_journal_rel USING btree (journal_id);


--
-- Name: account_common_account_report_account_journal_rel_account_commo; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_account_report_account_journal_rel_account_commo ON account_common_account_report_account_journal_rel USING btree (account_common_account_report_id);


--
-- Name: account_common_account_report_account_journal_rel_account_journ; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_account_report_account_journal_rel_account_journ ON account_common_account_report_account_journal_rel USING btree (account_journal_id);


--
-- Name: account_common_journal_report_account_journal_rel_account_commo; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_journal_report_account_journal_rel_account_commo ON account_common_journal_report_account_journal_rel USING btree (account_common_journal_report_id);


--
-- Name: account_common_journal_report_account_journal_rel_account_journ; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_journal_report_account_journal_rel_account_journ ON account_common_journal_report_account_journal_rel USING btree (account_journal_id);


--
-- Name: account_common_partner_report_account_journal_rel_account_commo; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_partner_report_account_journal_rel_account_commo ON account_common_partner_report_account_journal_rel USING btree (account_common_partner_report_id);


--
-- Name: account_common_partner_report_account_journal_rel_account_journ; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_partner_report_account_journal_rel_account_journ ON account_common_partner_report_account_journal_rel USING btree (account_journal_id);


--
-- Name: account_common_report_account_journal_rel_account_common_report; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_report_account_journal_rel_account_common_report ON account_common_report_account_journal_rel USING btree (account_common_report_id);


--
-- Name: account_common_report_account_journal_rel_account_journal_id_in; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_common_report_account_journal_rel_account_journal_id_in ON account_common_report_account_journal_rel USING btree (account_journal_id);


--
-- Name: account_cutoff_account_journal_rel_cutoff_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_cutoff_account_journal_rel_cutoff_id_index ON account_cutoff_account_journal_rel USING btree (cutoff_id);


--
-- Name: account_cutoff_account_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_cutoff_account_journal_rel_journal_id_index ON account_cutoff_account_journal_rel USING btree (journal_id);


--
-- Name: account_cutoff_line_account_tax_rel_cutoff_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_cutoff_line_account_tax_rel_cutoff_line_id_index ON account_cutoff_line_account_tax_rel USING btree (cutoff_line_id);


--
-- Name: account_cutoff_line_account_tax_rel_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_cutoff_line_account_tax_rel_tax_id_index ON account_cutoff_line_account_tax_rel USING btree (tax_id);


--
-- Name: account_cutoff_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_cutoff_state_index ON account_cutoff USING btree (state);


--
-- Name: account_general_journal_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_general_journal_journal_rel_account_id_index ON account_general_journal_journal_rel USING btree (account_id);


--
-- Name: account_general_journal_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_general_journal_journal_rel_journal_id_index ON account_general_journal_journal_rel USING btree (journal_id);


--
-- Name: account_invoice_date_due_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_date_due_index ON account_invoice USING btree (date_due);


--
-- Name: account_invoice_date_invoice_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_date_invoice_index ON account_invoice USING btree (date_invoice);


--
-- Name: account_invoice_line_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_invoice_id_index ON account_invoice_line USING btree (invoice_id);


--
-- Name: account_invoice_line_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_product_id_index ON account_invoice_line USING btree (product_id);


--
-- Name: account_invoice_line_purchase_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_purchase_line_id_index ON account_invoice_line USING btree (purchase_line_id);


--
-- Name: account_invoice_line_tax_invoice_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_tax_invoice_line_id_index ON account_invoice_line_tax USING btree (invoice_line_id);


--
-- Name: account_invoice_line_tax_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_tax_tax_id_index ON account_invoice_line_tax USING btree (tax_id);


--
-- Name: account_invoice_line_uos_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_line_uos_id_index ON account_invoice_line USING btree (uos_id);


--
-- Name: account_invoice_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_move_id_index ON account_invoice USING btree (move_id);


--
-- Name: account_invoice_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_name_index ON account_invoice USING btree (name);


--
-- Name: account_invoice_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_state_index ON account_invoice USING btree (state);


--
-- Name: account_invoice_tax_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_tax_invoice_id_index ON account_invoice_tax USING btree (invoice_id);


--
-- Name: account_invoice_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_invoice_type_index ON account_invoice USING btree (type);


--
-- Name: account_journal_account_vat_declaration_rel_account_journal_id_; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_account_vat_declaration_rel_account_journal_id_ ON account_journal_account_vat_declaration_rel USING btree (account_journal_id);


--
-- Name: account_journal_account_vat_declaration_rel_account_vat_declara; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_account_vat_declaration_rel_account_vat_declara ON account_journal_account_vat_declaration_rel USING btree (account_vat_declaration_id);


--
-- Name: account_journal_accounting_report_rel_account_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_accounting_report_rel_account_journal_id_index ON account_journal_accounting_report_rel USING btree (account_journal_id);


--
-- Name: account_journal_accounting_report_rel_accounting_report_id_inde; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_accounting_report_rel_accounting_report_id_inde ON account_journal_accounting_report_rel USING btree (accounting_report_id);


--
-- Name: account_journal_cashbox_line_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_cashbox_line_journal_id_index ON account_journal_cashbox_line USING btree (journal_id);


--
-- Name: account_journal_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_company_id_index ON account_journal USING btree (company_id);


--
-- Name: account_journal_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_group_rel_group_id_index ON account_journal_group_rel USING btree (group_id);


--
-- Name: account_journal_group_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_group_rel_journal_id_index ON account_journal_group_rel USING btree (journal_id);


--
-- Name: account_journal_internal_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_internal_account_id_index ON account_journal USING btree (internal_account_id);


--
-- Name: account_journal_type_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_type_rel_journal_id_index ON account_journal_type_rel USING btree (journal_id);


--
-- Name: account_journal_type_rel_type_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_journal_type_rel_type_id_index ON account_journal_type_rel USING btree (type_id);


--
-- Name: account_model_line_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_model_line_model_id_index ON account_model_line USING btree (model_id);


--
-- Name: account_move_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_date_index ON account_move USING btree (date);


--
-- Name: account_move_line_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_account_id_index ON account_move_line USING btree (account_id);


--
-- Name: account_move_line_date_created_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_date_created_index ON account_move_line USING btree (date_created);


--
-- Name: account_move_line_date_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_date_id_index ON account_move_line USING btree (date DESC, id DESC);


--
-- Name: account_move_line_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_date_index ON account_move_line USING btree (date);


--
-- Name: account_move_line_date_maturity_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_date_maturity_index ON account_move_line USING btree (date_maturity);


--
-- Name: account_move_line_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_journal_id_index ON account_move_line USING btree (journal_id);


--
-- Name: account_move_line_journal_id_period_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_journal_id_period_id_index ON account_move_line USING btree (journal_id, period_id);


--
-- Name: account_move_line_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_move_id_index ON account_move_line USING btree (move_id);


--
-- Name: account_move_line_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_partner_id_index ON account_move_line USING btree (partner_id);


--
-- Name: account_move_line_period_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_period_id_index ON account_move_line USING btree (period_id);


--
-- Name: account_move_line_reconcile_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_reconcile_id_index ON account_move_line USING btree (reconcile_id);


--
-- Name: account_move_line_reconcile_partial_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_reconcile_partial_id_index ON account_move_line USING btree (reconcile_partial_id);


--
-- Name: account_move_line_relation_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_relation_line_id_index ON account_move_line_relation USING btree (line_id);


--
-- Name: account_move_line_relation_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_relation_move_id_index ON account_move_line_relation USING btree (move_id);


--
-- Name: account_move_line_statement_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_statement_id_index ON account_move_line USING btree (statement_id);


--
-- Name: account_move_line_tax_amount_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_move_line_tax_amount_index ON account_move_line USING btree (tax_amount);


--
-- Name: account_partner_balance_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_partner_balance_journal_rel_account_id_index ON account_partner_balance_journal_rel USING btree (account_id);


--
-- Name: account_partner_balance_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_partner_balance_journal_rel_journal_id_index ON account_partner_balance_journal_rel USING btree (journal_id);


--
-- Name: account_partner_ledger_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_partner_ledger_journal_rel_account_id_index ON account_partner_ledger_journal_rel USING btree (account_id);


--
-- Name: account_partner_ledger_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_partner_ledger_journal_rel_journal_id_index ON account_partner_ledger_journal_rel USING btree (journal_id);


--
-- Name: account_payment_term_line_payment_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_payment_term_line_payment_id_index ON account_payment_term_line USING btree (payment_id);


--
-- Name: account_period_fiscalyear_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_period_fiscalyear_id_index ON account_period USING btree (fiscalyear_id);


--
-- Name: account_print_journal_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_print_journal_journal_rel_account_id_index ON account_print_journal_journal_rel USING btree (account_id);


--
-- Name: account_print_journal_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_print_journal_journal_rel_journal_id_index ON account_print_journal_journal_rel USING btree (journal_id);


--
-- Name: account_report_general_ledger_journal_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_report_general_ledger_journal_rel_account_id_index ON account_report_general_ledger_journal_rel USING btree (account_id);


--
-- Name: account_report_general_ledger_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_report_general_ledger_journal_rel_journal_id_index ON account_report_general_ledger_journal_rel USING btree (journal_id);


--
-- Name: account_subscription_line_subscription_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_subscription_line_subscription_id_index ON account_subscription_line USING btree (subscription_id);


--
-- Name: account_tax_code_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_tax_code_parent_id_index ON account_tax_code USING btree (parent_id);


--
-- Name: account_tax_code_template_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_tax_code_template_parent_id_index ON account_tax_code_template USING btree (parent_id);


--
-- Name: account_tax_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_tax_parent_id_index ON account_tax USING btree (parent_id);


--
-- Name: account_tax_template_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_tax_template_parent_id_index ON account_tax_template USING btree (parent_id);


--
-- Name: account_template_financial_report_account_template_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_template_financial_report_account_template_id_index ON account_template_financial_report USING btree (account_template_id);


--
-- Name: account_template_financial_report_report_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_template_financial_report_report_line_id_index ON account_template_financial_report USING btree (report_line_id);


--
-- Name: account_use_model_relation_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_use_model_relation_account_id_index ON account_use_model_relation USING btree (account_id);


--
-- Name: account_use_model_relation_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_use_model_relation_model_id_index ON account_use_model_relation USING btree (model_id);


--
-- Name: account_voucher_date_due_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_voucher_date_due_index ON account_voucher USING btree (date_due);


--
-- Name: account_voucher_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_voucher_date_index ON account_voucher USING btree (date);


--
-- Name: account_voucher_pay_now_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX account_voucher_pay_now_index ON account_voucher USING btree (pay_now);


--
-- Name: act_window_view_unique_mode_per_action; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE UNIQUE INDEX act_window_view_unique_mode_per_action ON ir_act_window_view USING btree (act_window_id, view_mode);


--
-- Name: analytic_profit_emp_rel_analytic_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX analytic_profit_emp_rel_analytic_id_index ON analytic_profit_emp_rel USING btree (analytic_id);


--
-- Name: analytic_profit_emp_rel_emp_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX analytic_profit_emp_rel_emp_id_index ON analytic_profit_emp_rel USING btree (emp_id);


--
-- Name: analytic_profit_journal_rel_analytic_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX analytic_profit_journal_rel_analytic_id_index ON analytic_profit_journal_rel USING btree (analytic_id);


--
-- Name: analytic_profit_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX analytic_profit_journal_rel_journal_id_index ON analytic_profit_journal_rel USING btree (journal_id);


--
-- Name: base_action_rule_ir_act_server_rel_base_action_rule_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_action_rule_ir_act_server_rel_base_action_rule_id_index ON base_action_rule_ir_act_server_rel USING btree (base_action_rule_id);


--
-- Name: base_action_rule_ir_act_server_rel_ir_act_server_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_action_rule_ir_act_server_rel_ir_act_server_id_index ON base_action_rule_ir_act_server_rel USING btree (ir_act_server_id);


--
-- Name: base_action_rule_lead_test_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_action_rule_lead_test_name_index ON base_action_rule_lead_test USING btree (name);


--
-- Name: base_action_rule_res_partner_rel_base_action_rule_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_action_rule_res_partner_rel_base_action_rule_id_index ON base_action_rule_res_partner_rel USING btree (base_action_rule_id);


--
-- Name: base_action_rule_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_action_rule_res_partner_rel_res_partner_id_index ON base_action_rule_res_partner_rel USING btree (res_partner_id);


--
-- Name: base_module_record_model_rel_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_module_record_model_rel_model_id_index ON base_module_record_model_rel USING btree (model_id);


--
-- Name: base_module_record_model_rel_wizard_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_module_record_model_rel_wizard_id_index ON base_module_record_model_rel USING btree (wizard_id);


--
-- Name: base_partner_merge_automatic_wizard_res_partner_rel_base_partne; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_partner_merge_automatic_wizard_res_partner_rel_base_partne ON base_partner_merge_automatic_wizard_res_partner_rel USING btree (base_partner_merge_automatic_wizard_id);


--
-- Name: base_partner_merge_automatic_wizard_res_partner_rel_res_partner; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX base_partner_merge_automatic_wizard_res_partner_rel_res_partner ON base_partner_merge_automatic_wizard_res_partner_rel USING btree (res_partner_id);


--
-- Name: calendar_alarm_calendar_event_rel_calendar_alarm_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX calendar_alarm_calendar_event_rel_calendar_alarm_id_index ON calendar_alarm_calendar_event_rel USING btree (calendar_alarm_id);


--
-- Name: calendar_alarm_calendar_event_rel_calendar_event_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX calendar_alarm_calendar_event_rel_calendar_event_id_index ON calendar_alarm_calendar_event_rel USING btree (calendar_event_id);


--
-- Name: calendar_event_res_partner_rel_calendar_event_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX calendar_event_res_partner_rel_calendar_event_id_index ON calendar_event_res_partner_rel USING btree (calendar_event_id);


--
-- Name: calendar_event_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX calendar_event_res_partner_rel_res_partner_id_index ON calendar_event_res_partner_rel USING btree (res_partner_id);


--
-- Name: crm_claim_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_claim_date_index ON crm_claim USING btree (date);


--
-- Name: crm_claim_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_claim_section_id_index ON crm_claim USING btree (section_id);


--
-- Name: crm_helpdesk_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_helpdesk_section_id_index ON crm_helpdesk USING btree (section_id);


--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel_crm_lead2opport; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_res_users_rel_crm_lead2opport ON crm_lead2opportunity_partner_mass_res_users_rel USING btree (crm_lead2opportunity_partner_mass_id);


--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel_res_users_id_in; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_res_users_rel_res_users_id_in ON crm_lead2opportunity_partner_mass_res_users_rel USING btree (res_users_id);


--
-- Name: crm_lead2opportunity_partner_mass_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_section_id_index ON crm_lead2opportunity_partner_mass USING btree (section_id);


--
-- Name: crm_lead2opportunity_partner_mass_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_user_id_index ON crm_lead2opportunity_partner_mass USING btree (user_id);


--
-- Name: crm_lead2opportunity_partner_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_section_id_index ON crm_lead2opportunity_partner USING btree (section_id);


--
-- Name: crm_lead2opportunity_partner_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_user_id_index ON crm_lead2opportunity_partner USING btree (user_id);


--
-- Name: crm_lead_category_rel_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_category_rel_category_id_index ON crm_lead_category_rel USING btree (category_id);


--
-- Name: crm_lead_category_rel_lead_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_category_rel_lead_id_index ON crm_lead_category_rel USING btree (lead_id);


--
-- Name: crm_lead_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_company_id_index ON crm_lead USING btree (company_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead2opportu; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead2opportu ON crm_lead_crm_lead2opportunity_partner_mass_rel USING btree (crm_lead2opportunity_partner_mass_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_inde; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_inde ON crm_lead_crm_lead2opportunity_partner_mass_rel USING btree (crm_lead_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead2opportunity_; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_rel_crm_lead2opportunity_ ON crm_lead_crm_lead2opportunity_partner_rel USING btree (crm_lead2opportunity_partner_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_index ON crm_lead_crm_lead2opportunity_partner_rel USING btree (crm_lead_id);


--
-- Name: crm_lead_date_action_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_date_action_index ON crm_lead USING btree (date_action);


--
-- Name: crm_lead_date_last_stage_update_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_date_last_stage_update_index ON crm_lead USING btree (date_last_stage_update);


--
-- Name: crm_lead_email_from_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_email_from_index ON crm_lead USING btree (email_from);


--
-- Name: crm_lead_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_name_index ON crm_lead USING btree (name);


--
-- Name: crm_lead_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_partner_id_index ON crm_lead USING btree (partner_id);


--
-- Name: crm_lead_partner_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_partner_name_index ON crm_lead USING btree (partner_name);


--
-- Name: crm_lead_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_priority_index ON crm_lead USING btree (priority);


--
-- Name: crm_lead_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_section_id_index ON crm_lead USING btree (section_id);


--
-- Name: crm_lead_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_stage_id_index ON crm_lead USING btree (stage_id);


--
-- Name: crm_lead_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_type_index ON crm_lead USING btree (type);


--
-- Name: crm_lead_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_lead_user_id_index ON crm_lead USING btree (user_id);


--
-- Name: crm_merge_opportunity_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_merge_opportunity_section_id_index ON crm_merge_opportunity USING btree (section_id);


--
-- Name: crm_merge_opportunity_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_merge_opportunity_user_id_index ON crm_merge_opportunity USING btree (user_id);


--
-- Name: crm_phonecall2phonecall_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_phonecall2phonecall_name_index ON crm_phonecall2phonecall USING btree (name);


--
-- Name: crm_phonecall_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX crm_phonecall_section_id_index ON crm_phonecall USING btree (section_id);


--
-- Name: decimal_precision_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX decimal_precision_name_index ON decimal_precision USING btree (name);


--
-- Name: delivery_grid_country_rel_country_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX delivery_grid_country_rel_country_id_index ON delivery_grid_country_rel USING btree (country_id);


--
-- Name: delivery_grid_country_rel_grid_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX delivery_grid_country_rel_grid_id_index ON delivery_grid_country_rel USING btree (grid_id);


--
-- Name: delivery_grid_state_rel_grid_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX delivery_grid_state_rel_grid_id_index ON delivery_grid_state_rel USING btree (grid_id);


--
-- Name: delivery_grid_state_rel_state_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX delivery_grid_state_rel_state_id_index ON delivery_grid_state_rel USING btree (state_id);


--
-- Name: email_template_attachment_rel_attachment_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_attachment_rel_attachment_id_index ON email_template_attachment_rel USING btree (attachment_id);


--
-- Name: email_template_attachment_rel_email_template_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_attachment_rel_email_template_id_index ON email_template_attachment_rel USING btree (email_template_id);


--
-- Name: email_template_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_model_index ON email_template USING btree (model);


--
-- Name: email_template_preview_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_preview_model_index ON email_template_preview USING btree (model);


--
-- Name: email_template_preview_res_partner_rel_email_template_preview_i; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_preview_res_partner_rel_email_template_preview_i ON email_template_preview_res_partner_rel USING btree (email_template_preview_id);


--
-- Name: email_template_preview_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX email_template_preview_res_partner_rel_res_partner_id_index ON email_template_preview_res_partner_rel USING btree (res_partner_id);


--
-- Name: employee_category_rel_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX employee_category_rel_category_id_index ON employee_category_rel USING btree (category_id);


--
-- Name: employee_category_rel_emp_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX employee_category_rel_emp_id_index ON employee_category_rel USING btree (emp_id);


--
-- Name: fetchmail_server_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX fetchmail_server_state_index ON fetchmail_server USING btree (state);


--
-- Name: fetchmail_server_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX fetchmail_server_type_index ON fetchmail_server USING btree (type);


--
-- Name: hr_attendance_employee_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_attendance_employee_id_index ON hr_attendance USING btree (employee_id);


--
-- Name: hr_attendance_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_attendance_name_index ON hr_attendance USING btree (name);


--
-- Name: hr_department_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_department_company_id_index ON hr_department USING btree (company_id);


--
-- Name: hr_department_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_department_parent_id_index ON hr_department USING btree (parent_id);


--
-- Name: hr_employee_category_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_employee_category_parent_id_index ON hr_employee_category USING btree (parent_id);


--
-- Name: hr_job_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX hr_job_name_index ON hr_job USING btree (name);


--
-- Name: im_chat_message_create_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX im_chat_message_create_date_index ON im_chat_message USING btree (create_date);


--
-- Name: im_chat_message_to_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX im_chat_message_to_id_index ON im_chat_message USING btree (to_id);


--
-- Name: im_chat_presence_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX im_chat_presence_user_id_index ON im_chat_presence USING btree (user_id);


--
-- Name: im_chat_session_uuid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX im_chat_session_uuid_index ON im_chat_session USING btree (uuid);


--
-- Name: ir_act_window_group_rel_act_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_act_window_group_rel_act_id_index ON ir_act_window_group_rel USING btree (act_id);


--
-- Name: ir_act_window_group_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_act_window_group_rel_gid_index ON ir_act_window_group_rel USING btree (gid);


--
-- Name: ir_actions_todo_action_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_actions_todo_action_id_index ON ir_actions_todo USING btree (action_id);


--
-- Name: ir_attachment_res_idx; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_attachment_res_idx ON ir_attachment USING btree (res_model, res_id);


--
-- Name: ir_config_parameter_groups_rel_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_config_parameter_groups_rel_group_id_index ON ir_config_parameter_groups_rel USING btree (group_id);


--
-- Name: ir_config_parameter_groups_rel_icp_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_config_parameter_groups_rel_icp_id_index ON ir_config_parameter_groups_rel USING btree (icp_id);


--
-- Name: ir_config_parameter_key_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_config_parameter_key_index ON ir_config_parameter USING btree (key);


--
-- Name: ir_exports_line_export_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_exports_line_export_id_index ON ir_exports_line USING btree (export_id);


--
-- Name: ir_exports_resource_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_exports_resource_index ON ir_exports USING btree (resource);


--
-- Name: ir_filters_name_model_uid_unique_action_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE UNIQUE INDEX ir_filters_name_model_uid_unique_action_index ON ir_filters USING btree (lower((name)::text), model_id, (COALESCE(user_id, (-1))), (COALESCE(action_id, (-1))));


--
-- Name: ir_logging_dbname_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_logging_dbname_index ON ir_logging USING btree (dbname);


--
-- Name: ir_logging_level_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_logging_level_index ON ir_logging USING btree (level);


--
-- Name: ir_logging_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_logging_type_index ON ir_logging USING btree (type);


--
-- Name: ir_mail_server_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_mail_server_name_index ON ir_mail_server USING btree (name);


--
-- Name: ir_model_access_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_access_group_id_index ON ir_model_access USING btree (group_id);


--
-- Name: ir_model_access_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_access_model_id_index ON ir_model_access USING btree (model_id);


--
-- Name: ir_model_access_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_access_name_index ON ir_model_access USING btree (name);


--
-- Name: ir_model_constraint_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_constraint_model_index ON ir_model_constraint USING btree (model);


--
-- Name: ir_model_constraint_module_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_constraint_module_index ON ir_model_constraint USING btree (module);


--
-- Name: ir_model_constraint_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_constraint_name_index ON ir_model_constraint USING btree (name);


--
-- Name: ir_model_constraint_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_constraint_type_index ON ir_model_constraint USING btree (type);


--
-- Name: ir_model_data_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_data_model_index ON ir_model_data USING btree (model);


--
-- Name: ir_model_data_module_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_data_module_index ON ir_model_data USING btree (module);


--
-- Name: ir_model_data_module_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_data_module_name_index ON ir_model_data USING btree (module, name);


--
-- Name: ir_model_data_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_data_name_index ON ir_model_data USING btree (name);


--
-- Name: ir_model_data_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_data_res_id_index ON ir_model_data USING btree (res_id);


--
-- Name: ir_model_fields_complete_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_complete_name_index ON ir_model_fields USING btree (complete_name);


--
-- Name: ir_model_fields_group_rel_field_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_group_rel_field_id_index ON ir_model_fields_group_rel USING btree (field_id);


--
-- Name: ir_model_fields_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_group_rel_group_id_index ON ir_model_fields_group_rel USING btree (group_id);


--
-- Name: ir_model_fields_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_model_id_index ON ir_model_fields USING btree (model_id);


--
-- Name: ir_model_fields_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_model_index ON ir_model_fields USING btree (model);


--
-- Name: ir_model_fields_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_name_index ON ir_model_fields USING btree (name);


--
-- Name: ir_model_fields_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_fields_state_index ON ir_model_fields USING btree (state);


--
-- Name: ir_model_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_model_index ON ir_model USING btree (model);


--
-- Name: ir_model_relation_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_relation_model_index ON ir_model_relation USING btree (model);


--
-- Name: ir_model_relation_module_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_relation_module_index ON ir_model_relation USING btree (module);


--
-- Name: ir_model_relation_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_model_relation_name_index ON ir_model_relation USING btree (name);


--
-- Name: ir_module_category_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_category_name_index ON ir_module_category USING btree (name);


--
-- Name: ir_module_category_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_category_parent_id_index ON ir_module_category USING btree (parent_id);


--
-- Name: ir_module_module_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_module_category_id_index ON ir_module_module USING btree (category_id);


--
-- Name: ir_module_module_dependency_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_module_dependency_name_index ON ir_module_module_dependency USING btree (name);


--
-- Name: ir_module_module_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_module_name_index ON ir_module_module USING btree (name);


--
-- Name: ir_module_module_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_module_module_state_index ON ir_module_module USING btree (state);


--
-- Name: ir_property_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_property_company_id_index ON ir_property USING btree (company_id);


--
-- Name: ir_property_fields_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_property_fields_id_index ON ir_property USING btree (fields_id);


--
-- Name: ir_property_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_property_name_index ON ir_property USING btree (name);


--
-- Name: ir_property_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_property_res_id_index ON ir_property USING btree (res_id);


--
-- Name: ir_property_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_property_type_index ON ir_property USING btree (type);


--
-- Name: ir_rule_model_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_rule_model_id_index ON ir_rule USING btree (model_id);


--
-- Name: ir_rule_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_rule_name_index ON ir_rule USING btree (name);


--
-- Name: ir_translation_comments_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_comments_index ON ir_translation USING btree (comments);


--
-- Name: ir_translation_ltn; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_ltn ON ir_translation USING btree (name, lang, type);


--
-- Name: ir_translation_module_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_module_index ON ir_translation USING btree (module);


--
-- Name: ir_translation_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_res_id_index ON ir_translation USING btree (res_id);


--
-- Name: ir_translation_src_hash_idx; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_src_hash_idx ON ir_translation USING hash (src);


--
-- Name: ir_translation_type_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_translation_type_index ON ir_translation USING btree (type);


--
-- Name: ir_ui_menu_group_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_menu_group_rel_gid_index ON ir_ui_menu_group_rel USING btree (gid);


--
-- Name: ir_ui_menu_group_rel_menu_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_menu_group_rel_menu_id_index ON ir_ui_menu_group_rel USING btree (menu_id);


--
-- Name: ir_ui_menu_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_menu_parent_id_index ON ir_ui_menu USING btree (parent_id);


--
-- Name: ir_ui_menu_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_menu_parent_left_index ON ir_ui_menu USING btree (parent_left);


--
-- Name: ir_ui_menu_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_menu_parent_right_index ON ir_ui_menu USING btree (parent_right);


--
-- Name: ir_ui_view_custom_ref_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_ref_id_index ON ir_ui_view_custom USING btree (ref_id);


--
-- Name: ir_ui_view_custom_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_user_id_index ON ir_ui_view_custom USING btree (user_id);


--
-- Name: ir_ui_view_custom_user_id_ref_id; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_user_id_ref_id ON ir_ui_view_custom USING btree (user_id, ref_id);


--
-- Name: ir_ui_view_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_group_rel_group_id_index ON ir_ui_view_group_rel USING btree (group_id);


--
-- Name: ir_ui_view_group_rel_view_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_group_rel_view_id_index ON ir_ui_view_group_rel USING btree (view_id);


--
-- Name: ir_ui_view_inherit_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_inherit_id_index ON ir_ui_view USING btree (inherit_id);


--
-- Name: ir_ui_view_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_model_index ON ir_ui_view USING btree (model);


--
-- Name: ir_ui_view_model_type_inherit_id; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_ui_view_model_type_inherit_id ON ir_ui_view USING btree (model, inherit_id);


--
-- Name: ir_values_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_company_id_index ON ir_values USING btree (company_id);


--
-- Name: ir_values_key2_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_key2_index ON ir_values USING btree (key2);


--
-- Name: ir_values_key_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_key_index ON ir_values USING btree (key);


--
-- Name: ir_values_key_model_key2_res_id_user_id_idx; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_key_model_key2_res_id_user_id_idx ON ir_values USING btree (key, model, key2, res_id, user_id);


--
-- Name: ir_values_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_model_index ON ir_values USING btree (model);


--
-- Name: ir_values_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_res_id_index ON ir_values USING btree (res_id);


--
-- Name: ir_values_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ir_values_user_id_index ON ir_values USING btree (user_id);


--
-- Name: ledger_journal_rel_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ledger_journal_rel_journal_id_index ON ledger_journal_rel USING btree (journal_id);


--
-- Name: ledger_journal_rel_ledger_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX ledger_journal_rel_ledger_id_index ON ledger_journal_rel USING btree (ledger_id);


--
-- Name: mail_compose_message_author_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_author_id_index ON mail_compose_message USING btree (author_id);


--
-- Name: mail_compose_message_ir_attachments_rel_attachment_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_ir_attachments_rel_attachment_id_index ON mail_compose_message_ir_attachments_rel USING btree (attachment_id);


--
-- Name: mail_compose_message_ir_attachments_rel_wizard_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_ir_attachments_rel_wizard_id_index ON mail_compose_message_ir_attachments_rel USING btree (wizard_id);


--
-- Name: mail_compose_message_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_message_id_index ON mail_compose_message USING btree (message_id);


--
-- Name: mail_compose_message_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_model_index ON mail_compose_message USING btree (model);


--
-- Name: mail_compose_message_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_parent_id_index ON mail_compose_message USING btree (parent_id);


--
-- Name: mail_compose_message_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_res_id_index ON mail_compose_message USING btree (res_id);


--
-- Name: mail_compose_message_res_partner_rel_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_res_partner_rel_partner_id_index ON mail_compose_message_res_partner_rel USING btree (partner_id);


--
-- Name: mail_compose_message_res_partner_rel_wizard_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_res_partner_rel_wizard_id_index ON mail_compose_message_res_partner_rel USING btree (wizard_id);


--
-- Name: mail_compose_message_subtype_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_subtype_id_index ON mail_compose_message USING btree (subtype_id);


--
-- Name: mail_compose_message_template_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_compose_message_template_id_index ON mail_compose_message USING btree (template_id);


--
-- Name: mail_followers_mail_message_subtype_rel_mail_followers_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_followers_mail_message_subtype_rel_mail_followers_id_index ON mail_followers_mail_message_subtype_rel USING btree (mail_followers_id);


--
-- Name: mail_followers_mail_message_subtype_rel_mail_message_subtype_id; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_followers_mail_message_subtype_rel_mail_message_subtype_id ON mail_followers_mail_message_subtype_rel USING btree (mail_message_subtype_id);


--
-- Name: mail_followers_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_followers_partner_id_index ON mail_followers USING btree (partner_id);


--
-- Name: mail_followers_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_followers_res_id_index ON mail_followers USING btree (res_id);


--
-- Name: mail_followers_res_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_followers_res_model_index ON mail_followers USING btree (res_model);


--
-- Name: mail_group_res_group_rel_groups_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_group_res_group_rel_groups_id_index ON mail_group_res_group_rel USING btree (groups_id);


--
-- Name: mail_group_res_group_rel_mail_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_group_res_group_rel_mail_group_id_index ON mail_group_res_group_rel USING btree (mail_group_id);


--
-- Name: mail_mail_fetchmail_server_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_mail_fetchmail_server_id_index ON mail_mail USING btree (fetchmail_server_id);


--
-- Name: mail_mail_res_partner_rel_mail_mail_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_mail_res_partner_rel_mail_mail_id_index ON mail_mail_res_partner_rel USING btree (mail_mail_id);


--
-- Name: mail_mail_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_mail_res_partner_rel_res_partner_id_index ON mail_mail_res_partner_rel USING btree (res_partner_id);


--
-- Name: mail_message_author_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_author_id_index ON mail_message USING btree (author_id);


--
-- Name: mail_message_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_message_id_index ON mail_message USING btree (message_id);


--
-- Name: mail_message_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_model_index ON mail_message USING btree (model);


--
-- Name: mail_message_model_res_id_idx; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_model_res_id_idx ON mail_message USING btree (model, res_id);


--
-- Name: mail_message_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_parent_id_index ON mail_message USING btree (parent_id);


--
-- Name: mail_message_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_res_id_index ON mail_message USING btree (res_id);


--
-- Name: mail_message_res_partner_rel_mail_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_res_partner_rel_mail_message_id_index ON mail_message_res_partner_rel USING btree (mail_message_id);


--
-- Name: mail_message_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_res_partner_rel_res_partner_id_index ON mail_message_res_partner_rel USING btree (res_partner_id);


--
-- Name: mail_message_subtype_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_message_subtype_id_index ON mail_message USING btree (subtype_id);


--
-- Name: mail_notification_is_read_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_notification_is_read_index ON mail_notification USING btree (is_read);


--
-- Name: mail_notification_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_notification_message_id_index ON mail_notification USING btree (message_id);


--
-- Name: mail_notification_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_notification_partner_id_index ON mail_notification USING btree (partner_id);


--
-- Name: mail_notification_partner_id_read_starred_message_id; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_notification_partner_id_read_starred_message_id ON mail_notification USING btree (partner_id, is_read, starred, message_id);


--
-- Name: mail_notification_starred_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_notification_starred_index ON mail_notification USING btree (starred);


--
-- Name: mail_vote_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_vote_message_id_index ON mail_vote USING btree (message_id);


--
-- Name: mail_vote_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_vote_user_id_index ON mail_vote USING btree (user_id);


--
-- Name: mail_wizard_invite_res_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_wizard_invite_res_id_index ON mail_wizard_invite USING btree (res_id);


--
-- Name: mail_wizard_invite_res_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_wizard_invite_res_model_index ON mail_wizard_invite USING btree (res_model);


--
-- Name: mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_index ON mail_wizard_invite_res_partner_rel USING btree (mail_wizard_invite_id);


--
-- Name: mail_wizard_invite_res_partner_rel_res_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mail_wizard_invite_res_partner_rel_res_partner_id_index ON mail_wizard_invite_res_partner_rel USING btree (res_partner_id);


--
-- Name: meeting_category_rel_event_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX meeting_category_rel_event_id_index ON meeting_category_rel USING btree (event_id);


--
-- Name: meeting_category_rel_type_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX meeting_category_rel_type_id_index ON meeting_category_rel USING btree (type_id);


--
-- Name: merge_opportunity_rel_merge_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX merge_opportunity_rel_merge_id_index ON merge_opportunity_rel USING btree (merge_id);


--
-- Name: merge_opportunity_rel_opportunity_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX merge_opportunity_rel_opportunity_id_index ON merge_opportunity_rel USING btree (opportunity_id);


--
-- Name: message_attachment_rel_attachment_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX message_attachment_rel_attachment_id_index ON message_attachment_rel USING btree (attachment_id);


--
-- Name: message_attachment_rel_message_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX message_attachment_rel_message_id_index ON message_attachment_rel USING btree (message_id);


--
-- Name: mrp_bom_line_bom_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_line_bom_id_index ON mrp_bom_line USING btree (bom_id);


--
-- Name: mrp_bom_line_mrp_property_rel_mrp_bom_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_line_mrp_property_rel_mrp_bom_line_id_index ON mrp_bom_line_mrp_property_rel USING btree (mrp_bom_line_id);


--
-- Name: mrp_bom_line_mrp_property_rel_mrp_property_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_line_mrp_property_rel_mrp_property_id_index ON mrp_bom_line_mrp_property_rel USING btree (mrp_property_id);


--
-- Name: mrp_bom_line_product_attribute_value_rel_mrp_bom_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_line_product_attribute_value_rel_mrp_bom_line_id_index ON mrp_bom_line_product_attribute_value_rel USING btree (mrp_bom_line_id);


--
-- Name: mrp_bom_line_product_attribute_value_rel_product_attribute_valu; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_line_product_attribute_value_rel_product_attribute_valu ON mrp_bom_line_product_attribute_value_rel USING btree (product_attribute_value_id);


--
-- Name: mrp_bom_mrp_property_rel_mrp_bom_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_mrp_property_rel_mrp_bom_id_index ON mrp_bom_mrp_property_rel USING btree (mrp_bom_id);


--
-- Name: mrp_bom_mrp_property_rel_mrp_property_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_bom_mrp_property_rel_mrp_property_id_index ON mrp_bom_mrp_property_rel USING btree (mrp_property_id);


--
-- Name: mrp_production_date_finished_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_date_finished_index ON mrp_production USING btree (date_finished);


--
-- Name: mrp_production_date_planned_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_date_planned_index ON mrp_production USING btree (date_planned);


--
-- Name: mrp_production_date_start_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_date_start_index ON mrp_production USING btree (date_start);


--
-- Name: mrp_production_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_priority_index ON mrp_production USING btree (priority);


--
-- Name: mrp_production_product_line_production_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_product_line_production_id_index ON mrp_production_product_line USING btree (production_id);


--
-- Name: mrp_production_workcenter_line_production_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_production_workcenter_line_production_id_index ON mrp_production_workcenter_line USING btree (production_id);


--
-- Name: mrp_repair_fee_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_fee_name_index ON mrp_repair_fee USING btree (name);


--
-- Name: mrp_repair_fee_repair_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_fee_repair_id_index ON mrp_repair_fee USING btree (repair_id);


--
-- Name: mrp_repair_invoice_method_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_invoice_method_index ON mrp_repair USING btree (invoice_method);


--
-- Name: mrp_repair_line_location_dest_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_line_location_dest_id_index ON mrp_repair_line USING btree (location_dest_id);


--
-- Name: mrp_repair_line_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_line_location_id_index ON mrp_repair_line USING btree (location_id);


--
-- Name: mrp_repair_line_repair_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_line_repair_id_index ON mrp_repair_line USING btree (repair_id);


--
-- Name: mrp_repair_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_location_id_index ON mrp_repair USING btree (location_id);


--
-- Name: mrp_repair_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_repair_partner_id_index ON mrp_repair USING btree (partner_id);


--
-- Name: mrp_routing_workcenter_routing_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX mrp_routing_workcenter_routing_id_index ON mrp_routing_workcenter USING btree (routing_id);


--
-- Name: note_stage_rel_note_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX note_stage_rel_note_id_index ON note_stage_rel USING btree (note_id);


--
-- Name: note_stage_rel_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX note_stage_rel_stage_id_index ON note_stage_rel USING btree (stage_id);


--
-- Name: note_tags_rel_note_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX note_tags_rel_note_id_index ON note_tags_rel USING btree (note_id);


--
-- Name: note_tags_rel_tag_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX note_tags_rel_tag_id_index ON note_tags_rel USING btree (tag_id);


--
-- Name: procurement_order_bom_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX procurement_order_bom_id_index ON procurement_order USING btree (bom_id);


--
-- Name: procurement_order_date_planned_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX procurement_order_date_planned_index ON procurement_order USING btree (date_planned);


--
-- Name: procurement_order_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX procurement_order_priority_index ON procurement_order USING btree (priority);


--
-- Name: procurement_property_rel_procurement_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX procurement_property_rel_procurement_id_index ON procurement_property_rel USING btree (procurement_id);


--
-- Name: procurement_property_rel_property_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX procurement_property_rel_property_id_index ON procurement_property_rel USING btree (property_id);


--
-- Name: product_attribute_line_product_attribute_value_rel_line_id_inde; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_attribute_line_product_attribute_value_rel_line_id_inde ON product_attribute_line_product_attribute_value_rel USING btree (line_id);


--
-- Name: product_attribute_line_product_attribute_value_rel_val_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_attribute_line_product_attribute_value_rel_val_id_index ON product_attribute_line_product_attribute_value_rel USING btree (val_id);


--
-- Name: product_attribute_value_product_product_rel_att_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_attribute_value_product_product_rel_att_id_index ON product_attribute_value_product_product_rel USING btree (att_id);


--
-- Name: product_attribute_value_product_product_rel_prod_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_attribute_value_product_product_rel_prod_id_index ON product_attribute_value_product_product_rel USING btree (prod_id);


--
-- Name: product_category_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_category_name_index ON product_category USING btree (name);


--
-- Name: product_category_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_category_parent_id_index ON product_category USING btree (parent_id);


--
-- Name: product_category_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_category_parent_left_index ON product_category USING btree (parent_left);


--
-- Name: product_category_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_category_parent_right_index ON product_category USING btree (parent_right);


--
-- Name: product_category_sequence_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_category_sequence_index ON product_category USING btree (sequence);


--
-- Name: product_packaging_product_tmpl_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_packaging_product_tmpl_id_index ON product_packaging USING btree (product_tmpl_id);


--
-- Name: product_pricelist_item_price_version_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_pricelist_item_price_version_id_index ON product_pricelist_item USING btree (price_version_id);


--
-- Name: product_pricelist_version_pricelist_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_pricelist_version_pricelist_id_index ON product_pricelist_version USING btree (pricelist_id);


--
-- Name: product_product_default_code_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_product_default_code_index ON product_product USING btree (default_code);


--
-- Name: product_product_name_template_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_product_name_template_index ON product_product USING btree (name_template);


--
-- Name: product_product_product_tmpl_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_product_product_tmpl_id_index ON product_product USING btree (product_tmpl_id);


--
-- Name: product_supplier_taxes_rel_prod_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_supplier_taxes_rel_prod_id_index ON product_supplier_taxes_rel USING btree (prod_id);


--
-- Name: product_supplier_taxes_rel_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_supplier_taxes_rel_tax_id_index ON product_supplier_taxes_rel USING btree (tax_id);


--
-- Name: product_supplierinfo_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_supplierinfo_company_id_index ON product_supplierinfo USING btree (company_id);


--
-- Name: product_supplierinfo_product_tmpl_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_supplierinfo_product_tmpl_id_index ON product_supplierinfo USING btree (product_tmpl_id);


--
-- Name: product_taxes_rel_prod_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_taxes_rel_prod_id_index ON product_taxes_rel USING btree (prod_id);


--
-- Name: product_taxes_rel_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_taxes_rel_tax_id_index ON product_taxes_rel USING btree (tax_id);


--
-- Name: product_template_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_template_company_id_index ON product_template USING btree (company_id);


--
-- Name: product_template_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_template_name_index ON product_template USING btree (name);


--
-- Name: product_ul_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX product_ul_name_index ON product_ul USING btree (name);


--
-- Name: project_category_project_issue_rel_project_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_category_project_issue_rel_project_category_id_index ON project_category_project_issue_rel USING btree (project_category_id);


--
-- Name: project_category_project_issue_rel_project_issue_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_category_project_issue_rel_project_issue_id_index ON project_category_project_issue_rel USING btree (project_issue_id);


--
-- Name: project_category_project_task_rel_project_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_category_project_task_rel_project_category_id_index ON project_category_project_task_rel USING btree (project_category_id);


--
-- Name: project_category_project_task_rel_project_task_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_category_project_task_rel_project_task_id_index ON project_category_project_task_rel USING btree (project_task_id);


--
-- Name: project_issue_create_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_create_date_index ON project_issue USING btree (create_date);


--
-- Name: project_issue_date_closed_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_date_closed_index ON project_issue USING btree (date_closed);


--
-- Name: project_issue_date_last_stage_update_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_date_last_stage_update_index ON project_issue USING btree (date_last_stage_update);


--
-- Name: project_issue_date_open_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_date_open_index ON project_issue USING btree (date_open);


--
-- Name: project_issue_email_from_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_email_from_index ON project_issue USING btree (email_from);


--
-- Name: project_issue_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_partner_id_index ON project_issue USING btree (partner_id);


--
-- Name: project_issue_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_priority_index ON project_issue USING btree (priority);


--
-- Name: project_issue_project_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_project_id_index ON project_issue USING btree (project_id);


--
-- Name: project_issue_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_section_id_index ON project_issue USING btree (section_id);


--
-- Name: project_issue_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_stage_id_index ON project_issue USING btree (stage_id);


--
-- Name: project_issue_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_issue_user_id_index ON project_issue USING btree (user_id);


--
-- Name: project_project_alias_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_project_alias_model_index ON project_project USING btree (alias_model);


--
-- Name: project_task_create_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_create_date_index ON project_task USING btree (create_date);


--
-- Name: project_task_date_deadline_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_date_deadline_index ON project_task USING btree (date_deadline);


--
-- Name: project_task_date_end_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_date_end_index ON project_task USING btree (date_end);


--
-- Name: project_task_date_last_stage_update_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_date_last_stage_update_index ON project_task USING btree (date_last_stage_update);


--
-- Name: project_task_date_start_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_date_start_index ON project_task USING btree (date_start);


--
-- Name: project_task_history_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_history_date_index ON project_task_history USING btree (date);


--
-- Name: project_task_history_task_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_history_task_id_index ON project_task_history USING btree (task_id);


--
-- Name: project_task_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_name_index ON project_task USING btree (name);


--
-- Name: project_task_parent_rel_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_parent_rel_parent_id_index ON project_task_parent_rel USING btree (parent_id);


--
-- Name: project_task_parent_rel_task_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_parent_rel_task_id_index ON project_task_parent_rel USING btree (task_id);


--
-- Name: project_task_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_priority_index ON project_task USING btree (priority);


--
-- Name: project_task_project_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_project_id_index ON project_task USING btree (project_id);


--
-- Name: project_task_reviewer_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_reviewer_id_index ON project_task USING btree (reviewer_id);


--
-- Name: project_task_sequence_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_sequence_index ON project_task USING btree (sequence);


--
-- Name: project_task_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_stage_id_index ON project_task USING btree (stage_id);


--
-- Name: project_task_type_rel_project_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_type_rel_project_id_index ON project_task_type_rel USING btree (project_id);


--
-- Name: project_task_type_rel_type_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_type_rel_type_id_index ON project_task_type_rel USING btree (type_id);


--
-- Name: project_task_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_user_id_index ON project_task USING btree (user_id);


--
-- Name: project_task_work_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_work_date_index ON project_task_work USING btree (date);


--
-- Name: project_task_work_task_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_work_task_id_index ON project_task_work USING btree (task_id);


--
-- Name: project_task_work_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_work_user_id_index ON project_task_work USING btree (user_id);


--
-- Name: project_task_write_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_task_write_date_index ON project_task USING btree (write_date);


--
-- Name: project_user_rel_project_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_user_rel_project_id_index ON project_user_rel USING btree (project_id);


--
-- Name: project_user_rel_uid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX project_user_rel_uid_index ON project_user_rel USING btree (uid);


--
-- Name: purchase_invoice_rel_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_invoice_rel_invoice_id_index ON purchase_invoice_rel USING btree (invoice_id);


--
-- Name: purchase_invoice_rel_purchase_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_invoice_rel_purchase_id_index ON purchase_invoice_rel USING btree (purchase_id);


--
-- Name: purchase_order_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_company_id_index ON purchase_order USING btree (company_id);


--
-- Name: purchase_order_date_approve_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_date_approve_index ON purchase_order USING btree (date_approve);


--
-- Name: purchase_order_date_order_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_date_order_index ON purchase_order USING btree (date_order);


--
-- Name: purchase_order_line_date_planned_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_line_date_planned_index ON purchase_order_line USING btree (date_planned);


--
-- Name: purchase_order_line_invoice_rel_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_line_invoice_rel_invoice_id_index ON purchase_order_line_invoice_rel USING btree (invoice_id);


--
-- Name: purchase_order_line_invoice_rel_order_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_line_invoice_rel_order_line_id_index ON purchase_order_line_invoice_rel USING btree (order_line_id);


--
-- Name: purchase_order_line_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_line_order_id_index ON purchase_order_line USING btree (order_id);


--
-- Name: purchase_order_minimum_planned_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_minimum_planned_date_index ON purchase_order USING btree (minimum_planned_date);


--
-- Name: purchase_order_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_name_index ON purchase_order USING btree (name);


--
-- Name: purchase_order_shipped_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_shipped_index ON purchase_order USING btree (shipped);


--
-- Name: purchase_order_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_state_index ON purchase_order USING btree (state);


--
-- Name: purchase_order_taxe_ord_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_taxe_ord_id_index ON purchase_order_taxe USING btree (ord_id);


--
-- Name: purchase_order_taxe_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX purchase_order_taxe_tax_id_index ON purchase_order_taxe USING btree (tax_id);


--
-- Name: reconcile_account_rel_account_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX reconcile_account_rel_account_id_index ON reconcile_account_rel USING btree (account_id);


--
-- Name: reconcile_account_rel_reconcile_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX reconcile_account_rel_reconcile_id_index ON reconcile_account_rel USING btree (reconcile_id);


--
-- Name: rel_modules_langexport_module_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rel_modules_langexport_module_id_index ON rel_modules_langexport USING btree (module_id);


--
-- Name: rel_modules_langexport_wiz_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rel_modules_langexport_wiz_id_index ON rel_modules_langexport USING btree (wiz_id);


--
-- Name: rel_server_actions_action_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rel_server_actions_action_id_index ON rel_server_actions USING btree (action_id);


--
-- Name: rel_server_actions_server_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rel_server_actions_server_id_index ON rel_server_actions USING btree (server_id);


--
-- Name: repair_fee_line_tax_repair_fee_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX repair_fee_line_tax_repair_fee_line_id_index ON repair_fee_line_tax USING btree (repair_fee_line_id);


--
-- Name: repair_fee_line_tax_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX repair_fee_line_tax_tax_id_index ON repair_fee_line_tax USING btree (tax_id);


--
-- Name: repair_operation_line_tax_repair_operation_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX repair_operation_line_tax_repair_operation_line_id_index ON repair_operation_line_tax USING btree (repair_operation_line_id);


--
-- Name: repair_operation_line_tax_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX repair_operation_line_tax_tax_id_index ON repair_operation_line_tax USING btree (tax_id);


--
-- Name: res_company_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_company_parent_id_index ON res_company USING btree (parent_id);


--
-- Name: res_company_users_rel_cid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_company_users_rel_cid_index ON res_company_users_rel USING btree (cid);


--
-- Name: res_company_users_rel_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_company_users_rel_user_id_index ON res_company_users_rel USING btree (user_id);


--
-- Name: res_country_res_country_group_rel_res_country_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_country_res_country_group_rel_res_country_group_id_index ON res_country_res_country_group_rel USING btree (res_country_group_id);


--
-- Name: res_country_res_country_group_rel_res_country_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_country_res_country_group_rel_res_country_id_index ON res_country_res_country_group_rel USING btree (res_country_id);


--
-- Name: res_currency_rate_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_currency_rate_name_index ON res_currency_rate USING btree (name);


--
-- Name: res_currency_unique_name_company_id_idx; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE UNIQUE INDEX res_currency_unique_name_company_id_idx ON res_currency USING btree (name, (COALESCE(company_id, (-1))));


--
-- Name: res_groups_action_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_action_rel_gid_index ON res_groups_action_rel USING btree (gid);


--
-- Name: res_groups_action_rel_uid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_action_rel_uid_index ON res_groups_action_rel USING btree (uid);


--
-- Name: res_groups_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_category_id_index ON res_groups USING btree (category_id);


--
-- Name: res_groups_implied_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_implied_rel_gid_index ON res_groups_implied_rel USING btree (gid);


--
-- Name: res_groups_implied_rel_hid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_implied_rel_hid_index ON res_groups_implied_rel USING btree (hid);


--
-- Name: res_groups_report_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_report_rel_gid_index ON res_groups_report_rel USING btree (gid);


--
-- Name: res_groups_report_rel_uid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_report_rel_uid_index ON res_groups_report_rel USING btree (uid);


--
-- Name: res_groups_users_rel_gid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_users_rel_gid_index ON res_groups_users_rel USING btree (gid);


--
-- Name: res_groups_users_rel_uid_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_groups_users_rel_uid_index ON res_groups_users_rel USING btree (uid);


--
-- Name: res_partner_bank_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_bank_partner_id_index ON res_partner_bank USING btree (partner_id);


--
-- Name: res_partner_category_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_category_parent_id_index ON res_partner_category USING btree (parent_id);


--
-- Name: res_partner_category_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_category_parent_left_index ON res_partner_category USING btree (parent_left);


--
-- Name: res_partner_category_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_category_parent_right_index ON res_partner_category USING btree (parent_right);


--
-- Name: res_partner_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_company_id_index ON res_partner USING btree (company_id);


--
-- Name: res_partner_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_date_index ON res_partner USING btree (date);


--
-- Name: res_partner_display_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_display_name_index ON res_partner USING btree (display_name);


--
-- Name: res_partner_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_name_index ON res_partner USING btree (name);


--
-- Name: res_partner_parent_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_parent_id_index ON res_partner USING btree (parent_id);


--
-- Name: res_partner_ref_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_ref_index ON res_partner USING btree (ref);


--
-- Name: res_partner_res_partner_category_rel_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_res_partner_category_rel_category_id_index ON res_partner_res_partner_category_rel USING btree (category_id);


--
-- Name: res_partner_res_partner_category_rel_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_partner_res_partner_category_rel_partner_id_index ON res_partner_res_partner_category_rel USING btree (partner_id);


--
-- Name: res_users_login_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX res_users_login_date_index ON res_users USING btree (login_date);


--
-- Name: resource_calendar_attendance_dayofweek_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX resource_calendar_attendance_dayofweek_index ON resource_calendar_attendance USING btree (dayofweek);


--
-- Name: resource_calendar_attendance_hour_from_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX resource_calendar_attendance_hour_from_index ON resource_calendar_attendance USING btree (hour_from);


--
-- Name: rule_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rule_group_rel_group_id_index ON rule_group_rel USING btree (group_id);


--
-- Name: rule_group_rel_rule_group_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX rule_group_rel_rule_group_id_index ON rule_group_rel USING btree (rule_group_id);


--
-- Name: sale_exception_sale_exception_confirm_rel_sale_exception_confir; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_exception_sale_exception_confirm_rel_sale_exception_confir ON sale_exception_sale_exception_confirm_rel USING btree (sale_exception_confirm_id);


--
-- Name: sale_exception_sale_exception_confirm_rel_sale_exception_id_ind; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_exception_sale_exception_confirm_rel_sale_exception_id_ind ON sale_exception_sale_exception_confirm_rel USING btree (sale_exception_id);


--
-- Name: sale_member_rel_member_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_member_rel_member_id_index ON sale_member_rel USING btree (member_id);


--
-- Name: sale_member_rel_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_member_rel_section_id_index ON sale_member_rel USING btree (section_id);


--
-- Name: sale_order_category_rel_category_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_category_rel_category_id_index ON sale_order_category_rel USING btree (category_id);


--
-- Name: sale_order_category_rel_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_category_rel_order_id_index ON sale_order_category_rel USING btree (order_id);


--
-- Name: sale_order_create_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_create_date_index ON sale_order USING btree (create_date);


--
-- Name: sale_order_date_confirm_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_date_confirm_index ON sale_order USING btree (date_confirm);


--
-- Name: sale_order_date_order_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_date_order_index ON sale_order USING btree (date_order);


--
-- Name: sale_order_exception_rel_exception_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_exception_rel_exception_id_index ON sale_order_exception_rel USING btree (exception_id);


--
-- Name: sale_order_exception_rel_sale_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_exception_rel_sale_order_id_index ON sale_order_exception_rel USING btree (sale_order_id);


--
-- Name: sale_order_invoice_rel_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_invoice_rel_invoice_id_index ON sale_order_invoice_rel USING btree (invoice_id);


--
-- Name: sale_order_invoice_rel_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_invoice_rel_order_id_index ON sale_order_invoice_rel USING btree (order_id);


--
-- Name: sale_order_line_invoice_rel_invoice_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_line_invoice_rel_invoice_id_index ON sale_order_line_invoice_rel USING btree (invoice_id);


--
-- Name: sale_order_line_invoice_rel_order_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_line_invoice_rel_order_line_id_index ON sale_order_line_invoice_rel USING btree (order_line_id);


--
-- Name: sale_order_line_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_line_order_id_index ON sale_order_line USING btree (order_id);


--
-- Name: sale_order_line_property_rel_order_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_line_property_rel_order_id_index ON sale_order_line_property_rel USING btree (order_id);


--
-- Name: sale_order_line_property_rel_property_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_line_property_rel_property_id_index ON sale_order_line_property_rel USING btree (property_id);


--
-- Name: sale_order_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_name_index ON sale_order USING btree (name);


--
-- Name: sale_order_partner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_partner_id_index ON sale_order USING btree (partner_id);


--
-- Name: sale_order_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_state_index ON sale_order USING btree (state);


--
-- Name: sale_order_tax_order_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_tax_order_line_id_index ON sale_order_tax USING btree (order_line_id);


--
-- Name: sale_order_tax_tax_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_tax_tax_id_index ON sale_order_tax USING btree (tax_id);


--
-- Name: sale_order_user_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX sale_order_user_id_index ON sale_order USING btree (user_id);


--
-- Name: section_claim_stage_rel_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX section_claim_stage_rel_section_id_index ON section_claim_stage_rel USING btree (section_id);


--
-- Name: section_claim_stage_rel_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX section_claim_stage_rel_stage_id_index ON section_claim_stage_rel USING btree (stage_id);


--
-- Name: section_stage_rel_section_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX section_stage_rel_section_id_index ON section_stage_rel USING btree (section_id);


--
-- Name: section_stage_rel_stage_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX section_stage_rel_stage_id_index ON section_stage_rel USING btree (stage_id);


--
-- Name: stock_inventory_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_company_id_index ON stock_inventory USING btree (company_id);


--
-- Name: stock_inventory_line_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_line_company_id_index ON stock_inventory_line USING btree (company_id);


--
-- Name: stock_inventory_line_inventory_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_line_inventory_id_index ON stock_inventory_line USING btree (inventory_id);


--
-- Name: stock_inventory_line_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_line_location_id_index ON stock_inventory_line USING btree (location_id);


--
-- Name: stock_inventory_line_package_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_line_package_id_index ON stock_inventory_line USING btree (package_id);


--
-- Name: stock_inventory_line_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_line_product_id_index ON stock_inventory_line USING btree (product_id);


--
-- Name: stock_inventory_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_inventory_state_index ON stock_inventory USING btree (state);


--
-- Name: stock_location_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_company_id_index ON stock_location USING btree (company_id);


--
-- Name: stock_location_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_location_id_index ON stock_location USING btree (location_id);


--
-- Name: stock_location_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_parent_left_index ON stock_location USING btree (parent_left);


--
-- Name: stock_location_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_parent_right_index ON stock_location USING btree (parent_right);


--
-- Name: stock_location_path_auto_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_path_auto_index ON stock_location_path USING btree (auto);


--
-- Name: stock_location_path_location_dest_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_path_location_dest_id_index ON stock_location_path USING btree (location_dest_id);


--
-- Name: stock_location_path_location_from_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_path_location_from_id_index ON stock_location_path USING btree (location_from_id);


--
-- Name: stock_location_route_categ_categ_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_categ_categ_id_index ON stock_location_route_categ USING btree (categ_id);


--
-- Name: stock_location_route_categ_route_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_categ_route_id_index ON stock_location_route_categ USING btree (route_id);


--
-- Name: stock_location_route_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_company_id_index ON stock_location_route USING btree (company_id);


--
-- Name: stock_location_route_move_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_move_move_id_index ON stock_location_route_move USING btree (move_id);


--
-- Name: stock_location_route_move_route_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_move_route_id_index ON stock_location_route_move USING btree (route_id);


--
-- Name: stock_location_route_procurement_procurement_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_procurement_procurement_id_index ON stock_location_route_procurement USING btree (procurement_id);


--
-- Name: stock_location_route_procurement_route_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_route_procurement_route_id_index ON stock_location_route_procurement USING btree (route_id);


--
-- Name: stock_location_usage_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_location_usage_index ON stock_location USING btree (usage);


--
-- Name: stock_move_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_company_id_index ON stock_move USING btree (company_id);


--
-- Name: stock_move_consume_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_consume_product_id_index ON stock_move_consume USING btree (product_id);


--
-- Name: stock_move_create_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_create_date_index ON stock_move USING btree (create_date);


--
-- Name: stock_move_date_expected_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_date_expected_index ON stock_move USING btree (date_expected);


--
-- Name: stock_move_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_date_index ON stock_move USING btree (date);


--
-- Name: stock_move_invoice_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_invoice_state_index ON stock_move USING btree (invoice_state);


--
-- Name: stock_move_location_dest_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_location_dest_id_index ON stock_move USING btree (location_dest_id);


--
-- Name: stock_move_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_location_id_index ON stock_move USING btree (location_id);


--
-- Name: stock_move_move_dest_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_move_dest_id_index ON stock_move USING btree (move_dest_id);


--
-- Name: stock_move_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_name_index ON stock_move USING btree (name);


--
-- Name: stock_move_picking_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_picking_id_index ON stock_move USING btree (picking_id);


--
-- Name: stock_move_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_product_id_index ON stock_move USING btree (product_id);


--
-- Name: stock_move_product_location_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_product_location_index ON stock_move USING btree (product_id, location_id, location_dest_id, company_id, state);


--
-- Name: stock_move_production_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_production_id_index ON stock_move USING btree (production_id);


--
-- Name: stock_move_purchase_line_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_purchase_line_id_index ON stock_move USING btree (purchase_line_id);


--
-- Name: stock_move_raw_material_production_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_raw_material_production_id_index ON stock_move USING btree (raw_material_production_id);


--
-- Name: stock_move_scrap_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_scrap_product_id_index ON stock_move_scrap USING btree (product_id);


--
-- Name: stock_move_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_move_state_index ON stock_move USING btree (state);


--
-- Name: stock_picking_backorder_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_backorder_id_index ON stock_picking USING btree (backorder_id);


--
-- Name: stock_picking_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_company_id_index ON stock_picking USING btree (company_id);


--
-- Name: stock_picking_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_date_index ON stock_picking USING btree (date);


--
-- Name: stock_picking_max_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_max_date_index ON stock_picking USING btree (max_date);


--
-- Name: stock_picking_min_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_min_date_index ON stock_picking USING btree (min_date);


--
-- Name: stock_picking_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_name_index ON stock_picking USING btree (name);


--
-- Name: stock_picking_origin_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_origin_index ON stock_picking USING btree (origin);


--
-- Name: stock_picking_priority_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_priority_index ON stock_picking USING btree (priority);


--
-- Name: stock_picking_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_picking_state_index ON stock_picking USING btree (state);


--
-- Name: stock_quant_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_company_id_index ON stock_quant USING btree (company_id);


--
-- Name: stock_quant_in_date_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_in_date_index ON stock_quant USING btree (in_date);


--
-- Name: stock_quant_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_location_id_index ON stock_quant USING btree (location_id);


--
-- Name: stock_quant_lot_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_lot_id_index ON stock_quant USING btree (lot_id);


--
-- Name: stock_quant_move_rel_move_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_move_rel_move_id_index ON stock_quant_move_rel USING btree (move_id);


--
-- Name: stock_quant_move_rel_quant_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_move_rel_quant_id_index ON stock_quant_move_rel USING btree (quant_id);


--
-- Name: stock_quant_owner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_owner_id_index ON stock_quant USING btree (owner_id);


--
-- Name: stock_quant_package_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_company_id_index ON stock_quant_package USING btree (company_id);


--
-- Name: stock_quant_package_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_id_index ON stock_quant USING btree (package_id);


--
-- Name: stock_quant_package_location_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_location_id_index ON stock_quant_package USING btree (location_id);


--
-- Name: stock_quant_package_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_name_index ON stock_quant_package USING btree (name);


--
-- Name: stock_quant_package_owner_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_owner_id_index ON stock_quant_package USING btree (owner_id);


--
-- Name: stock_quant_package_packaging_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_packaging_id_index ON stock_quant_package USING btree (packaging_id);


--
-- Name: stock_quant_package_parent_left_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_parent_left_index ON stock_quant_package USING btree (parent_left);


--
-- Name: stock_quant_package_parent_right_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_package_parent_right_index ON stock_quant_package USING btree (parent_right);


--
-- Name: stock_quant_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_product_id_index ON stock_quant USING btree (product_id);


--
-- Name: stock_quant_product_location_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_product_location_index ON stock_quant USING btree (product_id, location_id, company_id, qty, in_date, reservation_id);


--
-- Name: stock_quant_propagated_from_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_propagated_from_id_index ON stock_quant USING btree (propagated_from_id);


--
-- Name: stock_quant_qty_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_qty_index ON stock_quant USING btree (qty);


--
-- Name: stock_quant_reservation_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_quant_reservation_id_index ON stock_quant USING btree (reservation_id);


--
-- Name: stock_route_product_product_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_route_product_product_id_index ON stock_route_product USING btree (product_id);


--
-- Name: stock_route_product_route_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_route_product_route_id_index ON stock_route_product USING btree (route_id);


--
-- Name: stock_route_warehouse_route_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_route_warehouse_route_id_index ON stock_route_warehouse USING btree (route_id);


--
-- Name: stock_route_warehouse_warehouse_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_route_warehouse_warehouse_id_index ON stock_route_warehouse USING btree (warehouse_id);


--
-- Name: stock_warehouse_company_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_warehouse_company_id_index ON stock_warehouse USING btree (company_id);


--
-- Name: stock_warehouse_name_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_warehouse_name_index ON stock_warehouse USING btree (name);


--
-- Name: stock_wh_resupply_table_supplied_wh_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_wh_resupply_table_supplied_wh_id_index ON stock_wh_resupply_table USING btree (supplied_wh_id);


--
-- Name: stock_wh_resupply_table_supplier_wh_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX stock_wh_resupply_table_supplier_wh_id_index ON stock_wh_resupply_table USING btree (supplier_wh_id);


--
-- Name: wizard_validate_account_move_journal_journal_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wizard_validate_account_move_journal_journal_id_index ON wizard_validate_account_move_journal USING btree (journal_id);


--
-- Name: wizard_validate_account_move_journal_wizard_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wizard_validate_account_move_journal_wizard_id_index ON wizard_validate_account_move_journal USING btree (wizard_id);


--
-- Name: wizard_validate_account_move_period_period_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wizard_validate_account_move_period_period_id_index ON wizard_validate_account_move_period USING btree (period_id);


--
-- Name: wizard_validate_account_move_period_wizard_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wizard_validate_account_move_period_wizard_id_index ON wizard_validate_account_move_period USING btree (wizard_id);


--
-- Name: wkf_activity_wkf_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_activity_wkf_id_index ON wkf_activity USING btree (wkf_id);


--
-- Name: wkf_instance_res_id_wkf_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_instance_res_id_wkf_id_index ON wkf_instance USING btree (res_id, wkf_id);


--
-- Name: wkf_instance_res_type_res_id_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_instance_res_type_res_id_state_index ON wkf_instance USING btree (res_type, res_id, state);


--
-- Name: wkf_instance_wkf_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_instance_wkf_id_index ON wkf_instance USING btree (wkf_id);


--
-- Name: wkf_on_create_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_on_create_index ON wkf USING btree (on_create);


--
-- Name: wkf_osv_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_osv_index ON wkf USING btree (osv);


--
-- Name: wkf_transition_act_from_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_transition_act_from_index ON wkf_transition USING btree (act_from);


--
-- Name: wkf_transition_act_to_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_transition_act_to_index ON wkf_transition USING btree (act_to);


--
-- Name: wkf_triggers_res_id_model_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_triggers_res_id_model_index ON wkf_triggers USING btree (res_id, model);


--
-- Name: wkf_witm_trans_inst_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_witm_trans_inst_id_index ON wkf_witm_trans USING btree (inst_id);


--
-- Name: wkf_witm_trans_trans_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_witm_trans_trans_id_index ON wkf_witm_trans USING btree (trans_id);


--
-- Name: wkf_workitem_act_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_workitem_act_id_index ON wkf_workitem USING btree (act_id);


--
-- Name: wkf_workitem_inst_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_workitem_inst_id_index ON wkf_workitem USING btree (inst_id);


--
-- Name: wkf_workitem_state_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_workitem_state_index ON wkf_workitem USING btree (state);


--
-- Name: wkf_workitem_subflow_id_index; Type: INDEX; Schema: public; Owner: odoo; Tablespace: 
--

CREATE INDEX wkf_workitem_subflow_id_index ON wkf_workitem USING btree (subflow_id);


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO crm_lead_report DO INSTEAD  SELECT c.id,
    c.date_deadline,
    count(c.id) AS nbr_cases,
    c.date_open AS opening_date,
    c.date_closed,
    c.date_last_stage_update,
    c.user_id,
    c.probability,
    c.stage_id,
    c.type,
    c.company_id,
    c.priority,
    c.section_id,
    c.campaign_id,
    c.source_id,
    c.medium_id,
    c.partner_id,
    c.country_id,
    c.planned_revenue,
    (c.planned_revenue * (c.probability / (100)::double precision)) AS probable_revenue,
    c.create_date,
    (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close,
    abs((date_part('epoch'::text, ((c.date_deadline)::timestamp without time zone - c.date_closed)) / ((3600 * 24))::double precision)) AS delay_expected,
    (date_part('epoch'::text, (c.date_open - c.create_date)) / ((3600 * 24))::double precision) AS delay_open
   FROM crm_lead c
  WHERE (c.active = true)
  GROUP BY c.id;


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO crm_opportunity_report DO INSTEAD  SELECT c.id,
    c.date_deadline,
    count(c.id) AS nbr_cases,
    c.date_open AS opening_date,
    c.date_closed,
    c.date_last_stage_update,
    c.user_id,
    c.probability,
    c.stage_id,
    c.type,
    c.company_id,
    c.priority,
    c.section_id,
    c.campaign_id,
    c.source_id,
    c.medium_id,
    c.partner_id,
    c.country_id,
    c.planned_revenue AS total_revenue,
    (c.planned_revenue * (c.probability / (100)::double precision)) AS expected_revenue,
    c.create_date,
    (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close,
    abs((date_part('epoch'::text, ((c.date_deadline)::timestamp without time zone - c.date_closed)) / ((3600 * 24))::double precision)) AS delay_expected,
    (date_part('epoch'::text, (c.date_open - c.create_date)) / ((3600 * 24))::double precision) AS delay_open
   FROM crm_lead c
  WHERE (c.active = true)
  GROUP BY c.id;


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO report_stock_lines_date DO INSTEAD  SELECT p.id,
    p.id AS product_id,
    max(s.date) AS date,
    max(m.date) AS move_date,
    p.active
   FROM ((product_product p
     LEFT JOIN (stock_inventory_line l
     JOIN stock_inventory s ON (((l.inventory_id = s.id) AND ((s.state)::text = 'done'::text)))) ON ((p.id = l.product_id)))
     LEFT JOIN stock_move m ON (((m.product_id = p.id) AND ((m.state)::text = 'done'::text))))
  GROUP BY p.id;


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO crm_claim_report DO INSTEAD  SELECT min(c.id) AS id,
    c.date AS claim_date,
    c.date_closed,
    c.date_deadline,
    c.user_id,
    c.stage_id,
    c.section_id,
    c.partner_id,
    c.company_id,
    c.categ_id,
    c.name AS subject,
    count(*) AS nbr,
    c.priority,
    c.type_action,
    c.create_date,
    (avg(date_part('epoch'::text, (c.date_closed - c.create_date))) / ((3600 * 24))::double precision) AS delay_close,
    ( SELECT count(mail_message.id) AS count
           FROM mail_message
          WHERE (((mail_message.model)::text = 'crm.claim'::text) AND (mail_message.res_id = c.id))) AS email,
    (date_part('epoch'::text, ((c.date_deadline)::timestamp without time zone - c.date_closed)) / ((3600 * 24))::double precision) AS delay_expected
   FROM crm_claim c
  GROUP BY c.date, c.user_id, c.section_id, c.stage_id, c.categ_id, c.partner_id, c.company_id, c.create_date, c.priority, c.type_action, c.date_deadline, c.date_closed, c.id;


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO project_task_history_cumulative DO INSTEAD  SELECT ((((history.date)::character varying)::text || '-'::text) || ((history.history_id)::character varying)::text) AS id,
    history.date AS end_date,
    history.history_id,
    history.date,
    history.task_id,
    history.type_id,
    history.user_id,
    history.kanban_state,
    history.nbr_tasks,
    history.remaining_hours,
    history.planned_hours,
    history.project_id
   FROM ( SELECT h.id AS history_id,
            (h.date + generate_series(0, ((COALESCE(h.end_date, '2015-11-06'::date) - h.date) - 1))) AS date,
            h.task_id,
            h.type_id,
            h.user_id,
            h.kanban_state,
            count(h.task_id) AS nbr_tasks,
            GREATEST(h.remaining_hours, (1)::numeric) AS remaining_hours,
            GREATEST(h.planned_hours, (1)::numeric) AS planned_hours,
            t.project_id
           FROM (project_task_history h
             JOIN project_task t ON ((h.task_id = t.id)))
          GROUP BY h.id, h.task_id, t.project_id) history;


--
-- Name: _RETURN; Type: RULE; Schema: public; Owner: odoo
--

CREATE RULE "_RETURN" AS
    ON SELECT TO report_project_task_user DO INSTEAD  SELECT ( SELECT 1) AS nbr,
    t.id,
    t.date_start,
    t.date_end,
    t.date_last_stage_update,
    t.date_deadline,
    abs((date_part('epoch'::text, (t.write_date - t.date_start)) / ((3600 * 24))::double precision)) AS no_of_days,
    t.user_id,
    t.reviewer_id,
    t.progress,
    t.project_id,
    t.effective_hours AS hours_effective,
    t.priority,
    t.name,
    t.company_id,
    t.partner_id,
    t.stage_id,
    t.kanban_state AS state,
    t.remaining_hours,
    t.total_hours,
    t.delay_hours AS hours_delay,
    t.planned_hours AS hours_planned,
    (date_part('epoch'::text, (t.write_date - t.create_date)) / ((3600 * 24))::double precision) AS closing_days,
    (date_part('epoch'::text, (t.date_start - t.create_date)) / ((3600 * 24))::double precision) AS opening_days,
    (date_part('epoch'::text, ((t.date_deadline)::timestamp without time zone - timezone('UTC'::text, now()))) / ((3600 * 24))::double precision) AS delay_endings_days
   FROM project_task t
  WHERE (t.active = true)
  GROUP BY t.id, t.remaining_hours, t.effective_hours, t.progress, t.total_hours, t.planned_hours, t.delay_hours, t.create_date, t.write_date, t.date_start, t.date_end, t.date_deadline, t.date_last_stage_update, t.user_id, t.reviewer_id, t.project_id, t.priority, t.name, t.company_id, t.partner_id, t.stage_id;


--
-- Name: Contract Update from Sales order; Type: TRIGGER; Schema: public; Owner: odoo
--

CREATE TRIGGER "Contract Update from Sales order" AFTER INSERT OR UPDATE OF x_saleorder_number ON account_analytic_account FOR EACH ROW EXECUTE PROCEDURE so_contract_transfer3();


--
-- Name: account_account_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_account_consol_rel_child_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_consol_rel
    ADD CONSTRAINT account_account_consol_rel_child_id_fkey FOREIGN KEY (child_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_consol_rel_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_consol_rel
    ADD CONSTRAINT account_account_consol_rel_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_account_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_account_financial_report_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_financial_report
    ADD CONSTRAINT account_account_financial_report_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_financial_report_report_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_financial_report
    ADD CONSTRAINT account_account_financial_report_report_line_id_fkey FOREIGN KEY (report_line_id) REFERENCES account_financial_report(id) ON DELETE CASCADE;


--
-- Name: account_account_financial_report_type_account_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_financial_report_type
    ADD CONSTRAINT account_account_financial_report_type_account_type_id_fkey FOREIGN KEY (account_type_id) REFERENCES account_account_type(id) ON DELETE CASCADE;


--
-- Name: account_account_financial_report_type_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_financial_report_type
    ADD CONSTRAINT account_account_financial_report_type_report_id_fkey FOREIGN KEY (report_id) REFERENCES account_financial_report(id) ON DELETE CASCADE;


--
-- Name: account_account_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_tax_default_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_tax_default_rel
    ADD CONSTRAINT account_account_tax_default_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_tax_default_rel_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_tax_default_rel
    ADD CONSTRAINT account_account_tax_default_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: account_account_template_chart_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_chart_template_id_fkey FOREIGN KEY (chart_template_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: account_account_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_account_template_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_account_template_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_account_template(id) ON DELETE CASCADE;


--
-- Name: account_account_template_tax_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template_tax_rel
    ADD CONSTRAINT account_account_template_tax_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account_template(id) ON DELETE CASCADE;


--
-- Name: account_account_template_tax_rel_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template_tax_rel
    ADD CONSTRAINT account_account_template_tax_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax_template(id) ON DELETE CASCADE;


--
-- Name: account_account_template_user_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_user_type_fkey FOREIGN KEY (user_type) REFERENCES account_account_type(id) ON DELETE SET NULL;


--
-- Name: account_account_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_template
    ADD CONSTRAINT account_account_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_account_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_type
    ADD CONSTRAINT account_account_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_account_type_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_type_rel
    ADD CONSTRAINT account_account_type_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_account_type_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_type_rel
    ADD CONSTRAINT account_account_type_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_account_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account_type
    ADD CONSTRAINT account_account_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_account_user_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_user_type_fkey FOREIGN KEY (user_type) REFERENCES account_account_type(id) ON DELETE SET NULL;


--
-- Name: account_account_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_account
    ADD CONSTRAINT account_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_addtmpl_wizard_cparent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_addtmpl_wizard
    ADD CONSTRAINT account_addtmpl_wizard_cparent_id_fkey FOREIGN KEY (cparent_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_addtmpl_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_addtmpl_wizard
    ADD CONSTRAINT account_addtmpl_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_addtmpl_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_addtmpl_wizard
    ADD CONSTRAINT account_addtmpl_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance_journal_rel
    ADD CONSTRAINT account_aged_trial_balance_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_aged_trial_balance(id) ON DELETE CASCADE;


--
-- Name: account_aged_trial_balance_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance_journal_rel
    ADD CONSTRAINT account_aged_trial_balance_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_aged_trial_balance_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_aged_trial_balance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_aged_trial_balance
    ADD CONSTRAINT account_aged_trial_balance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_manager_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_template_id_fkey FOREIGN KEY (template_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_to_invoice_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_to_invoice_fkey FOREIGN KEY (to_invoice) REFERENCES hr_timesheet_invoice_factor(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_balance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_balance
    ADD CONSTRAINT account_analytic_balance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_balance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_balance
    ADD CONSTRAINT account_analytic_balance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_chart_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_chart
    ADD CONSTRAINT account_analytic_chart_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_chart_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_chart
    ADD CONSTRAINT account_analytic_chart_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_cost_ledger_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger
    ADD CONSTRAINT account_analytic_cost_ledger_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_cost_ledger_journal_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger_journal_report
    ADD CONSTRAINT account_analytic_cost_ledger_journal_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_cost_ledger_journal_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger_journal_report
    ADD CONSTRAINT account_analytic_cost_ledger_journal_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_cost_ledger_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_cost_ledger
    ADD CONSTRAINT account_analytic_cost_ledger_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_inverted_balance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_inverted_balance
    ADD CONSTRAINT account_analytic_inverted_balance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_inverted_balance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_inverted_balance
    ADD CONSTRAINT account_analytic_inverted_balance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_invoice_line_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE CASCADE;


--
-- Name: account_analytic_invoice_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_invoice_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: account_analytic_invoice_line_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: account_analytic_invoice_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_invoice_line
    ADD CONSTRAINT account_analytic_invoice_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_journal_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal
    ADD CONSTRAINT account_analytic_journal_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_analytic_journal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal
    ADD CONSTRAINT account_analytic_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_journal_name_journal_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal_name
    ADD CONSTRAINT account_analytic_journal_name_journal_line_id_fkey FOREIGN KEY (journal_line_id) REFERENCES account_analytic_journal_report(id) ON DELETE CASCADE;


--
-- Name: account_analytic_journal_name_journal_print_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal_name
    ADD CONSTRAINT account_analytic_journal_name_journal_print_id_fkey FOREIGN KEY (journal_print_id) REFERENCES account_analytic_journal(id) ON DELETE CASCADE;


--
-- Name: account_analytic_journal_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal_report
    ADD CONSTRAINT account_analytic_journal_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_journal_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal_report
    ADD CONSTRAINT account_analytic_journal_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_journal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_journal
    ADD CONSTRAINT account_analytic_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_analytic_account(id) ON DELETE RESTRICT;


--
-- Name: account_analytic_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_general_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_general_account_id_fkey FOREIGN KEY (general_account_id) REFERENCES account_account(id) ON DELETE RESTRICT;


--
-- Name: account_analytic_line_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_analytic_journal(id) ON DELETE RESTRICT;


--
-- Name: account_analytic_line_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move_line(id) ON DELETE CASCADE;


--
-- Name: account_analytic_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_product_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_to_invoice_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_to_invoice_fkey FOREIGN KEY (to_invoice) REFERENCES hr_timesheet_invoice_factor(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_automatic_reconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_automatic_reconcile_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_automatic_reconcile_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_automatic_reconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_automatic_reconcile_writeoff_acc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_automatic_reconcile
    ADD CONSTRAINT account_automatic_reconcile_writeoff_acc_id_fkey FOREIGN KEY (writeoff_acc_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report_journal_rel
    ADD CONSTRAINT account_balance_report_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_balance_report(id) ON DELETE CASCADE;


--
-- Name: account_balance_report_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report_journal_rel
    ADD CONSTRAINT account_balance_report_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_balance_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_balance_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_balance_report
    ADD CONSTRAINT account_balance_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_accounts_wizard_bank_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_accounts_wizard
    ADD CONSTRAINT account_bank_accounts_wizard_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES wizard_multi_charts_accounts(id) ON DELETE CASCADE;


--
-- Name: account_bank_accounts_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_accounts_wizard
    ADD CONSTRAINT account_bank_accounts_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_accounts_wizard_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_accounts_wizard
    ADD CONSTRAINT account_bank_accounts_wizard_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_bank_accounts_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_accounts_wizard
    ADD CONSTRAINT account_bank_accounts_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_bank_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES res_partner_bank(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_journal_entry_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_journal_entry_id_fkey FOREIGN KEY (journal_entry_id) REFERENCES account_move(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_line_statement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_statement_id_fkey FOREIGN KEY (statement_id) REFERENCES account_bank_statement(id) ON DELETE RESTRICT;


--
-- Name: account_bank_statement_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement_line
    ADD CONSTRAINT account_bank_statement_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_bank_statement_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_bank_statement
    ADD CONSTRAINT account_bank_statement_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cashbox_line_bank_statement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cashbox_line
    ADD CONSTRAINT account_cashbox_line_bank_statement_id_fkey FOREIGN KEY (bank_statement_id) REFERENCES account_bank_statement(id) ON DELETE CASCADE;


--
-- Name: account_cashbox_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cashbox_line
    ADD CONSTRAINT account_cashbox_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cashbox_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cashbox_line
    ADD CONSTRAINT account_cashbox_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal_journal_rel
    ADD CONSTRAINT account_central_journal_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_central_journal(id) ON DELETE CASCADE;


--
-- Name: account_central_journal_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal_journal_rel
    ADD CONSTRAINT account_central_journal_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_central_journal_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_central_journal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_central_journal
    ADD CONSTRAINT account_central_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_change_currency_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_change_currency
    ADD CONSTRAINT account_change_currency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_change_currency_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_change_currency
    ADD CONSTRAINT account_change_currency_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_change_currency_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_change_currency
    ADD CONSTRAINT account_change_currency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_chart_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_chart_fiscalyear_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_fiscalyear_fkey FOREIGN KEY (fiscalyear) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_chart_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_chart_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_account_root_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_account_root_id_fkey FOREIGN KEY (account_root_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_bank_account_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_bank_account_view_id_fkey FOREIGN KEY (bank_account_view_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_expense_categ_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_expense_categ_fkey FOREIGN KEY (property_account_expense_categ) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_expense_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_expense_fkey FOREIGN KEY (property_account_expense) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_expense_opening_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_expense_opening_fkey FOREIGN KEY (property_account_expense_opening) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_income_categ_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_income_categ_fkey FOREIGN KEY (property_account_income_categ) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_income_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_income_fkey FOREIGN KEY (property_account_income) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_income_opening_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_income_opening_fkey FOREIGN KEY (property_account_income_opening) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_payable_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_payable_fkey FOREIGN KEY (property_account_payable) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_property_account_receivable_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_property_account_receivable_fkey FOREIGN KEY (property_account_receivable) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_tax_code_root_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_tax_code_root_id_fkey FOREIGN KEY (tax_code_root_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_chart_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart_template
    ADD CONSTRAINT account_chart_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_chart_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_chart
    ADD CONSTRAINT account_chart_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_account_common_account_repor_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report_account_journal_rel
    ADD CONSTRAINT account_common_account_report_account_common_account_repor_fkey FOREIGN KEY (account_common_account_report_id) REFERENCES account_common_account_report(id) ON DELETE CASCADE;


--
-- Name: account_common_account_report_account_j_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report_account_journal_rel
    ADD CONSTRAINT account_common_account_report_account_j_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_common_account_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_account_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_account_report
    ADD CONSTRAINT account_common_account_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_account_common_journal_repor_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report_account_journal_rel
    ADD CONSTRAINT account_common_journal_report_account_common_journal_repor_fkey FOREIGN KEY (account_common_journal_report_id) REFERENCES account_common_journal_report(id) ON DELETE CASCADE;


--
-- Name: account_common_journal_report_account_j_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report_account_journal_rel
    ADD CONSTRAINT account_common_journal_report_account_j_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_common_journal_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_journal_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_journal_report
    ADD CONSTRAINT account_common_journal_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_account_common_partner_repor_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report_account_journal_rel
    ADD CONSTRAINT account_common_partner_report_account_common_partner_repor_fkey FOREIGN KEY (account_common_partner_report_id) REFERENCES account_common_partner_report(id) ON DELETE CASCADE;


--
-- Name: account_common_partner_report_account_j_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report_account_journal_rel
    ADD CONSTRAINT account_common_partner_report_account_j_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_common_partner_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_partner_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_partner_report
    ADD CONSTRAINT account_common_partner_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_report_account_jou_account_common_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report_account_journal_rel
    ADD CONSTRAINT account_common_report_account_jou_account_common_report_id_fkey FOREIGN KEY (account_common_report_id) REFERENCES account_common_report(id) ON DELETE CASCADE;


--
-- Name: account_common_report_account_journal_r_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report_account_journal_rel
    ADD CONSTRAINT account_common_report_account_journal_r_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_common_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_common_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_common_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_common_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_common_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_common_report
    ADD CONSTRAINT account_common_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_chart_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_chart_template_id_fkey FOREIGN KEY (chart_template_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_default_purchase_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_default_purchase_tax_fkey FOREIGN KEY (default_purchase_tax) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_default_sale_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_default_sale_tax_fkey FOREIGN KEY (default_sale_tax) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_purchase_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_purchase_journal_id_fkey FOREIGN KEY (purchase_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_purchase_refund_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_purchase_refund_journal_id_fkey FOREIGN KEY (purchase_refund_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_purchase_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_purchase_tax_fkey FOREIGN KEY (purchase_tax) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_sale_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_sale_journal_id_fkey FOREIGN KEY (sale_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_sale_refund_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_sale_refund_journal_id_fkey FOREIGN KEY (sale_refund_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_sale_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_sale_tax_fkey FOREIGN KEY (sale_tax) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: account_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_config_settings
    ADD CONSTRAINT account_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_account_journal_rel_cutoff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_account_journal_rel
    ADD CONSTRAINT account_cutoff_account_journal_rel_cutoff_id_fkey FOREIGN KEY (cutoff_id) REFERENCES account_cutoff(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_account_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_account_journal_rel
    ADD CONSTRAINT account_cutoff_account_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_cutoff_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_cutoff_account_id_fkey FOREIGN KEY (cutoff_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_cutoff_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_cutoff_journal_id_fkey FOREIGN KEY (cutoff_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_account_tax_rel_cutoff_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line_account_tax_rel
    ADD CONSTRAINT account_cutoff_line_account_tax_rel_cutoff_line_id_fkey FOREIGN KEY (cutoff_line_id) REFERENCES account_cutoff_line(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_line_account_tax_rel_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line_account_tax_rel
    ADD CONSTRAINT account_cutoff_line_account_tax_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_line_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_cutoff_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_cutoff_account_id_fkey FOREIGN KEY (cutoff_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_move_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_move_line_id_fkey FOREIGN KEY (move_line_id) REFERENCES account_move_line(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_cutoff(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_line
    ADD CONSTRAINT account_cutoff_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_mapping_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_mapping_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_mapping_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_mapping_cutoff_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_cutoff_account_id_fkey FOREIGN KEY (cutoff_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_mapping_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_mapping
    ADD CONSTRAINT account_cutoff_mapping_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_tax_line_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_tax_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_tax_line_cutoff_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_cutoff_account_id_fkey FOREIGN KEY (cutoff_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_tax_line_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_cutoff_line(id) ON DELETE CASCADE;


--
-- Name: account_cutoff_tax_line_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_tax_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff_tax_line
    ADD CONSTRAINT account_cutoff_tax_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_cutoff_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_cutoff
    ADD CONSTRAINT account_cutoff_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_financial_report_account_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_financial_report
    ADD CONSTRAINT account_financial_report_account_report_id_fkey FOREIGN KEY (account_report_id) REFERENCES account_financial_report(id) ON DELETE SET NULL;


--
-- Name: account_financial_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_financial_report
    ADD CONSTRAINT account_financial_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_financial_report_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_financial_report
    ADD CONSTRAINT account_financial_report_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_financial_report(id) ON DELETE SET NULL;


--
-- Name: account_financial_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_financial_report
    ADD CONSTRAINT account_financial_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_account_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_account_dest_id_fkey FOREIGN KEY (account_dest_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_account_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_account_src_id_fkey FOREIGN KEY (account_src_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_position_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position(id) ON DELETE CASCADE;


--
-- Name: account_fiscal_position_account_template_account_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_account_dest_id_fkey FOREIGN KEY (account_dest_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_template_account_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_account_src_id_fkey FOREIGN KEY (account_src_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_template_position_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position_template(id) ON DELETE CASCADE;


--
-- Name: account_fiscal_position_account_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account_template
    ADD CONSTRAINT account_fiscal_position_account_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_account_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_account
    ADD CONSTRAINT account_fiscal_position_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_country_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_country_group_id_fkey FOREIGN KEY (country_group_id) REFERENCES res_country_group(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_position_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position(id) ON DELETE CASCADE;


--
-- Name: account_fiscal_position_tax_tax_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_tax_dest_id_fkey FOREIGN KEY (tax_dest_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_tax_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_tax_src_id_fkey FOREIGN KEY (tax_src_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_template_position_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position_template(id) ON DELETE CASCADE;


--
-- Name: account_fiscal_position_tax_template_tax_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_tax_dest_id_fkey FOREIGN KEY (tax_dest_id) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_template_tax_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_tax_src_id_fkey FOREIGN KEY (tax_src_id) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax_template
    ADD CONSTRAINT account_fiscal_position_tax_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_tax_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_tax
    ADD CONSTRAINT account_fiscal_position_tax_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_template_chart_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_template
    ADD CONSTRAINT account_fiscal_position_template_chart_template_id_fkey FOREIGN KEY (chart_template_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_template
    ADD CONSTRAINT account_fiscal_position_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position_template
    ADD CONSTRAINT account_fiscal_position_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscal_position_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscal_position
    ADD CONSTRAINT account_fiscal_position_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_fy2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_fy2_id_fkey FOREIGN KEY (fy2_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_fy_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_fy_id_fkey FOREIGN KEY (fy_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_state_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close_state
    ADD CONSTRAINT account_fiscalyear_close_state_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_state_fy_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close_state
    ADD CONSTRAINT account_fiscalyear_close_state_fy_id_fkey FOREIGN KEY (fy_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_state_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close_state
    ADD CONSTRAINT account_fiscalyear_close_state_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_close_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear_close
    ADD CONSTRAINT account_fiscalyear_close_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear
    ADD CONSTRAINT account_fiscalyear_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear
    ADD CONSTRAINT account_fiscalyear_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_end_journal_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear
    ADD CONSTRAINT account_fiscalyear_end_journal_period_id_fkey FOREIGN KEY (end_journal_period_id) REFERENCES account_journal_period(id) ON DELETE SET NULL;


--
-- Name: account_fiscalyear_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_fiscalyear
    ADD CONSTRAINT account_fiscalyear_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal_journal_rel
    ADD CONSTRAINT account_general_journal_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_general_journal(id) ON DELETE CASCADE;


--
-- Name: account_general_journal_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal_journal_rel
    ADD CONSTRAINT account_general_journal_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_general_journal_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_general_journal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_general_journal
    ADD CONSTRAINT account_general_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_installer_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_installer
    ADD CONSTRAINT account_installer_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_installer_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_installer
    ADD CONSTRAINT account_installer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_installer_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_installer
    ADD CONSTRAINT account_installer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_address_shipping_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_address_shipping_id_fkey FOREIGN KEY (address_shipping_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_invoice_cancel_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_cancel
    ADD CONSTRAINT account_invoice_cancel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_cancel_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_cancel
    ADD CONSTRAINT account_invoice_cancel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_commercial_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_commercial_partner_id_fkey FOREIGN KEY (commercial_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_invoice_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_invoice_confirm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_confirm
    ADD CONSTRAINT account_invoice_confirm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_confirm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_confirm
    ADD CONSTRAINT account_invoice_confirm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_contract_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_contract_id_fkey FOREIGN KEY (contract_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_invoice_fiscal_position_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_fiscal_position_fkey FOREIGN KEY (fiscal_position) REFERENCES account_fiscal_position(id) ON DELETE SET NULL;


--
-- Name: account_invoice_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_account_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_account_analytic_id_fkey FOREIGN KEY (account_analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE CASCADE;


--
-- Name: account_invoice_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE RESTRICT;


--
-- Name: account_invoice_line_purchase_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_purchase_line_id_fkey FOREIGN KEY (purchase_line_id) REFERENCES purchase_order_line(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_tax_invoice_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line_tax
    ADD CONSTRAINT account_invoice_line_tax_invoice_line_id_fkey FOREIGN KEY (invoice_line_id) REFERENCES account_invoice_line(id) ON DELETE CASCADE;


--
-- Name: account_invoice_line_tax_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line_tax
    ADD CONSTRAINT account_invoice_line_tax_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: account_invoice_line_uos_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_uos_id_fkey FOREIGN KEY (uos_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: account_invoice_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_line
    ADD CONSTRAINT account_invoice_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move(id) ON DELETE RESTRICT;


--
-- Name: account_invoice_partner_bank_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_partner_bank_id_fkey FOREIGN KEY (partner_bank_id) REFERENCES res_partner_bank(id) ON DELETE SET NULL;


--
-- Name: account_invoice_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_invoice_payment_term_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_payment_term_fkey FOREIGN KEY (payment_term) REFERENCES account_payment_term(id) ON DELETE SET NULL;


--
-- Name: account_invoice_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_invoice_refund_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_refund
    ADD CONSTRAINT account_invoice_refund_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_refund_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_refund
    ADD CONSTRAINT account_invoice_refund_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_invoice_refund_period_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_refund
    ADD CONSTRAINT account_invoice_refund_period_fkey FOREIGN KEY (period) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_invoice_refund_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_refund
    ADD CONSTRAINT account_invoice_refund_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_account_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_account_analytic_id_fkey FOREIGN KEY (account_analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_base_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_base_code_id_fkey FOREIGN KEY (base_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE CASCADE;


--
-- Name: account_invoice_tax_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_tax_code_id_fkey FOREIGN KEY (tax_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_invoice_tax_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice_tax
    ADD CONSTRAINT account_invoice_tax_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_x_bill_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_x_bill_from_fkey FOREIGN KEY (x_bill_from) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_invoice_x_checked_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_x_checked_by_fkey FOREIGN KEY (x_checked_by) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_invoice_x_prepared_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_invoice
    ADD CONSTRAINT account_invoice_x_prepared_by_fkey FOREIGN KEY (x_prepared_by) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_account_vat_dec_account_vat_declaration_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_account_vat_declaration_rel
    ADD CONSTRAINT account_journal_account_vat_dec_account_vat_declaration_id_fkey FOREIGN KEY (account_vat_declaration_id) REFERENCES account_vat_declaration(id) ON DELETE CASCADE;


--
-- Name: account_journal_account_vat_declaration_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_account_vat_declaration_rel
    ADD CONSTRAINT account_journal_account_vat_declaration_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_accounting_report_rel_account_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_accounting_report_rel
    ADD CONSTRAINT account_journal_accounting_report_rel_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_accounting_report_rel_accounting_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_accounting_report_rel
    ADD CONSTRAINT account_journal_accounting_report_rel_accounting_report_id_fkey FOREIGN KEY (accounting_report_id) REFERENCES accounting_report(id) ON DELETE CASCADE;


--
-- Name: account_journal_analytic_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_analytic_journal_id_fkey FOREIGN KEY (analytic_journal_id) REFERENCES account_analytic_journal(id) ON DELETE SET NULL;


--
-- Name: account_journal_cashbox_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_cashbox_line
    ADD CONSTRAINT account_journal_cashbox_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_cashbox_line_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_cashbox_line
    ADD CONSTRAINT account_journal_cashbox_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_cashbox_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_cashbox_line
    ADD CONSTRAINT account_journal_cashbox_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_journal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_currency_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_currency_fkey FOREIGN KEY (currency) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_journal_default_credit_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_default_credit_account_id_fkey FOREIGN KEY (default_credit_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_journal_default_debit_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_default_debit_account_id_fkey FOREIGN KEY (default_debit_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_journal_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_group_rel
    ADD CONSTRAINT account_journal_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: account_journal_group_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_group_rel
    ADD CONSTRAINT account_journal_group_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_internal_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_internal_account_id_fkey FOREIGN KEY (internal_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_journal_loss_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_loss_account_id_fkey FOREIGN KEY (loss_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_journal_period_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_journal_period_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_period_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_period_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE CASCADE;


--
-- Name: account_journal_period_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_period
    ADD CONSTRAINT account_journal_period_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_profit_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_profit_account_id_fkey FOREIGN KEY (profit_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_journal_select_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_select
    ADD CONSTRAINT account_journal_select_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_select_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_select
    ADD CONSTRAINT account_journal_select_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_sequence_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_sequence_id_fkey FOREIGN KEY (sequence_id) REFERENCES ir_sequence(id) ON DELETE SET NULL;


--
-- Name: account_journal_type_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_type_rel
    ADD CONSTRAINT account_journal_type_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_journal_type_rel_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal_type_rel
    ADD CONSTRAINT account_journal_type_rel_type_id_fkey FOREIGN KEY (type_id) REFERENCES account_account_type(id) ON DELETE CASCADE;


--
-- Name: account_journal_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_journal_x_bill_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_journal
    ADD CONSTRAINT account_journal_x_bill_from_fkey FOREIGN KEY (x_bill_from) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_model_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model
    ADD CONSTRAINT account_model_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_model_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model
    ADD CONSTRAINT account_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_model_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model
    ADD CONSTRAINT account_model_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_model_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_model_line_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE CASCADE;


--
-- Name: account_model_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_model_line_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_model_line_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_model_id_fkey FOREIGN KEY (model_id) REFERENCES account_model(id) ON DELETE CASCADE;


--
-- Name: account_model_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_model_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model_line
    ADD CONSTRAINT account_model_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_model_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_model
    ADD CONSTRAINT account_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_bank_reconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_bank_reconcile
    ADD CONSTRAINT account_move_bank_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_bank_reconcile_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_bank_reconcile
    ADD CONSTRAINT account_move_bank_reconcile_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_move_bank_reconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_bank_reconcile
    ADD CONSTRAINT account_move_bank_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_move_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_move_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_move_line_account_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_move_line_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_move_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_move_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_move_line_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_move_line_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move(id) ON DELETE CASCADE;


--
-- Name: account_move_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE RESTRICT;


--
-- Name: account_move_line_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_move_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: account_move_line_product_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile
    ADD CONSTRAINT account_move_line_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_reconcile_id_fkey FOREIGN KEY (reconcile_id) REFERENCES account_move_reconcile(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_partial_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_reconcile_partial_id_fkey FOREIGN KEY (reconcile_partial_id) REFERENCES account_move_reconcile(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_select_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_select
    ADD CONSTRAINT account_move_line_reconcile_select_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_select_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_select
    ADD CONSTRAINT account_move_line_reconcile_select_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_select_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_select
    ADD CONSTRAINT account_move_line_reconcile_select_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile
    ADD CONSTRAINT account_move_line_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_writeoff_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_analytic_id_fkey FOREIGN KEY (analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_writeoff_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_writeoff_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_writeoff_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_reconcile_writeoff_writeoff_acc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_reconcile_writeoff
    ADD CONSTRAINT account_move_line_reconcile_writeoff_writeoff_acc_id_fkey FOREIGN KEY (writeoff_acc_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_move_line_relation_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_relation
    ADD CONSTRAINT account_move_line_relation_line_id_fkey FOREIGN KEY (line_id) REFERENCES account_move_line(id) ON DELETE CASCADE;


--
-- Name: account_move_line_relation_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_relation
    ADD CONSTRAINT account_move_line_relation_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_statement_from_invoice_lines(id) ON DELETE CASCADE;


--
-- Name: account_move_line_statement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_statement_id_fkey FOREIGN KEY (statement_id) REFERENCES account_bank_statement(id) ON DELETE SET NULL;


--
-- Name: account_move_line_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_tax_code_id_fkey FOREIGN KEY (tax_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_move_line_unreconcile_select_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_unreconcile_select
    ADD CONSTRAINT account_move_line_unreconcile_select_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_move_line_unreconcile_select_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_unreconcile_select
    ADD CONSTRAINT account_move_line_unreconcile_select_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_unreconcile_select_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line_unreconcile_select
    ADD CONSTRAINT account_move_line_unreconcile_select_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_line
    ADD CONSTRAINT account_move_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_move_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_move_reconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_reconcile
    ADD CONSTRAINT account_move_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_reconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move_reconcile
    ADD CONSTRAINT account_move_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_move_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_move
    ADD CONSTRAINT account_move_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_open_closed_fiscalyear_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_open_closed_fiscalyear
    ADD CONSTRAINT account_open_closed_fiscalyear_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_open_closed_fiscalyear_fyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_open_closed_fiscalyear
    ADD CONSTRAINT account_open_closed_fiscalyear_fyear_id_fkey FOREIGN KEY (fyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_open_closed_fiscalyear_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_open_closed_fiscalyear
    ADD CONSTRAINT account_open_closed_fiscalyear_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance_journal_rel
    ADD CONSTRAINT account_partner_balance_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_partner_balance(id) ON DELETE CASCADE;


--
-- Name: account_partner_balance_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance_journal_rel
    ADD CONSTRAINT account_partner_balance_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_partner_balance_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_partner_balance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_balance
    ADD CONSTRAINT account_partner_balance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger_journal_rel
    ADD CONSTRAINT account_partner_ledger_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_partner_ledger(id) ON DELETE CASCADE;


--
-- Name: account_partner_ledger_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger_journal_rel
    ADD CONSTRAINT account_partner_ledger_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_partner_ledger_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_partner_ledger_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_ledger
    ADD CONSTRAINT account_partner_ledger_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_reconcile_process_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_reconcile_process
    ADD CONSTRAINT account_partner_reconcile_process_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_partner_reconcile_process_next_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_reconcile_process
    ADD CONSTRAINT account_partner_reconcile_process_next_partner_id_fkey FOREIGN KEY (next_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_partner_reconcile_process_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_partner_reconcile_process
    ADD CONSTRAINT account_partner_reconcile_process_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_payment_term_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term
    ADD CONSTRAINT account_payment_term_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_payment_term_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term_line
    ADD CONSTRAINT account_payment_term_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_payment_term_line_payment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term_line
    ADD CONSTRAINT account_payment_term_line_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment_term(id) ON DELETE CASCADE;


--
-- Name: account_payment_term_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term_line
    ADD CONSTRAINT account_payment_term_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_payment_term_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_payment_term
    ADD CONSTRAINT account_payment_term_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_period_close_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period_close
    ADD CONSTRAINT account_period_close_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_period_close_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period_close
    ADD CONSTRAINT account_period_close_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_period_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_period_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_period_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_period_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_period
    ADD CONSTRAINT account_period_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal_journal_rel
    ADD CONSTRAINT account_print_journal_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_print_journal(id) ON DELETE CASCADE;


--
-- Name: account_print_journal_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal_journal_rel
    ADD CONSTRAINT account_print_journal_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_print_journal_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_print_journal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_print_journal
    ADD CONSTRAINT account_print_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_journal_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger_journal_rel
    ADD CONSTRAINT account_report_general_ledger_journal_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_report_general_ledger(id) ON DELETE CASCADE;


--
-- Name: account_report_general_ledger_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger_journal_rel
    ADD CONSTRAINT account_report_general_ledger_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: account_report_general_ledger_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_report_general_ledger_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_report_general_ledger
    ADD CONSTRAINT account_report_general_ledger_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_sequence_fiscalyear_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_sequence_fiscalyear_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE CASCADE;


--
-- Name: account_sequence_fiscalyear_sequence_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_sequence_id_fkey FOREIGN KEY (sequence_id) REFERENCES ir_sequence(id) ON DELETE CASCADE;


--
-- Name: account_sequence_fiscalyear_sequence_main_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_sequence_main_id_fkey FOREIGN KEY (sequence_main_id) REFERENCES ir_sequence(id) ON DELETE CASCADE;


--
-- Name: account_sequence_fiscalyear_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_sequence_fiscalyear
    ADD CONSTRAINT account_sequence_fiscalyear_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_state_open_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_state_open
    ADD CONSTRAINT account_state_open_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_state_open_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_state_open
    ADD CONSTRAINT account_state_open_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_statement_from_invoice_lines_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_from_invoice_lines
    ADD CONSTRAINT account_statement_from_invoice_lines_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_statement_from_invoice_lines_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_from_invoice_lines
    ADD CONSTRAINT account_statement_from_invoice_lines_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_statement_operation_template_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: account_statement_operation_template_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_statement_operation_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_statement_operation_template_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE RESTRICT;


--
-- Name: account_statement_operation_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_statement_operation_template
    ADD CONSTRAINT account_statement_operation_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription
    ADD CONSTRAINT account_subscription_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_generate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_generate
    ADD CONSTRAINT account_subscription_generate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_generate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_generate
    ADD CONSTRAINT account_subscription_generate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_line
    ADD CONSTRAINT account_subscription_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_line_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_line
    ADD CONSTRAINT account_subscription_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move(id) ON DELETE SET NULL;


--
-- Name: account_subscription_line_subscription_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_line
    ADD CONSTRAINT account_subscription_line_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES account_subscription(id) ON DELETE SET NULL;


--
-- Name: account_subscription_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription_line
    ADD CONSTRAINT account_subscription_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_subscription_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription
    ADD CONSTRAINT account_subscription_model_id_fkey FOREIGN KEY (model_id) REFERENCES account_model(id) ON DELETE SET NULL;


--
-- Name: account_subscription_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_subscription
    ADD CONSTRAINT account_subscription_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_account_analytic_collected_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_account_analytic_collected_id_fkey FOREIGN KEY (account_analytic_collected_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_tax_account_analytic_paid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_account_analytic_paid_id_fkey FOREIGN KEY (account_analytic_paid_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_tax_account_collected_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_account_collected_id_fkey FOREIGN KEY (account_collected_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_tax_account_paid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_account_paid_id_fkey FOREIGN KEY (account_paid_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_tax_base_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_base_code_id_fkey FOREIGN KEY (base_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_tax_chart_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_chart
    ADD CONSTRAINT account_tax_chart_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_chart_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_chart
    ADD CONSTRAINT account_tax_chart_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_tax_chart_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_chart
    ADD CONSTRAINT account_tax_chart_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code
    ADD CONSTRAINT account_tax_code_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code
    ADD CONSTRAINT account_tax_code_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code
    ADD CONSTRAINT account_tax_code_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code_template
    ADD CONSTRAINT account_tax_code_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_template_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code_template
    ADD CONSTRAINT account_tax_code_template_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code_template
    ADD CONSTRAINT account_tax_code_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_code_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_code
    ADD CONSTRAINT account_tax_code_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_tax_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_tax_ref_base_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_ref_base_code_id_fkey FOREIGN KEY (ref_base_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_tax_ref_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_ref_tax_code_id_fkey FOREIGN KEY (ref_tax_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_tax_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_tax_code_id_fkey FOREIGN KEY (tax_code_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_account_collected_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_account_collected_id_fkey FOREIGN KEY (account_collected_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_account_paid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_account_paid_id_fkey FOREIGN KEY (account_paid_id) REFERENCES account_account_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_base_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_base_code_id_fkey FOREIGN KEY (base_code_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_chart_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_chart_template_id_fkey FOREIGN KEY (chart_template_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_ref_base_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_ref_base_code_id_fkey FOREIGN KEY (ref_base_code_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_ref_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_ref_tax_code_id_fkey FOREIGN KEY (ref_tax_code_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_tax_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_tax_code_id_fkey FOREIGN KEY (tax_code_id) REFERENCES account_tax_code_template(id) ON DELETE SET NULL;


--
-- Name: account_tax_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax_template
    ADD CONSTRAINT account_tax_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_tax_x_tax_state_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_tax
    ADD CONSTRAINT account_tax_x_tax_state_fkey FOREIGN KEY (x_tax_state) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: account_template_financial_report_account_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_template_financial_report
    ADD CONSTRAINT account_template_financial_report_account_template_id_fkey FOREIGN KEY (account_template_id) REFERENCES account_account_template(id) ON DELETE CASCADE;


--
-- Name: account_template_financial_report_report_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_template_financial_report
    ADD CONSTRAINT account_template_financial_report_report_line_id_fkey FOREIGN KEY (report_line_id) REFERENCES account_financial_report(id) ON DELETE CASCADE;


--
-- Name: account_unreconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile
    ADD CONSTRAINT account_unreconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_unreconcile_reconcile_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile_reconcile
    ADD CONSTRAINT account_unreconcile_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_unreconcile_reconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile_reconcile
    ADD CONSTRAINT account_unreconcile_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_unreconcile_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_unreconcile
    ADD CONSTRAINT account_unreconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_use_model_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_use_model
    ADD CONSTRAINT account_use_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_use_model_relation_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_use_model_relation
    ADD CONSTRAINT account_use_model_relation_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_use_model(id) ON DELETE CASCADE;


--
-- Name: account_use_model_relation_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_use_model_relation
    ADD CONSTRAINT account_use_model_relation_model_id_fkey FOREIGN KEY (model_id) REFERENCES account_model(id) ON DELETE CASCADE;


--
-- Name: account_use_model_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_use_model
    ADD CONSTRAINT account_use_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_chart_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_chart_tax_id_fkey FOREIGN KEY (chart_tax_id) REFERENCES account_tax_code(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_vat_declaration_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_vat_declaration
    ADD CONSTRAINT account_vat_declaration_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_voucher_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_voucher_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_analytic_id_fkey FOREIGN KEY (analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_voucher_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_voucher_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_voucher_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_account_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_account_analytic_id_fkey FOREIGN KEY (account_analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_move_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_move_line_id_fkey FOREIGN KEY (move_line_id) REFERENCES account_move_line(id) ON DELETE SET NULL;


--
-- Name: account_voucher_line_voucher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_voucher_id_fkey FOREIGN KEY (voucher_id) REFERENCES account_voucher(id) ON DELETE CASCADE;


--
-- Name: account_voucher_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher_line
    ADD CONSTRAINT account_voucher_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_voucher_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move(id) ON DELETE SET NULL;


--
-- Name: account_voucher_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_voucher_payment_rate_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_payment_rate_currency_id_fkey FOREIGN KEY (payment_rate_currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: account_voucher_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: account_voucher_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE SET NULL;


--
-- Name: account_voucher_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_voucher_writeoff_acc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY account_voucher
    ADD CONSTRAINT account_voucher_writeoff_acc_id_fkey FOREIGN KEY (writeoff_acc_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: accounting_report_account_report_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_account_report_id_fkey FOREIGN KEY (account_report_id) REFERENCES account_financial_report(id) ON DELETE SET NULL;


--
-- Name: accounting_report_chart_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_chart_account_id_fkey FOREIGN KEY (chart_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: accounting_report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: accounting_report_fiscalyear_id_cmp_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_fiscalyear_id_cmp_fkey FOREIGN KEY (fiscalyear_id_cmp) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: accounting_report_fiscalyear_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_fiscalyear_id_fkey FOREIGN KEY (fiscalyear_id) REFERENCES account_fiscalyear(id) ON DELETE SET NULL;


--
-- Name: accounting_report_period_from_cmp_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_period_from_cmp_fkey FOREIGN KEY (period_from_cmp) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: accounting_report_period_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_period_from_fkey FOREIGN KEY (period_from) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: accounting_report_period_to_cmp_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_period_to_cmp_fkey FOREIGN KEY (period_to_cmp) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: accounting_report_period_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_period_to_fkey FOREIGN KEY (period_to) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: accounting_report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY accounting_report
    ADD CONSTRAINT accounting_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: analytic_profit_emp_rel_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY analytic_profit_emp_rel
    ADD CONSTRAINT analytic_profit_emp_rel_analytic_id_fkey FOREIGN KEY (analytic_id) REFERENCES hr_timesheet_analytic_profit(id) ON DELETE CASCADE;


--
-- Name: analytic_profit_emp_rel_emp_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY analytic_profit_emp_rel
    ADD CONSTRAINT analytic_profit_emp_rel_emp_id_fkey FOREIGN KEY (emp_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: analytic_profit_journal_rel_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY analytic_profit_journal_rel
    ADD CONSTRAINT analytic_profit_journal_rel_analytic_id_fkey FOREIGN KEY (analytic_id) REFERENCES hr_timesheet_analytic_profit(id) ON DELETE CASCADE;


--
-- Name: analytic_profit_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY analytic_profit_journal_rel
    ADD CONSTRAINT analytic_profit_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_analytic_journal(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_act_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_act_user_id_fkey FOREIGN KEY (act_user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_filter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_filter_id_fkey FOREIGN KEY (filter_id) REFERENCES ir_filters(id) ON DELETE RESTRICT;


--
-- Name: base_action_rule_filter_pre_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_filter_pre_id_fkey FOREIGN KEY (filter_pre_id) REFERENCES ir_filters(id) ON DELETE RESTRICT;


--
-- Name: base_action_rule_ir_act_server_rel_base_action_rule_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_ir_act_server_rel
    ADD CONSTRAINT base_action_rule_ir_act_server_rel_base_action_rule_id_fkey FOREIGN KEY (base_action_rule_id) REFERENCES base_action_rule(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_ir_act_server_rel_ir_act_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_ir_act_server_rel
    ADD CONSTRAINT base_action_rule_ir_act_server_rel_ir_act_server_id_fkey FOREIGN KEY (ir_act_server_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_lead_test_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_lead_test
    ADD CONSTRAINT base_action_rule_lead_test_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_lead_test_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_lead_test
    ADD CONSTRAINT base_action_rule_lead_test_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_lead_test_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_lead_test
    ADD CONSTRAINT base_action_rule_lead_test_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_lead_test_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_lead_test
    ADD CONSTRAINT base_action_rule_lead_test_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_res_partner_rel_base_action_rule_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_res_partner_rel
    ADD CONSTRAINT base_action_rule_res_partner_rel_base_action_rule_id_fkey FOREIGN KEY (base_action_rule_id) REFERENCES base_action_rule(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule_res_partner_rel
    ADD CONSTRAINT base_action_rule_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_trg_date_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_date_calendar_id_fkey FOREIGN KEY (trg_date_calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_date_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_date_id_fkey FOREIGN KEY (trg_date_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_config_settings_auth_signup_template_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_config_settings
    ADD CONSTRAINT base_config_settings_auth_signup_template_user_id_fkey FOREIGN KEY (auth_signup_template_user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_config_settings
    ADD CONSTRAINT base_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_config_settings_font_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_config_settings
    ADD CONSTRAINT base_config_settings_font_fkey FOREIGN KEY (font) REFERENCES res_font(id) ON DELETE SET NULL;


--
-- Name: base_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_config_settings
    ADD CONSTRAINT base_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_import_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_import
    ADD CONSTRAINT base_import_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_import_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_import
    ADD CONSTRAINT base_import_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char
    ADD CONSTRAINT base_import_tests_models_char_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_noreadonly_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_noreadonly
    ADD CONSTRAINT base_import_tests_models_char_noreadonly_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_noreadonly_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_noreadonly
    ADD CONSTRAINT base_import_tests_models_char_noreadonly_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_readonly_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_readonly
    ADD CONSTRAINT base_import_tests_models_char_readonly_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_readonly_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_readonly
    ADD CONSTRAINT base_import_tests_models_char_readonly_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_required_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_required
    ADD CONSTRAINT base_import_tests_models_char_required_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_required_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_required
    ADD CONSTRAINT base_import_tests_models_char_required_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_states_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_states
    ADD CONSTRAINT base_import_tests_models_char_states_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_states_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_states
    ADD CONSTRAINT base_import_tests_models_char_states_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_stillreadonly_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_stillreadonly
    ADD CONSTRAINT base_import_tests_models_char_stillreadonly_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_stillreadonly_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char_stillreadonly
    ADD CONSTRAINT base_import_tests_models_char_stillreadonly_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_char_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_char
    ADD CONSTRAINT base_import_tests_models_char_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o
    ADD CONSTRAINT base_import_tests_models_m2o_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_related_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_related
    ADD CONSTRAINT base_import_tests_models_m2o_related_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_related_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_related
    ADD CONSTRAINT base_import_tests_models_m2o_related_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_required_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required
    ADD CONSTRAINT base_import_tests_models_m2o_required_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_required_related_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required_related
    ADD CONSTRAINT base_import_tests_models_m2o_required_related_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_required_related_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required_related
    ADD CONSTRAINT base_import_tests_models_m2o_required_related_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_required_value_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required
    ADD CONSTRAINT base_import_tests_models_m2o_required_value_fkey FOREIGN KEY (value) REFERENCES base_import_tests_models_m2o_required_related(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_required_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o_required
    ADD CONSTRAINT base_import_tests_models_m2o_required_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_value_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o
    ADD CONSTRAINT base_import_tests_models_m2o_value_fkey FOREIGN KEY (value) REFERENCES base_import_tests_models_m2o_related(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_m2o_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_m2o
    ADD CONSTRAINT base_import_tests_models_m2o_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_o2m_child_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m_child
    ADD CONSTRAINT base_import_tests_models_o2m_child_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_o2m_child_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m_child
    ADD CONSTRAINT base_import_tests_models_o2m_child_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES base_import_tests_models_o2m(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_o2m_child_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m_child
    ADD CONSTRAINT base_import_tests_models_o2m_child_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_o2m_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m
    ADD CONSTRAINT base_import_tests_models_o2m_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_o2m_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_o2m
    ADD CONSTRAINT base_import_tests_models_o2m_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_preview_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_preview
    ADD CONSTRAINT base_import_tests_models_preview_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_import_tests_models_preview_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_import_tests_models_preview
    ADD CONSTRAINT base_import_tests_models_preview_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_export_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_export_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_import_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_import_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_install_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_install_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_configuration_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_configuration_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_record_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_record
    ADD CONSTRAINT base_module_record_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_record_model_rel_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_record_model_rel
    ADD CONSTRAINT base_module_record_model_rel_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: base_module_record_model_rel_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_record_model_rel
    ADD CONSTRAINT base_module_record_model_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES base_module_record(id) ON DELETE CASCADE;


--
-- Name: base_module_record_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_record
    ADD CONSTRAINT base_module_record_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_update_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_update_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_upgrade_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_upgrade_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_automatic__base_partner_merge_automatic_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard_res_partner_rel
    ADD CONSTRAINT base_partner_merge_automatic__base_partner_merge_automatic_fkey FOREIGN KEY (base_partner_merge_automatic_wizard_id) REFERENCES base_partner_merge_automatic_wizard(id) ON DELETE CASCADE;


--
-- Name: base_partner_merge_automatic_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard
    ADD CONSTRAINT base_partner_merge_automatic_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_automatic_wizard_current_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard
    ADD CONSTRAINT base_partner_merge_automatic_wizard_current_line_id_fkey FOREIGN KEY (current_line_id) REFERENCES base_partner_merge_line(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_automatic_wizard_dst_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard
    ADD CONSTRAINT base_partner_merge_automatic_wizard_dst_partner_id_fkey FOREIGN KEY (dst_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard_res_partner_rel
    ADD CONSTRAINT base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: base_partner_merge_automatic_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_automatic_wizard
    ADD CONSTRAINT base_partner_merge_automatic_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_line
    ADD CONSTRAINT base_partner_merge_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_line_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_line
    ADD CONSTRAINT base_partner_merge_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES base_partner_merge_automatic_wizard(id) ON DELETE SET NULL;


--
-- Name: base_partner_merge_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_partner_merge_line
    ADD CONSTRAINT base_partner_merge_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_setup_terminology_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_setup_terminology_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_update_translations_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_update_translations_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_create_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY board_create
    ADD CONSTRAINT board_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_create_menu_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY board_create
    ADD CONSTRAINT board_create_menu_parent_id_fkey FOREIGN KEY (menu_parent_id) REFERENCES ir_ui_menu(id) ON DELETE SET NULL;


--
-- Name: board_create_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY board_create
    ADD CONSTRAINT board_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: bus_bus_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY bus_bus
    ADD CONSTRAINT bus_bus_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: bus_bus_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY bus_bus
    ADD CONSTRAINT bus_bus_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_calendar_event_rel_calendar_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_alarm_calendar_event_rel
    ADD CONSTRAINT calendar_alarm_calendar_event_rel_calendar_alarm_id_fkey FOREIGN KEY (calendar_alarm_id) REFERENCES calendar_alarm(id) ON DELETE CASCADE;


--
-- Name: calendar_alarm_calendar_event_rel_calendar_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_alarm_calendar_event_rel
    ADD CONSTRAINT calendar_alarm_calendar_event_rel_calendar_event_id_fkey FOREIGN KEY (calendar_event_id) REFERENCES calendar_event(id) ON DELETE CASCADE;


--
-- Name: calendar_alarm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_event_id_fkey FOREIGN KEY (event_id) REFERENCES calendar_event(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_contacts_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_contacts
    ADD CONSTRAINT calendar_contacts_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_contacts_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_contacts
    ADD CONSTRAINT calendar_contacts_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: calendar_contacts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_contacts
    ADD CONSTRAINT calendar_contacts_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_contacts_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_contacts
    ADD CONSTRAINT calendar_contacts_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE SET NULL;


--
-- Name: calendar_event_phonecall_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_phonecall_id_fkey FOREIGN KEY (phonecall_id) REFERENCES crm_phonecall(id) ON DELETE SET NULL;


--
-- Name: calendar_event_res_partner_rel_calendar_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event_res_partner_rel
    ADD CONSTRAINT calendar_event_res_partner_rel_calendar_event_id_fkey FOREIGN KEY (calendar_event_id) REFERENCES calendar_event(id) ON DELETE CASCADE;


--
-- Name: calendar_event_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event_res_partner_rel
    ADD CONSTRAINT calendar_event_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: calendar_event_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event_type
    ADD CONSTRAINT calendar_event_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event_type
    ADD CONSTRAINT calendar_event_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: cash_box_in_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_in
    ADD CONSTRAINT cash_box_in_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: cash_box_in_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_in
    ADD CONSTRAINT cash_box_in_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: cash_box_out_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_out
    ADD CONSTRAINT cash_box_out_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: cash_box_out_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY cash_box_out
    ADD CONSTRAINT cash_box_out_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_password_user_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_user
    ADD CONSTRAINT change_password_user_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_password_user_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_user
    ADD CONSTRAINT change_password_user_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_password_user_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_user
    ADD CONSTRAINT change_password_user_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES change_password_wizard(id) ON DELETE SET NULL;


--
-- Name: change_password_user_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_user
    ADD CONSTRAINT change_password_user_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_password_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_wizard
    ADD CONSTRAINT change_password_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_password_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_password_wizard
    ADD CONSTRAINT change_password_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_production_qty_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_production_qty
    ADD CONSTRAINT change_production_qty_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: change_production_qty_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY change_production_qty
    ADD CONSTRAINT change_production_qty_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_alias_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias(id) ON DELETE RESTRICT;


--
-- Name: crm_case_section_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_resource_calendar_id_fkey FOREIGN KEY (resource_calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_stage_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_stage_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_claim_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_claim_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_claim_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_claim_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_claim_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_claim_stage_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim_stage
    ADD CONSTRAINT crm_claim_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_claim_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_claim_stage(id) ON DELETE SET NULL;


--
-- Name: crm_claim_stage_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim_stage
    ADD CONSTRAINT crm_claim_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_claim_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_claim_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_claim
    ADD CONSTRAINT crm_claim_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_channel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES crm_tracking_medium(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_helpdesk_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_helpdesk
    ADD CONSTRAINT crm_helpdesk_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner__crm_lead2opportunity_partner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner__crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_res_users_r_res_users_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_res_users_r_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_mass_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_campaign_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES crm_tracking_campaign(id) ON DELETE SET NULL;


--
-- Name: crm_lead_category_rel_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_category_rel
    ADD CONSTRAINT crm_lead_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES crm_case_categ(id) ON DELETE CASCADE;


--
-- Name: crm_lead_category_rel_lead_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_category_rel
    ADD CONSTRAINT crm_lead_category_rel_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: crm_lead_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_lead_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: crm_lead_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_crm_lead2opportunit_crm_lead2opportunity_partner_fkey1; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunit_crm_lead2opportunity_partner_fkey1 FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_id) REFERENCES crm_lead2opportunity_partner(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: crm_lead_medium_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES crm_tracking_medium(id) ON DELETE SET NULL;


--
-- Name: crm_lead_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_lead_payment_mode_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_payment_mode_fkey FOREIGN KEY (payment_mode) REFERENCES crm_payment_mode(id) ON DELETE SET NULL;


--
-- Name: crm_lead_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_lead_source_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_source_id_fkey FOREIGN KEY (source_id) REFERENCES crm_tracking_source(id) ON DELETE SET NULL;


--
-- Name: crm_lead_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_case_stage(id) ON DELETE SET NULL;


--
-- Name: crm_lead_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: crm_lead_title_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title(id) ON DELETE SET NULL;


--
-- Name: crm_lead_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_make_sale_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_make_sale
    ADD CONSTRAINT crm_make_sale_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_make_sale_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_make_sale
    ADD CONSTRAINT crm_make_sale_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_make_sale_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_make_sale
    ADD CONSTRAINT crm_make_sale_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_partner_binding_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_partner_binding
    ADD CONSTRAINT crm_partner_binding_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_partner_binding_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_partner_binding
    ADD CONSTRAINT crm_partner_binding_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_partner_binding_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_partner_binding
    ADD CONSTRAINT crm_partner_binding_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_payment_mode_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_payment_mode
    ADD CONSTRAINT crm_payment_mode_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_payment_mode_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_payment_mode
    ADD CONSTRAINT crm_payment_mode_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_payment_mode_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_payment_mode
    ADD CONSTRAINT crm_payment_mode_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES res_partner_category(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_segmentation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_segmentation_id_fkey FOREIGN KEY (segmentation_id) REFERENCES crm_segmentation(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_campaign_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_campaign
    ADD CONSTRAINT crm_tracking_campaign_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_campaign_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_campaign
    ADD CONSTRAINT crm_tracking_campaign_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_campaign_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_campaign
    ADD CONSTRAINT crm_tracking_campaign_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_medium_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_medium
    ADD CONSTRAINT crm_tracking_medium_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_medium_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_medium
    ADD CONSTRAINT crm_tracking_medium_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_source_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_source
    ADD CONSTRAINT crm_tracking_source_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_tracking_source_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY crm_tracking_source
    ADD CONSTRAINT crm_tracking_source_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: db_backup_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY db_backup
    ADD CONSTRAINT db_backup_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: db_backup_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY db_backup
    ADD CONSTRAINT db_backup_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_test_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision_test
    ADD CONSTRAINT decimal_precision_test_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_test_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision_test
    ADD CONSTRAINT decimal_precision_test_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_carrier_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_carrier
    ADD CONSTRAINT delivery_carrier_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_carrier_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_carrier
    ADD CONSTRAINT delivery_carrier_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: delivery_carrier_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_carrier
    ADD CONSTRAINT delivery_carrier_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: delivery_carrier_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_carrier
    ADD CONSTRAINT delivery_carrier_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_grid_carrier_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid
    ADD CONSTRAINT delivery_grid_carrier_id_fkey FOREIGN KEY (carrier_id) REFERENCES delivery_carrier(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_country_rel_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_country_rel
    ADD CONSTRAINT delivery_grid_country_rel_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_country_rel_grid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_country_rel
    ADD CONSTRAINT delivery_grid_country_rel_grid_id_fkey FOREIGN KEY (grid_id) REFERENCES delivery_grid(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid
    ADD CONSTRAINT delivery_grid_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_grid_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_line
    ADD CONSTRAINT delivery_grid_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_grid_line_grid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_line
    ADD CONSTRAINT delivery_grid_line_grid_id_fkey FOREIGN KEY (grid_id) REFERENCES delivery_grid(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_line
    ADD CONSTRAINT delivery_grid_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: delivery_grid_state_rel_grid_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_state_rel
    ADD CONSTRAINT delivery_grid_state_rel_grid_id_fkey FOREIGN KEY (grid_id) REFERENCES delivery_grid(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_state_rel_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid_state_rel
    ADD CONSTRAINT delivery_grid_state_rel_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE CASCADE;


--
-- Name: delivery_grid_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY delivery_grid
    ADD CONSTRAINT delivery_grid_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: email_template_attachment_rel_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_attachment_rel
    ADD CONSTRAINT email_template_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE CASCADE;


--
-- Name: email_template_attachment_rel_email_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_attachment_rel
    ADD CONSTRAINT email_template_attachment_rel_email_template_id_fkey FOREIGN KEY (email_template_id) REFERENCES email_template(id) ON DELETE CASCADE;


--
-- Name: email_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: email_template_mail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server(id) ON DELETE SET NULL;


--
-- Name: email_template_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: email_template_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_model_object_field_fkey FOREIGN KEY (model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_mail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_model_object_field_fkey FOREIGN KEY (model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_ref_ir_act_window_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_ref_ir_act_window_fkey FOREIGN KEY (ref_ir_act_window) REFERENCES ir_act_window(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_ref_ir_value_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_ref_ir_value_fkey FOREIGN KEY (ref_ir_value) REFERENCES ir_values(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_report_template_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_report_template_fkey FOREIGN KEY (report_template) REFERENCES ir_act_report_xml(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_res_partn_email_template_preview_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview_res_partner_rel
    ADD CONSTRAINT email_template_preview_res_partn_email_template_preview_id_fkey FOREIGN KEY (email_template_preview_id) REFERENCES email_template_preview(id) ON DELETE CASCADE;


--
-- Name: email_template_preview_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview_res_partner_rel
    ADD CONSTRAINT email_template_preview_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: email_template_preview_sub_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_sub_model_object_field_fkey FOREIGN KEY (sub_model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_sub_object_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_sub_object_fkey FOREIGN KEY (sub_object) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: email_template_preview_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template_preview
    ADD CONSTRAINT email_template_preview_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: email_template_ref_ir_act_window_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_ref_ir_act_window_fkey FOREIGN KEY (ref_ir_act_window) REFERENCES ir_act_window(id) ON DELETE SET NULL;


--
-- Name: email_template_ref_ir_value_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_ref_ir_value_fkey FOREIGN KEY (ref_ir_value) REFERENCES ir_values(id) ON DELETE SET NULL;


--
-- Name: email_template_report_template_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_report_template_fkey FOREIGN KEY (report_template) REFERENCES ir_act_report_xml(id) ON DELETE SET NULL;


--
-- Name: email_template_sub_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_sub_model_object_field_fkey FOREIGN KEY (sub_model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: email_template_sub_object_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_sub_object_fkey FOREIGN KEY (sub_object) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: email_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY email_template
    ADD CONSTRAINT email_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: employee_category_rel_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY employee_category_rel
    ADD CONSTRAINT employee_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES hr_employee_category(id) ON DELETE CASCADE;


--
-- Name: employee_category_rel_emp_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY employee_category_rel
    ADD CONSTRAINT employee_category_rel_emp_id_fkey FOREIGN KEY (emp_id) REFERENCES hr_employee(id) ON DELETE CASCADE;


--
-- Name: export_wizard_ept_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY export_wizard_ept
    ADD CONSTRAINT export_wizard_ept_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: export_wizard_ept_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY export_wizard_ept
    ADD CONSTRAINT export_wizard_ept_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: fetchmail_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_config_settings
    ADD CONSTRAINT fetchmail_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: fetchmail_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_config_settings
    ADD CONSTRAINT fetchmail_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_action_reason_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_action_reason
    ADD CONSTRAINT hr_action_reason_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_action_reason_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_action_reason
    ADD CONSTRAINT hr_action_reason_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_analytic_timesheet_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_analytic_timesheet
    ADD CONSTRAINT hr_analytic_timesheet_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_analytic_timesheet_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_analytic_timesheet
    ADD CONSTRAINT hr_analytic_timesheet_line_id_fkey FOREIGN KEY (line_id) REFERENCES account_analytic_line(id) ON DELETE CASCADE;


--
-- Name: hr_analytic_timesheet_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_analytic_timesheet
    ADD CONSTRAINT hr_analytic_timesheet_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: hr_analytic_timesheet_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_analytic_timesheet
    ADD CONSTRAINT hr_analytic_timesheet_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_action_desc_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance
    ADD CONSTRAINT hr_attendance_action_desc_fkey FOREIGN KEY (action_desc) REFERENCES hr_action_reason(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance
    ADD CONSTRAINT hr_attendance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_employee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance
    ADD CONSTRAINT hr_attendance_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_error_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance_error
    ADD CONSTRAINT hr_attendance_error_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_error_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance_error
    ADD CONSTRAINT hr_attendance_error_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_attendance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_attendance
    ADD CONSTRAINT hr_attendance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_config_settings
    ADD CONSTRAINT hr_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_config_settings
    ADD CONSTRAINT hr_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_department_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: hr_department_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_department_manager_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_department_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES hr_department(id) ON DELETE SET NULL;


--
-- Name: hr_department_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_department
    ADD CONSTRAINT hr_department_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_employee_address_home_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_address_home_id_fkey FOREIGN KEY (address_home_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: hr_employee_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_address_id_fkey FOREIGN KEY (address_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: hr_employee_bank_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES res_partner_bank(id) ON DELETE SET NULL;


--
-- Name: hr_employee_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee_category
    ADD CONSTRAINT hr_employee_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_employee_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee_category
    ADD CONSTRAINT hr_employee_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES hr_employee_category(id) ON DELETE SET NULL;


--
-- Name: hr_employee_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee_category
    ADD CONSTRAINT hr_employee_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_employee_coach_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_coach_id_fkey FOREIGN KEY (coach_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_employee_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: hr_employee_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_employee_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_department_id_fkey FOREIGN KEY (department_id) REFERENCES hr_department(id) ON DELETE SET NULL;


--
-- Name: hr_employee_job_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_job_id_fkey FOREIGN KEY (job_id) REFERENCES hr_job(id) ON DELETE SET NULL;


--
-- Name: hr_employee_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_analytic_journal(id) ON DELETE SET NULL;


--
-- Name: hr_employee_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_employee_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: hr_employee_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource(id) ON DELETE CASCADE;


--
-- Name: hr_employee_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: hr_employee_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_employee
    ADD CONSTRAINT hr_employee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_job_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: hr_job_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_job_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_department_id_fkey FOREIGN KEY (department_id) REFERENCES hr_department(id) ON DELETE SET NULL;


--
-- Name: hr_job_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_job
    ADD CONSTRAINT hr_job_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_sign_in_project_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_in_project
    ADD CONSTRAINT hr_sign_in_project_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_sign_in_project_emp_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_in_project
    ADD CONSTRAINT hr_sign_in_project_emp_id_fkey FOREIGN KEY (emp_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_sign_in_project_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_in_project
    ADD CONSTRAINT hr_sign_in_project_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_sign_out_project_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_out_project
    ADD CONSTRAINT hr_sign_out_project_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: hr_sign_out_project_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_out_project
    ADD CONSTRAINT hr_sign_out_project_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_sign_out_project_emp_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_out_project
    ADD CONSTRAINT hr_sign_out_project_emp_id_fkey FOREIGN KEY (emp_id) REFERENCES hr_employee(id) ON DELETE SET NULL;


--
-- Name: hr_sign_out_project_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_sign_out_project
    ADD CONSTRAINT hr_sign_out_project_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_analytic_profit_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_analytic_profit
    ADD CONSTRAINT hr_timesheet_analytic_profit_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_analytic_profit_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_analytic_profit
    ADD CONSTRAINT hr_timesheet_analytic_profit_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create
    ADD CONSTRAINT hr_timesheet_invoice_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_final_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create_final
    ADD CONSTRAINT hr_timesheet_invoice_create_final_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_final_product_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create_final
    ADD CONSTRAINT hr_timesheet_invoice_create_final_product_fkey FOREIGN KEY (product) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_final_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create_final
    ADD CONSTRAINT hr_timesheet_invoice_create_final_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_product_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create
    ADD CONSTRAINT hr_timesheet_invoice_create_product_fkey FOREIGN KEY (product) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_create_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_create
    ADD CONSTRAINT hr_timesheet_invoice_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_factor_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_factor
    ADD CONSTRAINT hr_timesheet_invoice_factor_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: hr_timesheet_invoice_factor_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY hr_timesheet_invoice_factor
    ADD CONSTRAINT hr_timesheet_invoice_factor_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_message_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_message
    ADD CONSTRAINT im_chat_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_message_from_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_message
    ADD CONSTRAINT im_chat_message_from_id_fkey FOREIGN KEY (from_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_message_to_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_message
    ADD CONSTRAINT im_chat_message_to_id_fkey FOREIGN KEY (to_id) REFERENCES im_chat_session(id) ON DELETE CASCADE;


--
-- Name: im_chat_message_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_message
    ADD CONSTRAINT im_chat_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_presence_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_presence
    ADD CONSTRAINT im_chat_presence_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_presence_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_presence
    ADD CONSTRAINT im_chat_presence_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: im_chat_presence_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_presence
    ADD CONSTRAINT im_chat_presence_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_session_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session
    ADD CONSTRAINT im_chat_session_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_session_res_users_rel_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session_res_users_rel
    ADD CONSTRAINT im_chat_session_res_users_rel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_session_res_users_rel_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session_res_users_rel
    ADD CONSTRAINT im_chat_session_res_users_rel_session_id_fkey FOREIGN KEY (session_id) REFERENCES im_chat_session(id) ON DELETE CASCADE;


--
-- Name: im_chat_session_res_users_rel_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session_res_users_rel
    ADD CONSTRAINT im_chat_session_res_users_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: im_chat_session_res_users_rel_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session_res_users_rel
    ADD CONSTRAINT im_chat_session_res_users_rel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: im_chat_session_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY im_chat_session
    ADD CONSTRAINT im_chat_session_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: invoice_merge_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY invoice_merge
    ADD CONSTRAINT invoice_merge_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: invoice_merge_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY invoice_merge
    ADD CONSTRAINT invoice_merge_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_client_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_client
    ADD CONSTRAINT ir_act_client_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_client_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_client
    ADD CONSTRAINT ir_act_client_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_report_xml_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_report_xml
    ADD CONSTRAINT ir_act_report_xml_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_report_xml_paperformat_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_report_xml
    ADD CONSTRAINT ir_act_report_xml_paperformat_id_fkey FOREIGN KEY (paperformat_id) REFERENCES report_paperformat(id) ON DELETE SET NULL;


--
-- Name: ir_act_report_xml_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_report_xml
    ADD CONSTRAINT ir_act_report_xml_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_crud_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_crud_model_id_fkey FOREIGN KEY (crud_model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_link_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_link_field_id_fkey FOREIGN KEY (link_field_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_menu_ir_values_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_menu_ir_values_id_fkey FOREIGN KEY (menu_ir_values_id) REFERENCES ir_values(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_act_server_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_model_object_field_fkey FOREIGN KEY (model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_sub_model_object_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_sub_model_object_field_fkey FOREIGN KEY (sub_model_object_field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_sub_object_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_sub_object_fkey FOREIGN KEY (sub_object) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_template_id_fkey FOREIGN KEY (template_id) REFERENCES email_template(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_wkf_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_wkf_field_id_fkey FOREIGN KEY (wkf_field_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_wkf_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_wkf_model_id_fkey FOREIGN KEY (wkf_model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_wkf_transition_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_wkf_transition_id_fkey FOREIGN KEY (wkf_transition_id) REFERENCES wkf_transition(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_url_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_url
    ADD CONSTRAINT ir_act_url_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_url_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_url
    ADD CONSTRAINT ir_act_url_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_group_rel_act_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_act_id_fkey FOREIGN KEY (act_id) REFERENCES ir_act_window(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_group_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_search_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_search_view_id_fkey FOREIGN KEY (search_view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_act_window_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_act_window_id_fkey FOREIGN KEY (act_window_id) REFERENCES ir_act_window(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_view_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_create_uid_fkey1; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_create_uid_fkey1 FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_write_uid_fkey1; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_write_uid_fkey1 FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_config_parameter_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_config_parameter_groups_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_config_parameter_groups_rel
    ADD CONSTRAINT ir_config_parameter_groups_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_config_parameter_groups_rel_icp_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_config_parameter_groups_rel
    ADD CONSTRAINT ir_config_parameter_groups_rel_icp_id_fkey FOREIGN KEY (icp_id) REFERENCES ir_config_parameter(id) ON DELETE CASCADE;


--
-- Name: ir_config_parameter_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_default_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE SET NULL;


--
-- Name: ir_exports_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_line_export_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_export_id_fkey FOREIGN KEY (export_id) REFERENCES ir_exports(id) ON DELETE CASCADE;


--
-- Name: ir_exports_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_fields_converter_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_fields_converter
    ADD CONSTRAINT ir_fields_converter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_fields_converter_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_fields_converter
    ADD CONSTRAINT ir_fields_converter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_filters_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_filters_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_filters_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_logging_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_logging
    ADD CONSTRAINT ir_logging_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_mail_server_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_mail_server_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_access_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_access_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_model_access_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_model_access_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_constraint_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_constraint_model_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_model_fkey FOREIGN KEY (model) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_model_constraint_module_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_module_fkey FOREIGN KEY (module) REFERENCES ir_module_module(id) ON DELETE SET NULL;


--
-- Name: ir_model_constraint_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_constraint
    ADD CONSTRAINT ir_model_constraint_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_data_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_data_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_fields_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_fields_group_rel_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_serialization_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_serialization_field_id_fkey FOREIGN KEY (serialization_field_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_relation_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_relation
    ADD CONSTRAINT ir_model_relation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_relation_model_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_relation
    ADD CONSTRAINT ir_model_relation_model_fkey FOREIGN KEY (model) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_model_relation_module_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_relation
    ADD CONSTRAINT ir_model_relation_module_fkey FOREIGN KEY (module) REFERENCES ir_module_module(id) ON DELETE SET NULL;


--
-- Name: ir_model_relation_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model_relation
    ADD CONSTRAINT ir_model_relation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_dependency_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_dependency_module_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module(id) ON DELETE CASCADE;


--
-- Name: ir_module_module_dependency_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_property_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_property_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_property_fields_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_fields_id_fkey FOREIGN KEY (fields_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_property_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_rule_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_rule_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_rule_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_col1_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_col1_fkey FOREIGN KEY (col1) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: ir_server_object_lines_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_translation_lang_fkey_res_lang; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_translation
    ADD CONSTRAINT ir_translation_lang_fkey_res_lang FOREIGN KEY (lang) REFERENCES res_lang(code);


--
-- Name: ir_ui_menu_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_menu_group_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_ui_menu_group_rel_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE CASCADE;


--
-- Name: ir_ui_menu_mail_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_mail_group_id_fkey FOREIGN KEY (mail_group_id) REFERENCES mail_group(id) ON DELETE SET NULL;


--
-- Name: ir_ui_menu_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_ui_menu(id) ON DELETE RESTRICT;


--
-- Name: ir_ui_menu_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_custom_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_custom_ref_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_ref_id_fkey FOREIGN KEY (ref_id) REFERENCES ir_ui_view(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_custom_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_custom_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_group_rel
    ADD CONSTRAINT ir_ui_view_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_group_rel_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view_group_rel
    ADD CONSTRAINT ir_ui_view_group_rel_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_inherit_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_inherit_id_fkey FOREIGN KEY (inherit_id) REFERENCES ir_ui_view(id) ON DELETE RESTRICT;


--
-- Name: ir_ui_view_model_data_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_model_data_id_fkey FOREIGN KEY (model_data_id) REFERENCES ir_model_data(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_values_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: ir_values_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_values_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_values_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_values_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ledger_journal_rel_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ledger_journal_rel
    ADD CONSTRAINT ledger_journal_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_analytic_journal(id) ON DELETE CASCADE;


--
-- Name: ledger_journal_rel_ledger_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY ledger_journal_rel
    ADD CONSTRAINT ledger_journal_rel_ledger_id_fkey FOREIGN KEY (ledger_id) REFERENCES account_analytic_cost_ledger_journal_report(id) ON DELETE CASCADE;


--
-- Name: mail_alias_alias_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_alias_model_id_fkey FOREIGN KEY (alias_model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: mail_alias_alias_parent_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_alias_parent_model_id_fkey FOREIGN KEY (alias_parent_model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: mail_alias_alias_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_alias_user_id_fkey FOREIGN KEY (alias_user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_alias_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_alias_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_alias
    ADD CONSTRAINT mail_alias_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_ir_attachments_rel_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message_ir_attachments_rel
    ADD CONSTRAINT mail_compose_message_ir_attachments_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE CASCADE;


--
-- Name: mail_compose_message_ir_attachments_rel_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message_ir_attachments_rel
    ADD CONSTRAINT mail_compose_message_ir_attachments_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES mail_compose_message(id) ON DELETE CASCADE;


--
-- Name: mail_compose_message_mail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_res_partner_rel_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message_res_partner_rel
    ADD CONSTRAINT mail_compose_message_res_partner_rel_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_compose_message_res_partner_rel_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message_res_partner_rel
    ADD CONSTRAINT mail_compose_message_res_partner_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES mail_compose_message(id) ON DELETE CASCADE;


--
-- Name: mail_compose_message_subtype_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_subtype_id_fkey FOREIGN KEY (subtype_id) REFERENCES mail_message_subtype(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_template_id_fkey FOREIGN KEY (template_id) REFERENCES email_template(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_followers_mail_message_subtype_rel
    ADD CONSTRAINT mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey FOREIGN KEY (mail_message_subtype_id) REFERENCES mail_message_subtype(id) ON DELETE CASCADE;


--
-- Name: mail_followers_mail_message_subtype_rel_mail_followers_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_followers_mail_message_subtype_rel
    ADD CONSTRAINT mail_followers_mail_message_subtype_rel_mail_followers_id_fkey FOREIGN KEY (mail_followers_id) REFERENCES mail_followers(id) ON DELETE CASCADE;


--
-- Name: mail_followers_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_followers
    ADD CONSTRAINT mail_followers_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_group_alias_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias(id) ON DELETE RESTRICT;


--
-- Name: mail_group_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_group_group_public_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_group_public_id_fkey FOREIGN KEY (group_public_id) REFERENCES res_groups(id) ON DELETE SET NULL;


--
-- Name: mail_group_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE CASCADE;


--
-- Name: mail_group_res_group_rel_groups_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group_res_group_rel
    ADD CONSTRAINT mail_group_res_group_rel_groups_id_fkey FOREIGN KEY (groups_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: mail_group_res_group_rel_mail_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group_res_group_rel
    ADD CONSTRAINT mail_group_res_group_rel_mail_group_id_fkey FOREIGN KEY (mail_group_id) REFERENCES mail_group(id) ON DELETE CASCADE;


--
-- Name: mail_group_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_group
    ADD CONSTRAINT mail_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_mail_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail
    ADD CONSTRAINT mail_mail_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_mail_fetchmail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail
    ADD CONSTRAINT mail_mail_fetchmail_server_id_fkey FOREIGN KEY (fetchmail_server_id) REFERENCES fetchmail_server(id) ON DELETE SET NULL;


--
-- Name: mail_mail_mail_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail
    ADD CONSTRAINT mail_mail_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: mail_mail_res_partner_rel_mail_mail_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail_res_partner_rel
    ADD CONSTRAINT mail_mail_res_partner_rel_mail_mail_id_fkey FOREIGN KEY (mail_mail_id) REFERENCES mail_mail(id) ON DELETE CASCADE;


--
-- Name: mail_mail_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail_res_partner_rel
    ADD CONSTRAINT mail_mail_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_mail_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_mail
    ADD CONSTRAINT mail_mail_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mail_message_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_mail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server(id) ON DELETE SET NULL;


--
-- Name: mail_message_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message(id) ON DELETE SET NULL;


--
-- Name: mail_message_res_partner_rel_mail_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_res_partner_rel
    ADD CONSTRAINT mail_message_res_partner_rel_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: mail_message_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_res_partner_rel
    ADD CONSTRAINT mail_message_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_message_subtype_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_subtype
    ADD CONSTRAINT mail_message_subtype_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_subtype_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_subtype_id_fkey FOREIGN KEY (subtype_id) REFERENCES mail_message_subtype(id) ON DELETE SET NULL;


--
-- Name: mail_message_subtype_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_subtype
    ADD CONSTRAINT mail_message_subtype_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message_subtype(id) ON DELETE SET NULL;


--
-- Name: mail_message_subtype_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message_subtype
    ADD CONSTRAINT mail_message_subtype_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_notification_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_notification
    ADD CONSTRAINT mail_notification_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: mail_notification_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_notification
    ADD CONSTRAINT mail_notification_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_vote_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_vote
    ADD CONSTRAINT mail_vote_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: mail_vote_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_vote
    ADD CONSTRAINT mail_vote_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: mail_wizard_invite_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_wizard_invite
    ADD CONSTRAINT mail_wizard_invite_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_wizard_invite_res_partner_rel
    ADD CONSTRAINT mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey FOREIGN KEY (mail_wizard_invite_id) REFERENCES mail_wizard_invite(id) ON DELETE CASCADE;


--
-- Name: mail_wizard_invite_res_partner_rel_res_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_wizard_invite_res_partner_rel
    ADD CONSTRAINT mail_wizard_invite_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: mail_wizard_invite_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mail_wizard_invite
    ADD CONSTRAINT mail_wizard_invite_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: make_procurement_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: make_procurement_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: make_procurement_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: make_procurement_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: make_procurement_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY make_procurement
    ADD CONSTRAINT make_procurement_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: meeting_category_rel_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY meeting_category_rel
    ADD CONSTRAINT meeting_category_rel_event_id_fkey FOREIGN KEY (event_id) REFERENCES calendar_event(id) ON DELETE CASCADE;


--
-- Name: meeting_category_rel_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY meeting_category_rel
    ADD CONSTRAINT meeting_category_rel_type_id_fkey FOREIGN KEY (type_id) REFERENCES calendar_event_type(id) ON DELETE CASCADE;


--
-- Name: merge_opportunity_rel_merge_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_merge_id_fkey FOREIGN KEY (merge_id) REFERENCES crm_merge_opportunity(id) ON DELETE CASCADE;


--
-- Name: merge_opportunity_rel_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: message_attachment_rel_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE CASCADE;


--
-- Name: message_attachment_rel_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_bom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_bom_id_fkey FOREIGN KEY (bom_id) REFERENCES mrp_bom(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_mrp_property_rel_mrp_bom_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line_mrp_property_rel
    ADD CONSTRAINT mrp_bom_line_mrp_property_rel_mrp_bom_line_id_fkey FOREIGN KEY (mrp_bom_line_id) REFERENCES mrp_bom_line(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_line_mrp_property_rel_mrp_property_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line_mrp_property_rel
    ADD CONSTRAINT mrp_bom_line_mrp_property_rel_mrp_property_id_fkey FOREIGN KEY (mrp_property_id) REFERENCES mrp_property(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_line_product_attribute__product_attribute_value_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line_product_attribute_value_rel
    ADD CONSTRAINT mrp_bom_line_product_attribute__product_attribute_value_id_fkey FOREIGN KEY (product_attribute_value_id) REFERENCES product_attribute_value(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_line_product_attribute_value_rel_mrp_bom_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line_product_attribute_value_rel
    ADD CONSTRAINT mrp_bom_line_product_attribute_value_rel_mrp_bom_line_id_fkey FOREIGN KEY (mrp_bom_line_id) REFERENCES mrp_bom_line(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_routing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_routing_id_fkey FOREIGN KEY (routing_id) REFERENCES mrp_routing(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_line
    ADD CONSTRAINT mrp_bom_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_mrp_property_rel_mrp_bom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_mrp_property_rel
    ADD CONSTRAINT mrp_bom_mrp_property_rel_mrp_bom_id_fkey FOREIGN KEY (mrp_bom_id) REFERENCES mrp_bom(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_mrp_property_rel_mrp_property_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom_mrp_property_rel
    ADD CONSTRAINT mrp_bom_mrp_property_rel_mrp_property_id_fkey FOREIGN KEY (mrp_property_id) REFERENCES mrp_property(id) ON DELETE CASCADE;


--
-- Name: mrp_bom_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_routing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_routing_id_fkey FOREIGN KEY (routing_id) REFERENCES mrp_routing(id) ON DELETE SET NULL;


--
-- Name: mrp_bom_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_bom
    ADD CONSTRAINT mrp_bom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_config_settings
    ADD CONSTRAINT mrp_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_config_settings
    ADD CONSTRAINT mrp_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_price_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_price
    ADD CONSTRAINT mrp_product_price_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_price_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_price
    ADD CONSTRAINT mrp_product_price_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce
    ADD CONSTRAINT mrp_product_produce_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_line_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_line_produce_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_produce_id_fkey FOREIGN KEY (produce_id) REFERENCES mrp_product_produce(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce_line
    ADD CONSTRAINT mrp_product_produce_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce
    ADD CONSTRAINT mrp_product_produce_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce
    ADD CONSTRAINT mrp_product_produce_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_product_produce_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_product_produce
    ADD CONSTRAINT mrp_product_produce_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_bom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_bom_id_fkey FOREIGN KEY (bom_id) REFERENCES mrp_bom(id) ON DELETE SET NULL;


--
-- Name: mrp_production_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: mrp_production_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_production_location_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_location_src_id_fkey FOREIGN KEY (location_src_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_production_move_prod_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_move_prod_id_fkey FOREIGN KEY (move_prod_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_production_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_production_id_fkey FOREIGN KEY (production_id) REFERENCES mrp_production(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_product_line
    ADD CONSTRAINT mrp_production_product_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_production_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_production_routing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_routing_id_fkey FOREIGN KEY (routing_id) REFERENCES mrp_routing(id) ON DELETE SET NULL;


--
-- Name: mrp_production_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_workcenter_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_workcenter_line
    ADD CONSTRAINT mrp_production_workcenter_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_workcenter_line_production_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_workcenter_line
    ADD CONSTRAINT mrp_production_workcenter_line_production_id_fkey FOREIGN KEY (production_id) REFERENCES mrp_production(id) ON DELETE CASCADE;


--
-- Name: mrp_production_workcenter_line_workcenter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_workcenter_line
    ADD CONSTRAINT mrp_production_workcenter_line_workcenter_id_fkey FOREIGN KEY (workcenter_id) REFERENCES mrp_workcenter(id) ON DELETE SET NULL;


--
-- Name: mrp_production_workcenter_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production_workcenter_line
    ADD CONSTRAINT mrp_production_workcenter_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_production_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_production
    ADD CONSTRAINT mrp_production_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_property_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property
    ADD CONSTRAINT mrp_property_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_property_group_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property_group
    ADD CONSTRAINT mrp_property_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_property_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property
    ADD CONSTRAINT mrp_property_group_id_fkey FOREIGN KEY (group_id) REFERENCES mrp_property_group(id) ON DELETE SET NULL;


--
-- Name: mrp_property_group_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property_group
    ADD CONSTRAINT mrp_property_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_property_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_property
    ADD CONSTRAINT mrp_property_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_address_id_fkey FOREIGN KEY (address_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_cancel_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_cancel
    ADD CONSTRAINT mrp_repair_cancel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_cancel_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_cancel
    ADD CONSTRAINT mrp_repair_cancel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_fee_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_fee_invoice_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_invoice_line_id_fkey FOREIGN KEY (invoice_line_id) REFERENCES account_invoice_line(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_fee_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_fee_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_fee_repair_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_repair_id_fkey FOREIGN KEY (repair_id) REFERENCES mrp_repair(id) ON DELETE CASCADE;


--
-- Name: mrp_repair_fee_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_fee
    ADD CONSTRAINT mrp_repair_fee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_invoice_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_invoice_line_id_fkey FOREIGN KEY (invoice_line_id) REFERENCES account_invoice_line(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_line_repair_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_repair_id_fkey FOREIGN KEY (repair_id) REFERENCES mrp_repair(id) ON DELETE CASCADE;


--
-- Name: mrp_repair_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_line
    ADD CONSTRAINT mrp_repair_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_make_invoice_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_make_invoice
    ADD CONSTRAINT mrp_repair_make_invoice_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_make_invoice_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair_make_invoice
    ADD CONSTRAINT mrp_repair_make_invoice_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_partner_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_partner_invoice_id_fkey FOREIGN KEY (partner_invoice_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_repair_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_repair
    ADD CONSTRAINT mrp_repair_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing
    ADD CONSTRAINT mrp_routing_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing
    ADD CONSTRAINT mrp_routing_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing
    ADD CONSTRAINT mrp_routing_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_workcenter_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_workcenter_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_workcenter_routing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_routing_id_fkey FOREIGN KEY (routing_id) REFERENCES mrp_routing(id) ON DELETE CASCADE;


--
-- Name: mrp_routing_workcenter_workcenter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_workcenter_id_fkey FOREIGN KEY (workcenter_id) REFERENCES mrp_workcenter(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_workcenter_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing_workcenter
    ADD CONSTRAINT mrp_routing_workcenter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_routing_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_routing
    ADD CONSTRAINT mrp_routing_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_subproduct_bom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_bom_id_fkey FOREIGN KEY (bom_id) REFERENCES mrp_bom(id) ON DELETE CASCADE;


--
-- Name: mrp_subproduct_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_subproduct_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_subproduct_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: mrp_subproduct_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_subproduct
    ADD CONSTRAINT mrp_subproduct_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_costs_cycle_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_costs_cycle_account_id_fkey FOREIGN KEY (costs_cycle_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_costs_general_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_costs_general_account_id_fkey FOREIGN KEY (costs_general_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_costs_hour_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_costs_hour_account_id_fkey FOREIGN KEY (costs_hour_account_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_costs_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_costs_journal_id_fkey FOREIGN KEY (costs_journal_id) REFERENCES account_analytic_journal(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_load_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter_load
    ADD CONSTRAINT mrp_workcenter_load_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_load_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter_load
    ADD CONSTRAINT mrp_workcenter_load_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: mrp_workcenter_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource(id) ON DELETE CASCADE;


--
-- Name: mrp_workcenter_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY mrp_workcenter
    ADD CONSTRAINT mrp_workcenter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_company_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_company_dest_id_fkey FOREIGN KEY (company_dest_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_note_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_note
    ADD CONSTRAINT note_note_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_note_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_note
    ADD CONSTRAINT note_note_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_note_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_note
    ADD CONSTRAINT note_note_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_stage_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage
    ADD CONSTRAINT note_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_stage_rel_note_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage_rel
    ADD CONSTRAINT note_stage_rel_note_id_fkey FOREIGN KEY (note_id) REFERENCES note_note(id) ON DELETE CASCADE;


--
-- Name: note_stage_rel_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage_rel
    ADD CONSTRAINT note_stage_rel_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES note_stage(id) ON DELETE CASCADE;


--
-- Name: note_stage_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage
    ADD CONSTRAINT note_stage_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: note_stage_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_stage
    ADD CONSTRAINT note_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_tag_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_tag
    ADD CONSTRAINT note_tag_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_tag_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_tag
    ADD CONSTRAINT note_tag_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: note_tags_rel_note_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_tags_rel
    ADD CONSTRAINT note_tags_rel_note_id_fkey FOREIGN KEY (note_id) REFERENCES note_note(id) ON DELETE CASCADE;


--
-- Name: note_tags_rel_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY note_tags_rel
    ADD CONSTRAINT note_tags_rel_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES note_tag(id) ON DELETE CASCADE;


--
-- Name: osv_memory_autovacuum_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: osv_memory_autovacuum_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pad_common_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pad_common
    ADD CONSTRAINT pad_common_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pad_common_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pad_common
    ADD CONSTRAINT pad_common_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: payment_acquirer_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_acquirer
    ADD CONSTRAINT payment_acquirer_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: payment_acquirer_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_acquirer
    ADD CONSTRAINT payment_acquirer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: payment_acquirer_view_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_acquirer
    ADD CONSTRAINT payment_acquirer_view_template_id_fkey FOREIGN KEY (view_template_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: payment_acquirer_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_acquirer
    ADD CONSTRAINT payment_acquirer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_acquirer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_acquirer_id_fkey FOREIGN KEY (acquirer_id) REFERENCES payment_acquirer(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_partner_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_partner_country_id_fkey FOREIGN KEY (partner_country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: payment_transaction_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY payment_transaction
    ADD CONSTRAINT payment_transaction_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pricelist_partnerinfo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pricelist_partnerinfo_suppinfo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_suppinfo_id_fkey FOREIGN KEY (suppinfo_id) REFERENCES product_supplierinfo(id) ON DELETE CASCADE;


--
-- Name: pricelist_partnerinfo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_group_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_group
    ADD CONSTRAINT procurement_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_group_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_group
    ADD CONSTRAINT procurement_group_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: procurement_group_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_group
    ADD CONSTRAINT procurement_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_order_bom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_bom_id_fkey FOREIGN KEY (bom_id) REFERENCES mrp_bom(id) ON DELETE CASCADE;


--
-- Name: procurement_order_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: procurement_order_compute_all_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order_compute_all
    ADD CONSTRAINT procurement_order_compute_all_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_order_compute_all_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order_compute_all
    ADD CONSTRAINT procurement_order_compute_all_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_order_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_order_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_group_id_fkey FOREIGN KEY (group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: procurement_order_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: procurement_order_move_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_move_dest_id_fkey FOREIGN KEY (move_dest_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: procurement_order_orderpoint_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_orderpoint_id_fkey FOREIGN KEY (orderpoint_id) REFERENCES stock_warehouse_orderpoint(id) ON DELETE SET NULL;


--
-- Name: procurement_order_partner_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_partner_dest_id_fkey FOREIGN KEY (partner_dest_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: procurement_order_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: procurement_order_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: procurement_order_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: procurement_order_production_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_production_id_fkey FOREIGN KEY (production_id) REFERENCES mrp_production(id) ON DELETE SET NULL;


--
-- Name: procurement_order_purchase_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_purchase_line_id_fkey FOREIGN KEY (purchase_line_id) REFERENCES purchase_order_line(id) ON DELETE SET NULL;


--
-- Name: procurement_order_rule_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_rule_id_fkey FOREIGN KEY (rule_id) REFERENCES procurement_rule(id) ON DELETE SET NULL;


--
-- Name: procurement_order_sale_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_sale_line_id_fkey FOREIGN KEY (sale_line_id) REFERENCES sale_order_line(id) ON DELETE SET NULL;


--
-- Name: procurement_order_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: procurement_order_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_order
    ADD CONSTRAINT procurement_order_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_orderpoint_compute_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_orderpoint_compute
    ADD CONSTRAINT procurement_orderpoint_compute_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_orderpoint_compute_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_orderpoint_compute
    ADD CONSTRAINT procurement_orderpoint_compute_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_property_rel_procurement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_property_rel
    ADD CONSTRAINT procurement_property_rel_procurement_id_fkey FOREIGN KEY (procurement_id) REFERENCES procurement_order(id) ON DELETE CASCADE;


--
-- Name: procurement_property_rel_property_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_property_rel
    ADD CONSTRAINT procurement_property_rel_property_id_fkey FOREIGN KEY (property_id) REFERENCES mrp_property(id) ON DELETE CASCADE;


--
-- Name: procurement_rule_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_group_id_fkey FOREIGN KEY (group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_location_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_location_src_id_fkey FOREIGN KEY (location_src_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_partner_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_partner_address_id_fkey FOREIGN KEY (partner_address_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_picking_type_id_fkey FOREIGN KEY (picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_propagate_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_propagate_warehouse_id_fkey FOREIGN KEY (propagate_warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: procurement_rule_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY procurement_rule
    ADD CONSTRAINT procurement_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute
    ADD CONSTRAINT product_attribute_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_line_attribute_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line
    ADD CONSTRAINT product_attribute_line_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES product_attribute(id) ON DELETE RESTRICT;


--
-- Name: product_attribute_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line
    ADD CONSTRAINT product_attribute_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_line_product_attribute_value_rel_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line_product_attribute_value_rel
    ADD CONSTRAINT product_attribute_line_product_attribute_value_rel_line_id_fkey FOREIGN KEY (line_id) REFERENCES product_attribute_line(id) ON DELETE CASCADE;


--
-- Name: product_attribute_line_product_attribute_value_rel_val_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line_product_attribute_value_rel
    ADD CONSTRAINT product_attribute_line_product_attribute_value_rel_val_id_fkey FOREIGN KEY (val_id) REFERENCES product_attribute_value(id) ON DELETE CASCADE;


--
-- Name: product_attribute_line_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line
    ADD CONSTRAINT product_attribute_line_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_attribute_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_line
    ADD CONSTRAINT product_attribute_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_price_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_price
    ADD CONSTRAINT product_attribute_price_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_price_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_price
    ADD CONSTRAINT product_attribute_price_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_attribute_price_value_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_price
    ADD CONSTRAINT product_attribute_price_value_id_fkey FOREIGN KEY (value_id) REFERENCES product_attribute_value(id) ON DELETE CASCADE;


--
-- Name: product_attribute_price_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_price
    ADD CONSTRAINT product_attribute_price_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_value_attribute_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value
    ADD CONSTRAINT product_attribute_value_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES product_attribute(id) ON DELETE CASCADE;


--
-- Name: product_attribute_value_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value
    ADD CONSTRAINT product_attribute_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_value_product_product_rel_att_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value_product_product_rel
    ADD CONSTRAINT product_attribute_value_product_product_rel_att_id_fkey FOREIGN KEY (att_id) REFERENCES product_attribute_value(id) ON DELETE CASCADE;


--
-- Name: product_attribute_value_product_product_rel_prod_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value_product_product_rel
    ADD CONSTRAINT product_attribute_value_product_product_rel_prod_id_fkey FOREIGN KEY (prod_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: product_attribute_value_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute_value
    ADD CONSTRAINT product_attribute_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_attribute_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_attribute
    ADD CONSTRAINT product_attribute_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES product_category(id) ON DELETE CASCADE;


--
-- Name: product_category_removal_strategy_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_removal_strategy_id_fkey FOREIGN KEY (removal_strategy_id) REFERENCES product_removal(id) ON DELETE SET NULL;


--
-- Name: product_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_packaging_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_packaging_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_packaging_ul_container_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_ul_container_fkey FOREIGN KEY (ul_container) REFERENCES product_ul(id) ON DELETE SET NULL;


--
-- Name: product_packaging_ul_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_ul_fkey FOREIGN KEY (ul) REFERENCES product_ul(id) ON DELETE SET NULL;


--
-- Name: product_packaging_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_history_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_history
    ADD CONSTRAINT product_price_history_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_price_history_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_history
    ADD CONSTRAINT product_price_history_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_history_product_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_history
    ADD CONSTRAINT product_price_history_product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_price_history_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_history
    ADD CONSTRAINT product_price_history_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_list_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_list_price_list_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_price_list_fkey FOREIGN KEY (price_list) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: product_price_list_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_type_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: product_price_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_base_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_base_pricelist_id_fkey FOREIGN KEY (base_pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_price_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_price_version_id_fkey FOREIGN KEY (price_version_id) REFERENCES product_pricelist_version(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_version_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_version_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_version_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_version_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_product_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_product_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_product_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_putaway_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_putaway
    ADD CONSTRAINT product_putaway_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_putaway_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_putaway
    ADD CONSTRAINT product_putaway_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_removal_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_removal
    ADD CONSTRAINT product_removal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_removal_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_removal
    ADD CONSTRAINT product_removal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_supplier_taxes_rel_prod_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplier_taxes_rel
    ADD CONSTRAINT product_supplier_taxes_rel_prod_id_fkey FOREIGN KEY (prod_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_supplier_taxes_rel_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplier_taxes_rel
    ADD CONSTRAINT product_supplier_taxes_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: product_supplierinfo_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_supplierinfo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_supplierinfo_name_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_name_fkey FOREIGN KEY (name) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: product_supplierinfo_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_supplierinfo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_taxes_rel_prod_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_taxes_rel
    ADD CONSTRAINT product_taxes_rel_prod_id_fkey FOREIGN KEY (prod_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_taxes_rel_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_taxes_rel
    ADD CONSTRAINT product_taxes_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: product_template_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category(id) ON DELETE SET NULL;


--
-- Name: product_template_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_template_product_manager_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_product_manager_fkey FOREIGN KEY (product_manager) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_template_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_uom_po_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uom_po_id_fkey FOREIGN KEY (uom_po_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_uos_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uos_id_fkey FOREIGN KEY (uos_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_ul_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_ul_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_categ_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_categ_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_category_id_fkey FOREIGN KEY (category_id) REFERENCES product_uom_categ(id) ON DELETE CASCADE;


--
-- Name: product_uom_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_account_analytic_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_account_analytic_line
    ADD CONSTRAINT project_account_analytic_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_account_analytic_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_account_analytic_line
    ADD CONSTRAINT project_account_analytic_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category
    ADD CONSTRAINT project_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_category_project_issue_rel_project_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category_project_issue_rel
    ADD CONSTRAINT project_category_project_issue_rel_project_category_id_fkey FOREIGN KEY (project_category_id) REFERENCES project_category(id) ON DELETE CASCADE;


--
-- Name: project_category_project_issue_rel_project_issue_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category_project_issue_rel
    ADD CONSTRAINT project_category_project_issue_rel_project_issue_id_fkey FOREIGN KEY (project_issue_id) REFERENCES project_issue(id) ON DELETE CASCADE;


--
-- Name: project_category_project_task_rel_project_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category_project_task_rel
    ADD CONSTRAINT project_category_project_task_rel_project_category_id_fkey FOREIGN KEY (project_category_id) REFERENCES project_category(id) ON DELETE CASCADE;


--
-- Name: project_category_project_task_rel_project_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category_project_task_rel
    ADD CONSTRAINT project_category_project_task_rel_project_task_id_fkey FOREIGN KEY (project_task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_category
    ADD CONSTRAINT project_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_config_settings
    ADD CONSTRAINT project_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_config_settings_time_unit_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_config_settings
    ADD CONSTRAINT project_config_settings_time_unit_fkey FOREIGN KEY (time_unit) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: project_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_config_settings
    ADD CONSTRAINT project_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_issue_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: project_issue_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_issue_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: project_issue_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: project_issue_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: project_issue_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES project_task_type(id) ON DELETE SET NULL;


--
-- Name: project_issue_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE SET NULL;


--
-- Name: project_issue_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_issue_version_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue_version
    ADD CONSTRAINT project_issue_version_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_issue_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_version_id_fkey FOREIGN KEY (version_id) REFERENCES project_issue_version(id) ON DELETE SET NULL;


--
-- Name: project_issue_version_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue_version
    ADD CONSTRAINT project_issue_version_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_issue_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_issue
    ADD CONSTRAINT project_issue_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_project_alias_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias(id) ON DELETE RESTRICT;


--
-- Name: project_project_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE CASCADE;


--
-- Name: project_project_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_project_project_escalation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_project_escalation_id_fkey FOREIGN KEY (project_escalation_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: project_project_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_resource_calendar_id_fkey FOREIGN KEY (resource_calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: project_project_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: project_task_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_history_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_history_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_type_id_fkey FOREIGN KEY (type_id) REFERENCES project_task_type(id) ON DELETE SET NULL;


--
-- Name: project_task_history_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_parent_rel_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_parent_rel_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: project_task_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: project_task_reviewer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES project_task_type(id) ON DELETE SET NULL;


--
-- Name: project_task_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_type_rel_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE CASCADE;


--
-- Name: project_task_type_rel_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_type_id_fkey FOREIGN KEY (type_id) REFERENCES project_task_type(id) ON DELETE CASCADE;


--
-- Name: project_task_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: project_task_work_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_work_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_user_rel_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE CASCADE;


--
-- Name: project_user_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: purchase_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_config_settings
    ADD CONSTRAINT purchase_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_config_settings
    ADD CONSTRAINT purchase_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_invoice_rel_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_invoice_rel
    ADD CONSTRAINT purchase_invoice_rel_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE CASCADE;


--
-- Name: purchase_invoice_rel_purchase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_invoice_rel
    ADD CONSTRAINT purchase_invoice_rel_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES purchase_order(id) ON DELETE CASCADE;


--
-- Name: purchase_order_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: purchase_order_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: purchase_order_dest_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_dest_address_id_fkey FOREIGN KEY (dest_address_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: purchase_order_fiscal_position_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_fiscal_position_fkey FOREIGN KEY (fiscal_position) REFERENCES account_fiscal_position(id) ON DELETE SET NULL;


--
-- Name: purchase_order_group_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_group
    ADD CONSTRAINT purchase_order_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_group_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_group
    ADD CONSTRAINT purchase_order_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_incoterm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_incoterm_id_fkey FOREIGN KEY (incoterm_id) REFERENCES stock_incoterms(id) ON DELETE SET NULL;


--
-- Name: purchase_order_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_account_analytic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_account_analytic_id_fkey FOREIGN KEY (account_analytic_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_invoice_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line_invoice
    ADD CONSTRAINT purchase_order_line_invoice_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_invoice_rel_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line_invoice_rel
    ADD CONSTRAINT purchase_order_line_invoice_rel_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice_line(id) ON DELETE CASCADE;


--
-- Name: purchase_order_line_invoice_rel_order_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line_invoice_rel
    ADD CONSTRAINT purchase_order_line_invoice_rel_order_line_id_fkey FOREIGN KEY (order_line_id) REFERENCES purchase_order_line(id) ON DELETE CASCADE;


--
-- Name: purchase_order_line_invoice_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line_invoice
    ADD CONSTRAINT purchase_order_line_invoice_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_order_id_fkey FOREIGN KEY (order_id) REFERENCES purchase_order(id) ON DELETE CASCADE;


--
-- Name: purchase_order_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: purchase_order_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_line
    ADD CONSTRAINT purchase_order_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: purchase_order_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: purchase_order_payment_term_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_payment_term_id_fkey FOREIGN KEY (payment_term_id) REFERENCES account_payment_term(id) ON DELETE SET NULL;


--
-- Name: purchase_order_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_picking_type_id_fkey FOREIGN KEY (picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: purchase_order_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: purchase_order_related_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_related_location_id_fkey FOREIGN KEY (related_location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: purchase_order_taxe_ord_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_taxe
    ADD CONSTRAINT purchase_order_taxe_ord_id_fkey FOREIGN KEY (ord_id) REFERENCES purchase_order_line(id) ON DELETE CASCADE;


--
-- Name: purchase_order_taxe_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order_taxe
    ADD CONSTRAINT purchase_order_taxe_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: purchase_order_validator_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_validator_fkey FOREIGN KEY (validator) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: purchase_order_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: reconcile_account_rel_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY reconcile_account_rel
    ADD CONSTRAINT reconcile_account_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account(id) ON DELETE CASCADE;


--
-- Name: reconcile_account_rel_reconcile_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY reconcile_account_rel
    ADD CONSTRAINT reconcile_account_rel_reconcile_id_fkey FOREIGN KEY (reconcile_id) REFERENCES account_automatic_reconcile(id) ON DELETE CASCADE;


--
-- Name: rel_modules_langexport_module_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module(id) ON DELETE CASCADE;


--
-- Name: rel_modules_langexport_wiz_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_wiz_id_fkey FOREIGN KEY (wiz_id) REFERENCES base_language_export(id) ON DELETE CASCADE;


--
-- Name: rel_server_actions_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: rel_server_actions_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: repair_fee_line_tax_repair_fee_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY repair_fee_line_tax
    ADD CONSTRAINT repair_fee_line_tax_repair_fee_line_id_fkey FOREIGN KEY (repair_fee_line_id) REFERENCES mrp_repair_fee(id) ON DELETE CASCADE;


--
-- Name: repair_fee_line_tax_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY repair_fee_line_tax
    ADD CONSTRAINT repair_fee_line_tax_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: repair_operation_line_tax_repair_operation_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY repair_operation_line_tax
    ADD CONSTRAINT repair_operation_line_tax_repair_operation_line_id_fkey FOREIGN KEY (repair_operation_line_id) REFERENCES mrp_repair_line(id) ON DELETE CASCADE;


--
-- Name: repair_operation_line_tax_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY repair_operation_line_tax
    ADD CONSTRAINT repair_operation_line_tax_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: report_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report
    ADD CONSTRAINT report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: report_paperformat_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report_paperformat
    ADD CONSTRAINT report_paperformat_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: report_paperformat_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report_paperformat
    ADD CONSTRAINT report_paperformat_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: report_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY report
    ADD CONSTRAINT report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_bank_country_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_country_fkey FOREIGN KEY (country) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_bank_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_bank_state_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_state_fkey FOREIGN KEY (state) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: res_bank_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_company_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_company_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: res_company_default_cutoff_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_default_cutoff_journal_id_fkey FOREIGN KEY (default_cutoff_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: res_company_default_prepaid_expense_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_default_prepaid_expense_account_id_fkey FOREIGN KEY (default_prepaid_expense_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: res_company_default_prepaid_revenue_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_default_prepaid_revenue_account_id_fkey FOREIGN KEY (default_prepaid_revenue_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: res_company_expense_currency_exchange_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_expense_currency_exchange_account_id_fkey FOREIGN KEY (expense_currency_exchange_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: res_company_font_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_font_fkey FOREIGN KEY (font) REFERENCES res_font(id) ON DELETE SET NULL;


--
-- Name: res_company_income_currency_exchange_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_income_currency_exchange_account_id_fkey FOREIGN KEY (income_currency_exchange_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: res_company_internal_transit_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_internal_transit_location_id_fkey FOREIGN KEY (internal_transit_location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: res_company_paperformat_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_paperformat_id_fkey FOREIGN KEY (paperformat_id) REFERENCES report_paperformat(id) ON DELETE SET NULL;


--
-- Name: res_company_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_company_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_company_project_time_mode_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_project_time_mode_id_fkey FOREIGN KEY (project_time_mode_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: res_company_users_rel_cid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_cid_fkey FOREIGN KEY (cid) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: res_company_users_rel_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: res_company_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_installer_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_installer_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_settings
    ADD CONSTRAINT res_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config_settings
    ADD CONSTRAINT res_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: res_country_group_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_group
    ADD CONSTRAINT res_country_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_group_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_group
    ADD CONSTRAINT res_country_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_res_country_group_rel_res_country_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_res_country_group_rel
    ADD CONSTRAINT res_country_res_country_group_rel_res_country_group_id_fkey FOREIGN KEY (res_country_group_id) REFERENCES res_country_group(id) ON DELETE CASCADE;


--
-- Name: res_country_res_country_group_rel_res_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_res_country_group_rel
    ADD CONSTRAINT res_country_res_country_group_rel_res_country_id_fkey FOREIGN KEY (res_country_id) REFERENCES res_country(id) ON DELETE CASCADE;


--
-- Name: res_country_state_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_country_state_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_state_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_currency_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_font_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_font
    ADD CONSTRAINT res_font_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_font_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_font
    ADD CONSTRAINT res_font_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_groups_action_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_action_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_actions_todo(id) ON DELETE CASCADE;


--
-- Name: res_groups_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: res_groups_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_groups_implied_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_implied_rel_hid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_hid_fkey FOREIGN KEY (hid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_report_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_report_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_act_report_xml(id) ON DELETE CASCADE;


--
-- Name: res_groups_users_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_users_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: res_groups_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_lang_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_lang_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_bank_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_bank_fkey FOREIGN KEY (bank) REFERENCES res_bank(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_field_bank_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_bank_type_id_fkey FOREIGN KEY (bank_type_id) REFERENCES res_partner_bank_type(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_type_field_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_field_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner_category(id) ON DELETE CASCADE;


--
-- Name: res_partner_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_commercial_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_commercial_partner_id_fkey FOREIGN KEY (commercial_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_partner_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_partner_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE RESTRICT;


--
-- Name: res_partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_partner_res_partner_category_rel_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_res_partner_category_rel
    ADD CONSTRAINT res_partner_res_partner_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES res_partner_category(id) ON DELETE CASCADE;


--
-- Name: res_partner_res_partner_category_rel_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_res_partner_category_rel
    ADD CONSTRAINT res_partner_res_partner_category_rel_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: res_partner_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: res_partner_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE RESTRICT;


--
-- Name: res_partner_title_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_title_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title(id) ON DELETE SET NULL;


--
-- Name: res_partner_title_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_link_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_link_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_users_alias_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias(id) ON DELETE RESTRICT;


--
-- Name: res_users_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_users_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_users_default_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_default_section_id_fkey FOREIGN KEY (default_section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: res_users_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE RESTRICT;


--
-- Name: res_users_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_attendance_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_attendance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_attendance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_manager_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_manager_fkey FOREIGN KEY (manager) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_resource_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: resource_resource_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: rule_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: rule_group_rel_rule_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_rule_group_id_fkey FOREIGN KEY (rule_group_id) REFERENCES ir_rule(id) ON DELETE CASCADE;


--
-- Name: sale_advance_payment_inv_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_advance_payment_inv
    ADD CONSTRAINT sale_advance_payment_inv_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_advance_payment_inv_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_advance_payment_inv
    ADD CONSTRAINT sale_advance_payment_inv_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: sale_advance_payment_inv_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_advance_payment_inv
    ADD CONSTRAINT sale_advance_payment_inv_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_config_settings
    ADD CONSTRAINT sale_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_config_settings_time_unit_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_config_settings
    ADD CONSTRAINT sale_config_settings_time_unit_fkey FOREIGN KEY (time_unit) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: sale_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_config_settings
    ADD CONSTRAINT sale_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_exception_confirm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_confirm
    ADD CONSTRAINT sale_exception_confirm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_exception_confirm_sale_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_confirm
    ADD CONSTRAINT sale_exception_confirm_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES sale_order(id) ON DELETE SET NULL;


--
-- Name: sale_exception_confirm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_confirm
    ADD CONSTRAINT sale_exception_confirm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_exception_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception
    ADD CONSTRAINT sale_exception_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_exception_sale_exception_co_sale_exception_confirm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_sale_exception_confirm_rel
    ADD CONSTRAINT sale_exception_sale_exception_co_sale_exception_confirm_id_fkey FOREIGN KEY (sale_exception_confirm_id) REFERENCES sale_exception_confirm(id) ON DELETE CASCADE;


--
-- Name: sale_exception_sale_exception_confirm_re_sale_exception_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception_sale_exception_confirm_rel
    ADD CONSTRAINT sale_exception_sale_exception_confirm_re_sale_exception_id_fkey FOREIGN KEY (sale_exception_id) REFERENCES sale_exception(id) ON DELETE CASCADE;


--
-- Name: sale_exception_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_exception
    ADD CONSTRAINT sale_exception_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_make_invoice_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_make_invoice
    ADD CONSTRAINT sale_make_invoice_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_make_invoice_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_make_invoice
    ADD CONSTRAINT sale_make_invoice_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_member_rel_member_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_member_id_fkey FOREIGN KEY (member_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: sale_member_rel_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: sale_order_campaign_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES crm_tracking_campaign(id) ON DELETE SET NULL;


--
-- Name: sale_order_carrier_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_carrier_id_fkey FOREIGN KEY (carrier_id) REFERENCES delivery_carrier(id) ON DELETE SET NULL;


--
-- Name: sale_order_category_rel_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_category_rel
    ADD CONSTRAINT sale_order_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES crm_case_categ(id) ON DELETE CASCADE;


--
-- Name: sale_order_category_rel_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_category_rel
    ADD CONSTRAINT sale_order_category_rel_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order(id) ON DELETE CASCADE;


--
-- Name: sale_order_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: sale_order_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_exception_rel_exception_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_exception_rel
    ADD CONSTRAINT sale_order_exception_rel_exception_id_fkey FOREIGN KEY (exception_id) REFERENCES sale_exception(id) ON DELETE CASCADE;


--
-- Name: sale_order_exception_rel_sale_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_exception_rel
    ADD CONSTRAINT sale_order_exception_rel_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order(id) ON DELETE CASCADE;


--
-- Name: sale_order_fiscal_position_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_fiscal_position_fkey FOREIGN KEY (fiscal_position) REFERENCES account_fiscal_position(id) ON DELETE SET NULL;


--
-- Name: sale_order_incoterm_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_incoterm_fkey FOREIGN KEY (incoterm) REFERENCES stock_incoterms(id) ON DELETE SET NULL;


--
-- Name: sale_order_invoice_rel_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_invoice_rel
    ADD CONSTRAINT sale_order_invoice_rel_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice(id) ON DELETE CASCADE;


--
-- Name: sale_order_invoice_rel_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_invoice_rel
    ADD CONSTRAINT sale_order_invoice_rel_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_address_allotment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_address_allotment_id_fkey FOREIGN KEY (address_allotment_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_invoice_rel_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_invoice_rel
    ADD CONSTRAINT sale_order_line_invoice_rel_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_invoice_line(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_invoice_rel_order_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_invoice_rel
    ADD CONSTRAINT sale_order_line_invoice_rel_order_line_id_fkey FOREIGN KEY (order_line_id) REFERENCES sale_order_line(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_make_invoice_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_make_invoice
    ADD CONSTRAINT sale_order_line_make_invoice_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_make_invoice_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_make_invoice
    ADD CONSTRAINT sale_order_line_make_invoice_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_order_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_order_partner_id_fkey FOREIGN KEY (order_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE RESTRICT;


--
-- Name: sale_order_line_product_packaging_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_product_packaging_fkey FOREIGN KEY (product_packaging) REFERENCES product_packaging(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_property_rel_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_property_rel
    ADD CONSTRAINT sale_order_line_property_rel_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order_line(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_property_rel_property_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line_property_rel
    ADD CONSTRAINT sale_order_line_property_rel_property_id_fkey FOREIGN KEY (property_id) REFERENCES mrp_property(id) ON DELETE CASCADE;


--
-- Name: sale_order_line_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_salesman_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_salesman_id_fkey FOREIGN KEY (salesman_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_line
    ADD CONSTRAINT sale_order_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_main_exception_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_main_exception_id_fkey FOREIGN KEY (main_exception_id) REFERENCES sale_exception(id) ON DELETE SET NULL;


--
-- Name: sale_order_medium_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES crm_tracking_medium(id) ON DELETE SET NULL;


--
-- Name: sale_order_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_partner_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_partner_invoice_id_fkey FOREIGN KEY (partner_invoice_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_partner_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_partner_order_id_fkey FOREIGN KEY (partner_order_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_partner_shipping_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_partner_shipping_id_fkey FOREIGN KEY (partner_shipping_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: sale_order_payment_term_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_payment_term_fkey FOREIGN KEY (payment_term) REFERENCES account_payment_term(id) ON DELETE SET NULL;


--
-- Name: sale_order_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: sale_order_procurement_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_procurement_group_id_fkey FOREIGN KEY (procurement_group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: sale_order_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_project_id_fkey FOREIGN KEY (project_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: sale_order_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: sale_order_source_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_source_id_fkey FOREIGN KEY (source_id) REFERENCES crm_tracking_source(id) ON DELETE SET NULL;


--
-- Name: sale_order_tax_order_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_tax
    ADD CONSTRAINT sale_order_tax_order_line_id_fkey FOREIGN KEY (order_line_id) REFERENCES sale_order_line(id) ON DELETE CASCADE;


--
-- Name: sale_order_tax_tax_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_tax
    ADD CONSTRAINT sale_order_tax_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax(id) ON DELETE CASCADE;


--
-- Name: sale_order_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_type_id_fkey FOREIGN KEY (type_id) REFERENCES sale_order_type(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_refund_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_refund_journal_id_fkey FOREIGN KEY (refund_journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_sequence_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_sequence_id_fkey FOREIGN KEY (sequence_id) REFERENCES ir_sequence(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: sale_order_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order_type
    ADD CONSTRAINT sale_order_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: sale_order_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: sale_order_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY sale_order
    ADD CONSTRAINT sale_order_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: section_claim_stage_rel_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY section_claim_stage_rel
    ADD CONSTRAINT section_claim_stage_rel_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: section_claim_stage_rel_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY section_claim_stage_rel
    ADD CONSTRAINT section_claim_stage_rel_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_claim_stage(id) ON DELETE CASCADE;


--
-- Name: section_stage_rel_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: section_stage_rel_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_case_stage(id) ON DELETE CASCADE;


--
-- Name: share_wizard_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard
    ADD CONSTRAINT share_wizard_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_window(id) ON DELETE SET NULL;


--
-- Name: share_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard
    ADD CONSTRAINT share_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: share_wizard_result_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard_result_line
    ADD CONSTRAINT share_wizard_result_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: share_wizard_result_line_share_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard_result_line
    ADD CONSTRAINT share_wizard_result_line_share_wizard_id_fkey FOREIGN KEY (share_wizard_id) REFERENCES share_wizard(id) ON DELETE CASCADE;


--
-- Name: share_wizard_result_line_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard_result_line
    ADD CONSTRAINT share_wizard_result_line_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: share_wizard_result_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard_result_line
    ADD CONSTRAINT share_wizard_result_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: share_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY share_wizard
    ADD CONSTRAINT share_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_change_product_qty_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_change_product_qty_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_change_product_qty_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_change_product_qty_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_change_product_qty_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_product_qty
    ADD CONSTRAINT stock_change_product_qty_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_change_standard_price_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_standard_price
    ADD CONSTRAINT stock_change_standard_price_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_change_standard_price_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_change_standard_price
    ADD CONSTRAINT stock_change_standard_price_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_config_settings_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_config_settings
    ADD CONSTRAINT stock_config_settings_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_config_settings_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_config_settings
    ADD CONSTRAINT stock_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_config_settings_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_config_settings
    ADD CONSTRAINT stock_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_fixed_putaway_strat_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_category_id_fkey FOREIGN KEY (category_id) REFERENCES product_category(id) ON DELETE SET NULL;


--
-- Name: stock_fixed_putaway_strat_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_fixed_putaway_strat_fixed_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_fixed_location_id_fkey FOREIGN KEY (fixed_location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_fixed_putaway_strat_putaway_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_putaway_id_fkey FOREIGN KEY (putaway_id) REFERENCES product_putaway(id) ON DELETE SET NULL;


--
-- Name: stock_fixed_putaway_strat_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_fixed_putaway_strat
    ADD CONSTRAINT stock_fixed_putaway_strat_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_incoterms_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_incoterms
    ADD CONSTRAINT stock_incoterms_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_incoterms_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_incoterms
    ADD CONSTRAINT stock_incoterms_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_inventory_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_inventory_id_fkey FOREIGN KEY (inventory_id) REFERENCES stock_inventory(id) ON DELETE CASCADE;


--
-- Name: stock_inventory_line_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_package_id_fkey FOREIGN KEY (package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_prod_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_prod_lot_id_fkey FOREIGN KEY (prod_lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_product_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory_line
    ADD CONSTRAINT stock_inventory_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_package_id_fkey FOREIGN KEY (package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_inventory_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_inventory
    ADD CONSTRAINT stock_inventory_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_invoice_onshipping_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_invoice_onshipping
    ADD CONSTRAINT stock_invoice_onshipping_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_invoice_onshipping_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_invoice_onshipping
    ADD CONSTRAINT stock_invoice_onshipping_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE SET NULL;


--
-- Name: stock_invoice_onshipping_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_invoice_onshipping
    ADD CONSTRAINT stock_invoice_onshipping_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_location_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE CASCADE;


--
-- Name: stock_location_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE CASCADE;


--
-- Name: stock_location_path_location_from_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_location_from_id_fkey FOREIGN KEY (location_from_id) REFERENCES stock_location(id) ON DELETE CASCADE;


--
-- Name: stock_location_path_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_picking_type_id_fkey FOREIGN KEY (picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: stock_location_path_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_path
    ADD CONSTRAINT stock_location_path_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_putaway_strategy_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_putaway_strategy_id_fkey FOREIGN KEY (putaway_strategy_id) REFERENCES product_putaway(id) ON DELETE SET NULL;


--
-- Name: stock_location_removal_strategy_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_removal_strategy_id_fkey FOREIGN KEY (removal_strategy_id) REFERENCES product_removal(id) ON DELETE SET NULL;


--
-- Name: stock_location_route_categ_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_categ
    ADD CONSTRAINT stock_location_route_categ_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_categ_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_categ
    ADD CONSTRAINT stock_location_route_categ_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_location_route_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_route_move_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_move
    ADD CONSTRAINT stock_location_route_move_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_move_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_move
    ADD CONSTRAINT stock_location_route_move_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_procurement_procurement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_procurement
    ADD CONSTRAINT stock_location_route_procurement_procurement_id_fkey FOREIGN KEY (procurement_id) REFERENCES procurement_order(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_procurement_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route_procurement
    ADD CONSTRAINT stock_location_route_procurement_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE CASCADE;


--
-- Name: stock_location_route_supplied_wh_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_supplied_wh_id_fkey FOREIGN KEY (supplied_wh_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: stock_location_route_supplier_wh_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_supplier_wh_id_fkey FOREIGN KEY (supplier_wh_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: stock_location_route_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location_route
    ADD CONSTRAINT stock_location_route_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_location_valuation_in_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_valuation_in_account_id_fkey FOREIGN KEY (valuation_in_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: stock_location_valuation_out_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_valuation_out_account_id_fkey FOREIGN KEY (valuation_out_account_id) REFERENCES account_account(id) ON DELETE SET NULL;


--
-- Name: stock_location_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_location
    ADD CONSTRAINT stock_location_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_restrict_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_restrict_lot_id_fkey FOREIGN KEY (restrict_lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_move_consume_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_consume
    ADD CONSTRAINT stock_move_consume_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_consumed_for_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_consumed_for_fkey FOREIGN KEY (consumed_for) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_move_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_group_id_fkey FOREIGN KEY (group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: stock_move_inventory_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_inventory_id_fkey FOREIGN KEY (inventory_id) REFERENCES stock_inventory(id) ON DELETE SET NULL;


--
-- Name: stock_move_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_move_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_move_move_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_move_dest_id_fkey FOREIGN KEY (move_dest_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_move_operation_link_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_operation_link_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE CASCADE;


--
-- Name: stock_move_operation_link_operation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_operation_id_fkey FOREIGN KEY (operation_id) REFERENCES stock_pack_operation(id) ON DELETE CASCADE;


--
-- Name: stock_move_operation_link_reserved_quant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_reserved_quant_id_fkey FOREIGN KEY (reserved_quant_id) REFERENCES stock_quant(id) ON DELETE SET NULL;


--
-- Name: stock_move_operation_link_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_operation_link
    ADD CONSTRAINT stock_move_operation_link_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_origin_returned_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_origin_returned_move_id_fkey FOREIGN KEY (origin_returned_move_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_move_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_move_picking_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_picking_id_fkey FOREIGN KEY (picking_id) REFERENCES stock_picking(id) ON DELETE SET NULL;


--
-- Name: stock_move_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_picking_type_id_fkey FOREIGN KEY (picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_move_procurement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_procurement_id_fkey FOREIGN KEY (procurement_id) REFERENCES procurement_order(id) ON DELETE SET NULL;


--
-- Name: stock_move_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_move_product_packaging_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_product_packaging_fkey FOREIGN KEY (product_packaging) REFERENCES product_packaging(id) ON DELETE SET NULL;


--
-- Name: stock_move_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_move_product_uos_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_product_uos_fkey FOREIGN KEY (product_uos) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_move_production_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_production_id_fkey FOREIGN KEY (production_id) REFERENCES mrp_production(id) ON DELETE SET NULL;


--
-- Name: stock_move_purchase_line_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_purchase_line_id_fkey FOREIGN KEY (purchase_line_id) REFERENCES purchase_order_line(id) ON DELETE SET NULL;


--
-- Name: stock_move_push_rule_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_push_rule_id_fkey FOREIGN KEY (push_rule_id) REFERENCES stock_location_path(id) ON DELETE SET NULL;


--
-- Name: stock_move_raw_material_production_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_raw_material_production_id_fkey FOREIGN KEY (raw_material_production_id) REFERENCES mrp_production(id) ON DELETE SET NULL;


--
-- Name: stock_move_restrict_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_restrict_lot_id_fkey FOREIGN KEY (restrict_lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_move_restrict_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_restrict_partner_id_fkey FOREIGN KEY (restrict_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_move_rule_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_rule_id_fkey FOREIGN KEY (rule_id) REFERENCES procurement_rule(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_product_uom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_restrict_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_restrict_lot_id_fkey FOREIGN KEY (restrict_lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_move_scrap_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move_scrap
    ADD CONSTRAINT stock_move_scrap_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_move_split_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_split_from_fkey FOREIGN KEY (split_from) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_move_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: stock_move_weight_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_weight_uom_id_fkey FOREIGN KEY (weight_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_move_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_move
    ADD CONSTRAINT stock_move_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_currency_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_currency_fkey FOREIGN KEY (currency) REFERENCES res_currency(id) ON DELETE CASCADE;


--
-- Name: stock_pack_operation_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_location_dest_id_fkey FOREIGN KEY (location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_package_id_fkey FOREIGN KEY (package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_picking_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_picking_id_fkey FOREIGN KEY (picking_id) REFERENCES stock_picking(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: stock_pack_operation_product_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_pack_operation_result_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_result_package_id_fkey FOREIGN KEY (result_package_id) REFERENCES stock_quant_package(id) ON DELETE CASCADE;


--
-- Name: stock_pack_operation_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_pack_operation
    ADD CONSTRAINT stock_pack_operation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_picking_backorder_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_backorder_id_fkey FOREIGN KEY (backorder_id) REFERENCES stock_picking(id) ON DELETE SET NULL;


--
-- Name: stock_picking_carrier_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_carrier_id_fkey FOREIGN KEY (carrier_id) REFERENCES delivery_carrier(id) ON DELETE SET NULL;


--
-- Name: stock_picking_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_picking_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_picking_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_group_id_fkey FOREIGN KEY (group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: stock_picking_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_picking_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_picking_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_picking_type_id_fkey FOREIGN KEY (picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_default_location_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_default_location_dest_id_fkey FOREIGN KEY (default_location_dest_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_default_location_src_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_default_location_src_id_fkey FOREIGN KEY (default_location_src_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_return_picking_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_return_picking_type_id_fkey FOREIGN KEY (return_picking_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_sequence_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_sequence_id_fkey FOREIGN KEY (sequence_id) REFERENCES ir_sequence(id) ON DELETE SET NULL;


--
-- Name: stock_picking_type_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE CASCADE;


--
-- Name: stock_picking_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking_type
    ADD CONSTRAINT stock_picking_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_picking_weight_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_weight_uom_id_fkey FOREIGN KEY (weight_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_picking_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_picking
    ADD CONSTRAINT stock_picking_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_production_lot_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_production_lot
    ADD CONSTRAINT stock_production_lot_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_production_lot_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_production_lot
    ADD CONSTRAINT stock_production_lot_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_production_lot_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_production_lot
    ADD CONSTRAINT stock_production_lot_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_quant_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_quant_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_quant_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE RESTRICT;


--
-- Name: stock_quant_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE RESTRICT;


--
-- Name: stock_quant_move_rel_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_move_rel
    ADD CONSTRAINT stock_quant_move_rel_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE CASCADE;


--
-- Name: stock_quant_move_rel_quant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_move_rel
    ADD CONSTRAINT stock_quant_move_rel_quant_id_fkey FOREIGN KEY (quant_id) REFERENCES stock_quant(id) ON DELETE CASCADE;


--
-- Name: stock_quant_negative_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_negative_move_id_fkey FOREIGN KEY (negative_move_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_quant_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_package_id_fkey FOREIGN KEY (package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_packaging_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_packaging_id_fkey FOREIGN KEY (packaging_id) REFERENCES product_packaging(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES stock_quant_package(id) ON DELETE RESTRICT;


--
-- Name: stock_quant_package_ul_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_ul_id_fkey FOREIGN KEY (ul_id) REFERENCES product_ul(id) ON DELETE SET NULL;


--
-- Name: stock_quant_package_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant_package
    ADD CONSTRAINT stock_quant_package_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_quant_packaging_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_packaging_type_id_fkey FOREIGN KEY (packaging_type_id) REFERENCES product_packaging(id) ON DELETE SET NULL;


--
-- Name: stock_quant_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE RESTRICT;


--
-- Name: stock_quant_propagated_from_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_propagated_from_id_fkey FOREIGN KEY (propagated_from_id) REFERENCES stock_quant(id) ON DELETE SET NULL;


--
-- Name: stock_quant_reservation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_reservation_id_fkey FOREIGN KEY (reservation_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_quant_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_quant
    ADD CONSTRAINT stock_quant_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking
    ADD CONSTRAINT stock_return_picking_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_move_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES stock_move(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES stock_return_picking(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking_line
    ADD CONSTRAINT stock_return_picking_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_return_picking_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_return_picking
    ADD CONSTRAINT stock_return_picking_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_route_product_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_route_product
    ADD CONSTRAINT stock_route_product_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: stock_route_product_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_route_product
    ADD CONSTRAINT stock_route_product_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE CASCADE;


--
-- Name: stock_route_warehouse_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_route_warehouse
    ADD CONSTRAINT stock_route_warehouse_route_id_fkey FOREIGN KEY (route_id) REFERENCES stock_location_route(id) ON DELETE CASCADE;


--
-- Name: stock_route_warehouse_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_route_warehouse
    ADD CONSTRAINT stock_route_warehouse_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE CASCADE;


--
-- Name: stock_transfer_details_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details
    ADD CONSTRAINT stock_transfer_details_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_destinationloc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_destinationloc_id_fkey FOREIGN KEY (destinationloc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_lot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_lot_id_fkey FOREIGN KEY (lot_id) REFERENCES stock_production_lot(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_package_id_fkey FOREIGN KEY (package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_packop_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_packop_id_fkey FOREIGN KEY (packop_id) REFERENCES stock_pack_operation(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_product_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_result_package_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_result_package_id_fkey FOREIGN KEY (result_package_id) REFERENCES stock_quant_package(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_sourceloc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_sourceloc_id_fkey FOREIGN KEY (sourceloc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_transfer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_transfer_id_fkey FOREIGN KEY (transfer_id) REFERENCES stock_transfer_details(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_items_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details_items
    ADD CONSTRAINT stock_transfer_details_items_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_picking_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details
    ADD CONSTRAINT stock_transfer_details_picking_id_fkey FOREIGN KEY (picking_id) REFERENCES stock_picking(id) ON DELETE SET NULL;


--
-- Name: stock_transfer_details_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_transfer_details
    ADD CONSTRAINT stock_transfer_details_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_buy_pull_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_buy_pull_id_fkey FOREIGN KEY (buy_pull_id) REFERENCES procurement_rule(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_crossdock_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_crossdock_route_id_fkey FOREIGN KEY (crossdock_route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_default_resupply_wh_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_default_resupply_wh_id_fkey FOREIGN KEY (default_resupply_wh_id) REFERENCES stock_warehouse(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_delivery_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_delivery_route_id_fkey FOREIGN KEY (delivery_route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_in_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_in_type_id_fkey FOREIGN KEY (in_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_int_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_int_type_id_fkey FOREIGN KEY (int_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_lot_stock_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_lot_stock_id_fkey FOREIGN KEY (lot_stock_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_manufacture_pull_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_manufacture_pull_id_fkey FOREIGN KEY (manufacture_pull_id) REFERENCES procurement_rule(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_mto_pull_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_mto_pull_id_fkey FOREIGN KEY (mto_pull_id) REFERENCES procurement_rule(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_orderpoint_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_orderpoint_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_orderpoint_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_group_id_fkey FOREIGN KEY (group_id) REFERENCES procurement_group(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_orderpoint_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_location_id_fkey FOREIGN KEY (location_id) REFERENCES stock_location(id) ON DELETE CASCADE;


--
-- Name: stock_warehouse_orderpoint_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: stock_warehouse_orderpoint_warehouse_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES stock_warehouse(id) ON DELETE CASCADE;


--
-- Name: stock_warehouse_orderpoint_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse_orderpoint
    ADD CONSTRAINT stock_warehouse_orderpoint_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_out_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_out_type_id_fkey FOREIGN KEY (out_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_pack_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_pack_type_id_fkey FOREIGN KEY (pack_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_pick_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_pick_type_id_fkey FOREIGN KEY (pick_type_id) REFERENCES stock_picking_type(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_reception_route_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_reception_route_id_fkey FOREIGN KEY (reception_route_id) REFERENCES stock_location_route(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_view_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_view_location_id_fkey FOREIGN KEY (view_location_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_wh_input_stock_loc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_wh_input_stock_loc_id_fkey FOREIGN KEY (wh_input_stock_loc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_wh_output_stock_loc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_wh_output_stock_loc_id_fkey FOREIGN KEY (wh_output_stock_loc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_wh_pack_stock_loc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_wh_pack_stock_loc_id_fkey FOREIGN KEY (wh_pack_stock_loc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_wh_qc_stock_loc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_wh_qc_stock_loc_id_fkey FOREIGN KEY (wh_qc_stock_loc_id) REFERENCES stock_location(id) ON DELETE SET NULL;


--
-- Name: stock_warehouse_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_warehouse
    ADD CONSTRAINT stock_warehouse_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: stock_wh_resupply_table_supplied_wh_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_wh_resupply_table
    ADD CONSTRAINT stock_wh_resupply_table_supplied_wh_id_fkey FOREIGN KEY (supplied_wh_id) REFERENCES stock_warehouse(id) ON DELETE CASCADE;


--
-- Name: stock_wh_resupply_table_supplier_wh_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY stock_wh_resupply_table
    ADD CONSTRAINT stock_wh_resupply_table_supplier_wh_id_fkey FOREIGN KEY (supplier_wh_id) REFERENCES stock_warehouse(id) ON DELETE CASCADE;


--
-- Name: subscription_document_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document
    ADD CONSTRAINT subscription_document_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_document_fields_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document_fields
    ADD CONSTRAINT subscription_document_fields_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_document_fields_document_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document_fields
    ADD CONSTRAINT subscription_document_fields_document_id_fkey FOREIGN KEY (document_id) REFERENCES subscription_document(id) ON DELETE CASCADE;


--
-- Name: subscription_document_fields_field_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document_fields
    ADD CONSTRAINT subscription_document_fields_field_fkey FOREIGN KEY (field) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: subscription_document_fields_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document_fields
    ADD CONSTRAINT subscription_document_fields_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_document_model_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document
    ADD CONSTRAINT subscription_document_model_fkey FOREIGN KEY (model) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: subscription_document_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_document
    ADD CONSTRAINT subscription_document_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription
    ADD CONSTRAINT subscription_subscription_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_history_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription_history
    ADD CONSTRAINT subscription_subscription_history_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_history_subscription_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription_history
    ADD CONSTRAINT subscription_subscription_history_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES subscription_subscription(id) ON DELETE CASCADE;


--
-- Name: subscription_subscription_history_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription_history
    ADD CONSTRAINT subscription_subscription_history_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription
    ADD CONSTRAINT subscription_subscription_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription
    ADD CONSTRAINT subscription_subscription_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: subscription_subscription_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY subscription_subscription
    ADD CONSTRAINT subscription_subscription_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: temp_range_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY temp_range
    ADD CONSTRAINT temp_range_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: temp_range_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY temp_range
    ADD CONSTRAINT temp_range_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: validate_account_move_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move
    ADD CONSTRAINT validate_account_move_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: validate_account_move_lines_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move_lines
    ADD CONSTRAINT validate_account_move_lines_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: validate_account_move_lines_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move_lines
    ADD CONSTRAINT validate_account_move_lines_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: validate_account_move_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY validate_account_move
    ADD CONSTRAINT validate_account_move_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_chart_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_chart_template_id_fkey FOREIGN KEY (chart_template_id) REFERENCES account_chart_template(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_purchase_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_purchase_tax_fkey FOREIGN KEY (purchase_tax) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_sale_tax_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_sale_tax_fkey FOREIGN KEY (sale_tax) REFERENCES account_tax_template(id) ON DELETE SET NULL;


--
-- Name: wizard_multi_charts_accounts_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_multi_charts_accounts
    ADD CONSTRAINT wizard_multi_charts_accounts_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_validate_account_move_journal_journal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_validate_account_move_journal
    ADD CONSTRAINT wizard_validate_account_move_journal_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal(id) ON DELETE CASCADE;


--
-- Name: wizard_validate_account_move_journal_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_validate_account_move_journal
    ADD CONSTRAINT wizard_validate_account_move_journal_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES validate_account_move(id) ON DELETE CASCADE;


--
-- Name: wizard_validate_account_move_period_period_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_validate_account_move_period
    ADD CONSTRAINT wizard_validate_account_move_period_period_id_fkey FOREIGN KEY (period_id) REFERENCES account_period(id) ON DELETE CASCADE;


--
-- Name: wizard_validate_account_move_period_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_validate_account_move_period
    ADD CONSTRAINT wizard_validate_account_move_period_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES validate_account_move(id) ON DELETE CASCADE;


--
-- Name: wizard_valuation_history_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_valuation_history
    ADD CONSTRAINT wizard_valuation_history_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_valuation_history_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wizard_valuation_history
    ADD CONSTRAINT wizard_valuation_history_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_subflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_subflow_id_fkey FOREIGN KEY (subflow_id) REFERENCES wkf(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_wkf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_wkf_id_fkey FOREIGN KEY (wkf_id) REFERENCES wkf(id) ON DELETE CASCADE;


--
-- Name: wkf_activity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_instance_wkf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_instance
    ADD CONSTRAINT wkf_instance_wkf_id_fkey FOREIGN KEY (wkf_id) REFERENCES wkf(id) ON DELETE CASCADE;


--
-- Name: wkf_transition_act_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_act_from_fkey FOREIGN KEY (act_from) REFERENCES wkf_activity(id) ON DELETE CASCADE;


--
-- Name: wkf_transition_act_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_act_to_fkey FOREIGN KEY (act_to) REFERENCES wkf_activity(id) ON DELETE CASCADE;


--
-- Name: wkf_transition_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_transition_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE SET NULL;


--
-- Name: wkf_transition_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_triggers_instance_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_triggers_workitem_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_workitem_id_fkey FOREIGN KEY (workitem_id) REFERENCES wkf_workitem(id) ON DELETE CASCADE;


--
-- Name: wkf_witm_trans_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_witm_trans
    ADD CONSTRAINT wkf_witm_trans_inst_id_fkey FOREIGN KEY (inst_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_witm_trans_trans_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_witm_trans
    ADD CONSTRAINT wkf_witm_trans_trans_id_fkey FOREIGN KEY (trans_id) REFERENCES wkf_transition(id) ON DELETE CASCADE;


--
-- Name: wkf_workitem_act_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_act_id_fkey FOREIGN KEY (act_id) REFERENCES wkf_activity(id) ON DELETE CASCADE;


--
-- Name: wkf_workitem_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_inst_id_fkey FOREIGN KEY (inst_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_workitem_subflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_subflow_id_fkey FOREIGN KEY (subflow_id) REFERENCES wkf_instance(id) ON DELETE SET NULL;


--
-- Name: wkf_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: odoo
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: view_cjpl_user_name; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_user_name FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_user_name FROM postgres;
GRANT ALL ON TABLE view_cjpl_user_name TO postgres;
GRANT SELECT ON TABLE view_cjpl_user_name TO joomla;


--
-- Name: view_cjpl_contract_basic; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_contract_basic FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_contract_basic FROM odoo;
GRANT ALL ON TABLE view_cjpl_contract_basic TO odoo;
GRANT SELECT ON TABLE view_cjpl_contract_basic TO joomla;


--
-- Name: view_cjpl_invoice_list; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_invoice_list FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_invoice_list FROM postgres;
GRANT ALL ON TABLE view_cjpl_invoice_list TO postgres;
GRANT SELECT ON TABLE view_cjpl_invoice_list TO joomla;


--
-- Name: view_cjpl_xxx_partner_is_a_company; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_a_company FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_a_company FROM odoo;
GRANT ALL ON TABLE view_cjpl_xxx_partner_is_a_company TO odoo;
GRANT SELECT ON TABLE view_cjpl_xxx_partner_is_a_company TO joomla;


--
-- Name: view_cjpl_xxx_partner_is_not_company_but_has_parent; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_not_company_but_has_parent FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_not_company_but_has_parent FROM odoo;
GRANT ALL ON TABLE view_cjpl_xxx_partner_is_not_company_but_has_parent TO odoo;
GRANT SELECT ON TABLE view_cjpl_xxx_partner_is_not_company_but_has_parent TO joomla;


--
-- Name: view_cjpl_xxx_partner_is_not_company_with_no_parent; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_not_company_with_no_parent FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_partner_is_not_company_with_no_parent FROM odoo;
GRANT ALL ON TABLE view_cjpl_xxx_partner_is_not_company_with_no_parent TO odoo;
GRANT SELECT ON TABLE view_cjpl_xxx_partner_is_not_company_with_no_parent TO joomla;


--
-- Name: view_cjpl_partner_all_companies; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_partner_all_companies FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_partner_all_companies FROM odoo;
GRANT ALL ON TABLE view_cjpl_partner_all_companies TO odoo;
GRANT SELECT ON TABLE view_cjpl_partner_all_companies TO joomla;


--
-- Name: view_cjpl_invoice_list_new; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_invoice_list_new FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_invoice_list_new FROM postgres;
GRANT ALL ON TABLE view_cjpl_invoice_list_new TO postgres;
GRANT SELECT ON TABLE view_cjpl_invoice_list_new TO joomla;


--
-- Name: view_cjpl_xxx_contract_to_invoice_sale_typology; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_typology FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_typology FROM postgres;
GRANT ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_typology TO postgres;
GRANT SELECT ON TABLE view_cjpl_xxx_contract_to_invoice_sale_typology TO joomla;


--
-- Name: view_cjpl_xxx_direct_invoice_sale_typology; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_xxx_direct_invoice_sale_typology FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_direct_invoice_sale_typology FROM postgres;
GRANT ALL ON TABLE view_cjpl_xxx_direct_invoice_sale_typology TO postgres;
GRANT SELECT ON TABLE view_cjpl_xxx_direct_invoice_sale_typology TO joomla;


--
-- Name: view_cjpl_xxx_order_to_invoice_sale_typology; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_xxx_order_to_invoice_sale_typology FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_order_to_invoice_sale_typology FROM postgres;
GRANT ALL ON TABLE view_cjpl_xxx_order_to_invoice_sale_typology TO postgres;
GRANT SELECT ON TABLE view_cjpl_xxx_order_to_invoice_sale_typology TO joomla;


--
-- Name: view_cjpl_invoice_sale_typology; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_invoice_sale_typology FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_invoice_sale_typology FROM postgres;
GRANT ALL ON TABLE view_cjpl_invoice_sale_typology TO postgres;
GRANT SELECT ON TABLE view_cjpl_invoice_sale_typology TO joomla;


--
-- Name: view_cjpl_opportunity; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_opportunity FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_opportunity FROM postgres;
GRANT ALL ON TABLE view_cjpl_opportunity TO postgres;
GRANT SELECT ON TABLE view_cjpl_opportunity TO joomla;


--
-- Name: view_cjpl_order_basic; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_order_basic FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_order_basic FROM postgres;
GRANT ALL ON TABLE view_cjpl_order_basic TO postgres;
GRANT SELECT ON TABLE view_cjpl_order_basic TO joomla;


--
-- Name: view_cjpl_opportunity_sale_order; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_opportunity_sale_order FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_opportunity_sale_order FROM postgres;
GRANT ALL ON TABLE view_cjpl_opportunity_sale_order TO postgres;
GRANT SELECT ON TABLE view_cjpl_opportunity_sale_order TO joomla;


--
-- Name: view_cjpl_sale_orders_invoice_created_no_invoice_number; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_sale_orders_invoice_created_no_invoice_number FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_sale_orders_invoice_created_no_invoice_number FROM postgres;
GRANT ALL ON TABLE view_cjpl_sale_orders_invoice_created_no_invoice_number TO postgres;
GRANT SELECT ON TABLE view_cjpl_sale_orders_invoice_created_no_invoice_number TO joomla;


--
-- Name: view_cjpl_sale_orders_with_no_invoices_created; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_sale_orders_with_no_invoices_created FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_sale_orders_with_no_invoices_created FROM postgres;
GRANT ALL ON TABLE view_cjpl_sale_orders_with_no_invoices_created TO postgres;
GRANT SELECT ON TABLE view_cjpl_sale_orders_with_no_invoices_created TO joomla;


--
-- Name: view_cjpl_xxx_contract_to_invoice_sale_type; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_type FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_type FROM postgres;
GRANT ALL ON TABLE view_cjpl_xxx_contract_to_invoice_sale_type TO postgres;
GRANT SELECT ON TABLE view_cjpl_xxx_contract_to_invoice_sale_type TO joomla;


--
-- Name: view_cjpl_xxx_partner_not_company_no_parent_company; Type: ACL; Schema: public; Owner: odoo
--

REVOKE ALL ON TABLE view_cjpl_xxx_partner_not_company_no_parent_company FROM PUBLIC;
REVOKE ALL ON TABLE view_cjpl_xxx_partner_not_company_no_parent_company FROM odoo;
GRANT ALL ON TABLE view_cjpl_xxx_partner_not_company_no_parent_company TO odoo;
GRANT SELECT ON TABLE view_cjpl_xxx_partner_not_company_no_parent_company TO joomla;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public REVOKE ALL ON TABLES  FROM PUBLIC;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public REVOKE ALL ON TABLES  FROM postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT SELECT ON TABLES  TO joomla;


--
-- PostgreSQL database dump complete
--

